[
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter/AbstractFormatter(com.haulmont.yarg.formatters.factory.FormatterFactoryInput)|",
    "called": "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getRootBand()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/ImageContentInliner/ImageContentInliner()|",
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getOutputStream()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/BitmapContentInliner/BitmapContentInliner()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/HtmlContentInliner()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getReportTemplate()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getRootBand()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getOutputStream()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getOutputType()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/ImageContentInliner/ImageContentInliner()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/BitmapContentInliner/BitmapContentInliner()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/HtmlContentInliner()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/factory/FormatterFactoryInput/getReportTemplate()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+constructor:///com/haulmont/yarg/reporting/DataExtractorImpl/DataExtractorImpl(com.haulmont.yarg.loaders.factory.ReportLoaderFactory)|",
    "called": "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/createControllerFactory()|",
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/createContextFactory()|",
      "|java+method:///com/google/common/base/Preconditions/checkNotNull(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findVerticalDependencies()|",
    "called": "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/xlsx4j/sml/Workbook/getDefinedNames()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/DefinedNames/getDefinedName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/intersectsByVertical(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/CTDefinedName/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromFormula(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/Workbook/getDefinedNames()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/DefinedNames/getDefinedName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/intersectsByVertical(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+method:///org/xlsx4j/sml/CTDefinedName/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/hints/XslxHintProcessor/isHintDefinedName(java.lang.String)|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/CTDefinedName/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromFormula(java.lang.String)|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/createDocument()|",
    "called": "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/renderDocument()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/renderDocument()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/base/Preconditions/checkArgument(boolean,java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+constructor:///com/haulmont/yarg/formatters/impl/XlsxFormatter/XlsxFormatter(com.haulmont.yarg.formatters.factory.FormatterFactoryInput)|",
    "called": "|java+method:///com/google/common/collect/LinkedHashMultimap/create()|",
    "v1Body": [
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter/AbstractFormatter(com.haulmont.yarg.formatters.factory.FormatterFactoryInput)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/BandsForRanges/BandsForRanges()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/RangeDependencies()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/create()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "v2Body": [
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter/AbstractFormatter(com.haulmont.yarg.formatters.factory.FormatterFactoryInput)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/BandsForRanges/BandsForRanges()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/hints/XslxHintProcessor/XslxHintProcessor()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/RangeDependencies()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/create()|",
      "|java+constructor:///java/util/HashSet/HashSet()|"
    ],
    "affectedLib": "com.google.guava:guava:17.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastRow()|",
      "|java+method:///org/xlsx4j/sml/Cell/getParent()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Row,java.util.List)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Range/Range(java.lang.String,int,int,int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getWorksheet(org.xlsx4j.sml.Row)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getCellsByRange(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstColumn()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/createFakeTemplateCellsForEmptyOnes(com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.Map,java.util.List)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstRow()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyRowSettings(org.xlsx4j.sml.Row,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastColumn()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastRow()|",
      "|java+method:///org/xlsx4j/sml/Cell/getParent()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Row,java.util.List)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Range/Range(java.lang.String,int,int,int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getWorksheet(org.xlsx4j.sml.Row)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getCellsByRange(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstColumn()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/createFakeTemplateCellsForEmptyOnes(com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.Map,java.util.List)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstRow()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyRowSettings(org.xlsx4j.sml.Row,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastColumn()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getFirst(java.util.List)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/growPtgBounds(com.haulmont.yarg.formatters.impl.xls.Area,org.apache.poi.ss.formula.ptg.AreaPtg)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getTopLeft()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/getTemplateAreaByCoordinate(int,int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setLastColumn(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setLastRow(int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/getFirstRow()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getAlign()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/getFirstColumn()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setFirstRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getBottomRight()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setFirstColumn(int)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getTopLeft()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/getTemplateAreaByCoordinate(int,int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setLastColumn(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setLastRow(int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/getFirstRow()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getAlign()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/getFirstColumn()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setFirstRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getBottomRight()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/AreaPtg/setFirstColumn(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/parseScriptResult(java.util.List,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/createMap(java.util.Map)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/createMap(java.util.Map)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateCell(com.haulmont.yarg.formatters.impl.xls.Cell)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getTopLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/getTemplateAreaByCoordinate(int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/setCol(int)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/setRow(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getTopLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/getTemplateAreaByCoordinate(int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/setCol(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/setRow(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyPicturesFromTemplateToResult(org.apache.poi.hssf.usermodel.HSSFSheet,org.apache.poi.hssf.usermodel.HSSFSheet)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getCellFromTemplate(com.haulmont.yarg.formatters.impl.xls.Cell)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFPicturesHelper/getAllAnchors(org.apache.poi.hssf.record.EscherAggregate)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow1(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xls/Cell/Cell(int,int)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol1()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow1()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow2()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.hssf.usermodel.HSSFClientAnchor,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol2(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getEscherAggregate(org.apache.poi.hssf.usermodel.HSSFSheet)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol2()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getCellFromTemplate(com.haulmont.yarg.formatters.impl.xls.Cell)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFPicturesHelper/getAllAnchors(org.apache.poi.hssf.record.EscherAggregate)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow1(int)|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xls/Cell/Cell(int,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol1()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow1()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow2()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.hssf.usermodel.HSSFClientAnchor,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol2(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getEscherAggregate(org.apache.poi.hssf.usermodel.HSSFSheet)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol2()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/addDependency(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromCells(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getFirst(java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/BandsForRanges/add(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/addDependency(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromCells(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getFirst(java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/BandsForRanges/add(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getLast(java.util.List)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/updateRefPtg(com.haulmont.yarg.formatters.impl.xls.Area,com.haulmont.yarg.formatters.impl.xls.Area,org.apache.poi.ss.formula.ptg.RefPtg)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getTopLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/getTemplateAreaByCoordinate(int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/setRow(int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/getColumn()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/getRow()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/setColumn(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isEmpty(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Area/getTopLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/AreaDependencyManager/getTemplateAreaByCoordinate(int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/setRow(int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/getColumn()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isEmpty(java.util.Collection)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/getRow()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/poi/ss/formula/ptg/RefPtg/setColumn(int)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeHBand(com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/ensureNecessaryRowsCreated(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getBandRange(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/ensureNecessaryRowsCreated(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getBandRange(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/extractData(com.haulmont.yarg.structure.Report,java.util.Map,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/getBandData(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getChildren()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/addChildren(java.util.List)|",
      "|java+method:///com/haulmont/yarg/structure/Report/getRootBand()|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/createBands(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getFirstLevelBandDefinitionNames()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getChildren()|",
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/createBands(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionController/extractData(com.haulmont.yarg.reporting.extraction.ExtractionContext)|",
      "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionControllerFactory/defaultController()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/addChildren(java.util.List)|",
      "|java+method:///com/haulmont/yarg/structure/Report/getRootBand()|",
      "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionContextFactory/context(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getFirstLevelBandDefinitionNames()|"
    ],
    "affectedLib": "commons-collections:commons-collections:3.2.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader/putValue(java.util.Map,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$OutputValue,java.lang.Object)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getSynonym()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getValueName()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getSynonym()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getValueName()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromRange(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromCells(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromCells(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/util/converter/AbstractObjectToStringConverter/convertFromStringUnresolved(java.lang.Class,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///org/apache/commons/lang/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class%5B%5D)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/handleStringWithAliases(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/separateBandNameAndParameterName(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/AbstractFormatter$BandPathAndParameterName(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/AbstractFormatter$BandPathAndParameterName(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager/findPid(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Runtime/exec(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Runtime/exec(java.lang.String)|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/lang3/ObjectUtils/equals(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager$2/handle(org.docx4j.wml.Text)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/containsJustOneAlias(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/containsJustOneAlias(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/loadData(com.haulmont.yarg.structure.ReportQuery,com.haulmont.yarg.structure.BandData,java.util.Map)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/processQueryTemplate(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getQuery()|",
      "|java+constructor:///com/haulmont/yarg/loaders/impl/SqlDataLoader$1/SqlDataLoader$1(com.haulmont.yarg.loaders.impl.SqlDataLoader,java.util.List,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$QueryPack)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/addAll(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/runQuery(com.haulmont.yarg.structure.ReportQuery,java.lang.String,java.lang.Object%5B%5D,com.haulmont.yarg.util.db.ResultSetHandler)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getParams()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/isSingleValue()|",
      "|java+method:///java/util/ArrayList/toArray()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getMultipleValues()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getProcessTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/fillOutputData(java.util.List,java.util.List)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/prepareQuery(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getName()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getQuery()|",
      "|java+constructor:///com/haulmont/yarg/loaders/impl/SqlDataLoader$1/SqlDataLoader$1(com.haulmont.yarg.loaders.impl.SqlDataLoader,java.util.List,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$QueryPack)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/runQuery(com.haulmont.yarg.structure.ReportQuery,java.lang.String,java.lang.Object%5B%5D,com.haulmont.yarg.util.db.ResultSetHandler)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getParams()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/isSingleValue()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/processQueryTemplate(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getMultipleValues()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getProcessTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/fillOutputData(java.util.List,java.util.List)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/prepareQuery(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getName()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/extractStyles(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/stripEnd(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/StringUtils/stripEnd(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/add(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/check(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang3/StringUtils/stripEnd(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/add(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/check(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/loadData(com.haulmont.yarg.structure.ReportQuery,com.haulmont.yarg.structure.BandData,java.util.Map)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/addParentBandDataToParameters(com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/regex/Matcher/replaceAll(java.lang.String)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///com/jayway/jsonpath/JsonPath/read(java.lang.String,java.lang.String,com.jayway.jsonpath.Predicate%5B%5D)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParentBand()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/getParameterName(java.util.regex.Matcher)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/parseScriptResult(java.util.List,java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/addParentBandDataToParametersRecursively(com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/getParameterName(java.util.regex.Matcher)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/loadDataFromScript(com.haulmont.yarg.structure.ReportQuery,java.util.Map,java.util.regex.Matcher,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/copyParameters(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeResourceProvider/createTempFile(byte%5B%5D)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/initNamedStyleCache()|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(short)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(int)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/json/JsonMap/getValue(java.util.Map,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/substringAfter(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/substringAfter(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/json/JsonMap/getValue(java.util.Map,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang3/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/json/JsonMap/getValue(java.util.Map,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/substringAfter(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/inlineToDoc(com.haulmont.yarg.formatters.impl.doc.OfficeComponent,com.sun.star.text.XTextRange,com.sun.star.text.XText,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/insertHTML(com.sun.star.text.XText,com.sun.star.text.XTextRange,java.lang.String)|",
      "|java+method:///com/sun/star/text/XText/getText()|"
    ],
    "v2Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/insertHTML(com.sun.star.text.XText,com.sun.star.text.XTextRange,java.lang.String)|",
      "|java+method:///com/sun/star/text/XText/getText()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/compareTo(java.lang.Object)|",
    "called": "|java+method:///org/apache/commons/lang/ObjectUtils/compare(java.lang.Comparable,java.lang.Comparable)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/compare(java.lang.Comparable,java.lang.Comparable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang3/ObjectUtils/compare(java.lang.Comparable,java.lang.Comparable)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TextWrapper/fillTextWithBandData()|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/containsJustOneAlias(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "affectedLib": "commons-lang:commons-lang:2.6",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyPicturesFromTemplateToResult(org.apache.poi.hssf.usermodel.HSSFSheet,org.apache.poi.hssf.usermodel.HSSFSheet)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getCellFromTemplate(com.haulmont.yarg.formatters.impl.xls.Cell)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFPicturesHelper/getAllAnchors(org.apache.poi.hssf.record.EscherAggregate)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow1(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xls/Cell/Cell(int,int)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol1()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow1()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow2()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.hssf.usermodel.HSSFClientAnchor,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol2(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getEscherAggregate(org.apache.poi.hssf.usermodel.HSSFSheet)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol2()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getCellFromTemplate(com.haulmont.yarg.formatters.impl.xls.Cell)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFPicturesHelper/getAllAnchors(org.apache.poi.hssf.record.EscherAggregate)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow1(int)|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xls/Cell/Cell(int,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol1()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow1()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow2()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.hssf.usermodel.HSSFClientAnchor,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol2(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getEscherAggregate(org.apache.poi.hssf.usermodel.HSSFSheet)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol2()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/HSSFFontCacheKey/hashCode()|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFFont/fontHashCode()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFFont/fontHashCode()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/record/FontRecord/hashCode()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRow()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRowIndex()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getSheetName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRow()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow1(int)|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/ss/usermodel/CreationHelper/createClientAnchor()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/addPicture(byte%5B%5D,int)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/getImageDimension()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCreationHelper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/resize(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.ss.usermodel.ClientAnchor,int)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/setHeightInPoints(float)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRowIndex()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow1(int)|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/ss/usermodel/CreationHelper/createClientAnchor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/resize(double,double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/addPicture(byte%5B%5D,int)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getSheetName()|",
      "|java+method:///org/apache/poi/ss/util/ImageUtils/getDimensionFromAnchor(org.apache.poi.ss.usermodel.Picture)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCreationHelper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.ss.usermodel.ClientAnchor,int)|",
      "|java+method:///java/awt/Dimension/getWidth()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol2(int)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixRightCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderLeft(short)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderLeft(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setLeftBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderLeft(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setLeftBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/HSSFFontCacheKey/equals(java.lang.Object)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFFont/fontEquals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFFont/fontEquals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/record/FontRecord/equals(java.lang.Object)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/HSSFStyleCacheKey/equals(java.lang.Object)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/formatEquals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/formatEquals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/record/ExtendedFormatRecord/equals(java.lang.Object)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixLeftCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderRight(short)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setRightBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderRight(short)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setRightBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderRight(short)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/getFontByTemplate(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/addCachedFont(org.apache.poi.hssf.usermodel.HSSFFont,org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneFontFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setFont(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getFont(org.apache.poi.ss.usermodel.Workbook)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addCachedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/getFontByTemplate(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/addCachedFont(org.apache.poi.hssf.usermodel.HSSFFont,org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setFont(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addCachedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneFont(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getFont(org.apache.poi.ss.usermodel.Workbook)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/outputDocument()|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellFromTemplate(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFRow,int,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/createCell(int)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/createCell(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRichStringCellValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/extractStyles(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRichTextString/getString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/containsJustOneAlias(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/createCell(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRichStringCellValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/extractStyles(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRichTextString/getString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/containsJustOneAlias(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFRangeHelper/getAreaForRange(org.apache.poi.hssf.usermodel.HSSFWorkbook,java.lang.String)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFName/getReference()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameIndex(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameAt(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFName/getReference()|",
      "|java+constructor:///org/apache/poi/ss/util/AreaReference/AreaReference(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameAt(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFName/getRefersToFormula()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameIndex(java.lang.String)|",
      "|java+constructor:///org/apache/poi/ss/util/AreaReference/AreaReference(java.lang.String,org.apache.poi.ss.SpreadsheetVersion)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixUpCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBottomBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderBottom(short)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBottomBorderColor(short)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderBottom(short)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/initNamedStyleCache()|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(short)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(short)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(int)|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/HSSFStyleCacheKey/hashCode()|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/formatHashCode()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/formatHashCode()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/record/ExtendedFormatRecord/hashCode()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:2.0.12",
    "coordinatesV2": "com.haulmont.yarg:yarg:1.0.70",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixDownCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderTop(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setTopBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderTop(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setTopBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "affectedLib": "com.haulmont.thirdparty:poi:3.9.20130515",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyPicturesFromTemplateToResult(org.apache.poi.hssf.usermodel.HSSFSheet,org.apache.poi.hssf.usermodel.HSSFSheet)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getCellFromTemplate(com.haulmont.yarg.formatters.impl.xls.Cell)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFPicturesHelper/getAllAnchors(org.apache.poi.hssf.record.EscherAggregate)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow1(int)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xls/Cell/Cell(int,int)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol1()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow1()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow2()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.hssf.usermodel.HSSFClientAnchor,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol2(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getEscherAggregate(org.apache.poi.hssf.usermodel.HSSFSheet)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol2()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getCellFromTemplate(com.haulmont.yarg.formatters.impl.xls.Cell)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFPicturesHelper/getAllAnchors(org.apache.poi.hssf.record.EscherAggregate)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getRow()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setRow1(int)|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/Cell/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xls/Cell/Cell(int,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol1()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow1()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getRow2()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.hssf.usermodel.HSSFClientAnchor,int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol2(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getEscherAggregate(org.apache.poi.hssf.usermodel.HSSFSheet)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFClientAnchor/getCol2()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/HSSFFontCacheKey/hashCode()|",
    "called": "|java+method:///org/apache/poi/hssf/record/FontRecord/hashCode()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFFont/fontHashCode()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/record/FontRecord/hashCode()|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRowIndex()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getSheetName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRow()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow1(int)|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/ss/usermodel/CreationHelper/createClientAnchor()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/addPicture(byte%5B%5D,int)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/getImageDimension()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCreationHelper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/resize(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.ss.usermodel.ClientAnchor,int)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/setHeightInPoints(float)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRowIndex()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow1(int)|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/ss/usermodel/CreationHelper/createClientAnchor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/resize(double,double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/addPicture(byte%5B%5D,int)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getSheetName()|",
      "|java+method:///org/apache/poi/ss/util/ImageUtils/getDimensionFromAnchor(org.apache.poi.ss.usermodel.Picture)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCreationHelper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.ss.usermodel.ClientAnchor,int)|",
      "|java+method:///java/awt/Dimension/getWidth()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol2(int)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixRightCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderLeft(short)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderLeft(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setLeftBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderLeft(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setLeftBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/HSSFFontCacheKey/equals(java.lang.Object)|",
    "called": "|java+method:///org/apache/poi/hssf/record/FontRecord/equals(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFFont/fontEquals(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/record/FontRecord/equals(java.lang.Object)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixLeftCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderRight(short)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setRightBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderRight(short)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderLeft()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getRightBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setRightBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getLeftBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderRight()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderRight(short)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/getFontByTemplate(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/addCachedFont(org.apache.poi.hssf.usermodel.HSSFFont,org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneFontFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setFont(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getFont(org.apache.poi.ss.usermodel.Workbook)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addCachedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/getFontByTemplate(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsFontCache/addCachedFont(org.apache.poi.hssf.usermodel.HSSFFont,org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setFont(org.apache.poi.hssf.usermodel.HSSFFont)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addCachedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneFont(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/createCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getFont(org.apache.poi.ss.usermodel.Workbook)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/outputDocument()|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellFromTemplate(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFRow,int,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/createCell(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRichStringCellValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/extractStyles(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRichTextString/getString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/containsJustOneAlias(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/createCell(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRichStringCellValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/extractStyles(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRichTextString/getString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/containsJustOneAlias(java.lang.String)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFRangeHelper/getAreaForRange(org.apache.poi.hssf.usermodel.HSSFWorkbook,java.lang.String)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameIndex(java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameIndex(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameAt(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFName/getReference()|",
      "|java+constructor:///org/apache/poi/ss/util/AreaReference/AreaReference(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameAt(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFName/getRefersToFormula()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNameIndex(java.lang.String)|",
      "|java+constructor:///org/apache/poi/ss/util/AreaReference/AreaReference(java.lang.String,org.apache.poi.ss.SpreadsheetVersion)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixUpCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBottomBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderBottom(short)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBottomBorderColor(short)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderBottom(short)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/initNamedStyleCache()|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(int)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(short)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(int)|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/CustomCellStyleHint/fixDownCell(org.apache.poi.hssf.usermodel.HSSFSheet,int,int,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
    "called": "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderTop(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setTopBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/cloneStyleRelationsFrom(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XslStyleHelper/cloneStyleRelations(org.apache.poi.hssf.usermodel.HSSFCellStyle,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderTop()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/adoptDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBottomBorderColor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/HSSFWorkbookHelper/createDetachedCellStyle(org.apache.poi.hssf.usermodel.HSSFWorkbook)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/getCellStyleByTemplate(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getRow(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setBorderTop(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getBorderBottom()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/processCellStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/setTopBorderColor(short)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getTopBorderColor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/getCell(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellStyle()|"
    ],
    "affectedLib": "org.apache.poi:poi:3.15",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader/putValue(java.util.Map,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$OutputValue,java.lang.Object)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getSynonym()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getValueName()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getSynonym()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$OutputValue/getValueName()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromRange(java.lang.String,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromCells(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromCells(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateValueCell(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.structure.BandData,java.lang.String,org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFPatriarch)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.util.Date)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Number/doubleValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getContentInlinerForFormat(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/unwrapParameterName(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/util/converter/AbstractObjectToStringConverter/convertFromStringUnresolved(java.lang.Class,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///org/apache/commons/lang/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class%5B%5D)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/handleStringWithAliases(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/separateBandNameAndParameterName(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/AbstractFormatter$BandPathAndParameterName(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/AbstractFormatter$BandPathAndParameterName(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager/findPid(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/lang3/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Runtime/exec(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Runtime/exec(java.lang.String)|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/lang3/ObjectUtils/equals(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager$2/handle(org.docx4j.wml.Text)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/containsJustOneAlias(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/containsJustOneAlias(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/loadData(com.haulmont.yarg.structure.ReportQuery,com.haulmont.yarg.structure.BandData,java.util.Map)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/processQueryTemplate(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getQuery()|",
      "|java+constructor:///com/haulmont/yarg/loaders/impl/SqlDataLoader$1/SqlDataLoader$1(com.haulmont.yarg.loaders.impl.SqlDataLoader,java.util.List,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$QueryPack)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/addAll(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/runQuery(com.haulmont.yarg.structure.ReportQuery,java.lang.String,java.lang.Object%5B%5D,com.haulmont.yarg.util.db.ResultSetHandler)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getParams()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/isSingleValue()|",
      "|java+method:///java/util/ArrayList/toArray()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getMultipleValues()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getProcessTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/fillOutputData(java.util.List,java.util.List)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/prepareQuery(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getName()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getQuery()|",
      "|java+constructor:///com/haulmont/yarg/loaders/impl/SqlDataLoader$1/SqlDataLoader$1(com.haulmont.yarg.loaders.impl.SqlDataLoader,java.util.List,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$QueryPack)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/runQuery(com.haulmont.yarg.structure.ReportQuery,java.lang.String,java.lang.Object%5B%5D,com.haulmont.yarg.util.db.ResultSetHandler)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getParams()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/isSingleValue()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/processQueryTemplate(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getMultipleValues()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getProcessTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/fillOutputData(java.util.List,java.util.List)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/prepareQuery(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getName()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/extractStyles(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/stripEnd(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/lang/StringUtils/stripEnd(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/add(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/check(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang3/StringUtils/stripEnd(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/add(org.apache.poi.hssf.usermodel.HSSFCell,org.apache.poi.hssf.usermodel.HSSFCell,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/hints/XlsHint/check(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/loadData(com.haulmont.yarg.structure.ReportQuery,com.haulmont.yarg.structure.BandData,java.util.Map)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/addParentBandDataToParameters(com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/regex/Matcher/replaceAll(java.lang.String)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///com/jayway/jsonpath/JsonPath/read(java.lang.String,java.lang.String,com.jayway.jsonpath.Predicate%5B%5D)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParentBand()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/getParameterName(java.util.regex.Matcher)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/parseScriptResult(java.util.List,java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/addParentBandDataToParametersRecursively(com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/getParameterName(java.util.regex.Matcher)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/loadDataFromScript(com.haulmont.yarg.structure.ReportQuery,java.util.Map,java.util.regex.Matcher,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/copyParameters(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeResourceProvider/createTempFile(byte%5B%5D)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/initNamedStyleCache()|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(short)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getNumCellStyles()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/caches/XlsStyleCache/addNamedStyle(org.apache.poi.hssf.usermodel.HSSFCellStyle)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCellStyle/getUserStyleName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCellStyleAt(int)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/valueOf(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Long/valueOf(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/json/JsonMap/getValue(java.util.Map,java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/substringAfter(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/json/JsonMap/getValue(java.util.Map,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang3/StringUtils/substringBefore(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/json/JsonMap/getValue(java.util.Map,java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/contains(java.lang.CharSequence)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/substringAfter(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/inlineToDoc(com.haulmont.yarg.formatters.impl.doc.OfficeComponent,com.sun.star.text.XTextRange,com.sun.star.text.XText,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/insertHTML(com.sun.star.text.XText,com.sun.star.text.XTextRange,java.lang.String)|",
      "|java+method:///com/sun/star/text/XText/getText()|"
    ],
    "v2Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/insertHTML(com.sun.star.text.XText,com.sun.star.text.XTextRange,java.lang.String)|",
      "|java+method:///com/sun/star/text/XText/getText()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/compareTo(java.lang.Object)|",
    "called": "|java+method:///org/apache/commons/lang3/ObjectUtils/compare(java.lang.Comparable,java.lang.Comparable)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/ObjectUtils/compare(java.lang.Comparable,java.lang.Comparable)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang3/ObjectUtils/compare(java.lang.Comparable,java.lang.Comparable)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TextWrapper/fillTextWithBandData()|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/setValueToCell(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellFormula(java.lang.String)|",
      "|java+constructor:///org/apache/poi/hssf/usermodel/HSSFRichTextString/HSSFRichTextString(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellType(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/setCellValue(org.apache.poi.ss.usermodel.RichTextString)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/containsJustOneAlias(java.lang.String)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/inlineBandDataToCellString(org.apache.poi.hssf.usermodel.HSSFCell,java.lang.String,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotEmpty(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getCellType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/toString()|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.4",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateFormula(org.xlsx4j.sml.Cell,com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.CTCalcChain,int)|",
    "called": "|java+method:///org/xlsx4j/sml/CTCalcChain/getC()|",
    "v1Body": [
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/xlsx4j/sml/CTCalcChain/getC()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/xlsx4j/sml/CTCalcCell/setR(java.lang.String)|",
      "|java+constructor:///org/xlsx4j/sml/CTCalcCell/CTCalcCell()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/xlsx4j/sml/CTCellFormula/getValue()|",
      "|java+method:///org/xlsx4j/sml/Cell/getF()|",
      "|java+method:///org/xlsx4j/sml/CTCalcCell/setI(java.lang.Integer)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/toFirstCellReference()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/toRange()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/isOneCellRange()|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/xlsx4j/sml/CTCellFormula/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/xlsx4j/sml/Sheet/getSheetId()|",
      "|java+method:///org/xlsx4j/sml/Workbook/getSheets()|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/xlsx4j/sml/Sheets/getSheet()|",
      "|java+method:///org/xlsx4j/sml/CTCalcChain/getC()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/xlsx4j/sml/Sheet/getName()|",
      "|java+method:///org/xlsx4j/sml/CTCalcCell/setR(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+constructor:///org/xlsx4j/sml/CTCalcCell/CTCalcCell()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/xlsx4j/sml/CTCellFormula/getValue()|",
      "|java+method:///org/xlsx4j/sml/Cell/getF()|",
      "|java+method:///java/util/Objects/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/xlsx4j/sml/CTCalcCell/setI(java.lang.Integer)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/toFirstCellReference()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/toRange()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/isOneCellRange()|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/xlsx4j/sml/CTCellFormula/setValue(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findVerticalDependencies()|",
    "called": "|java+method:///org/xlsx4j/sml/DefinedNames/getDefinedName()|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/xlsx4j/sml/Workbook/getDefinedNames()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/DefinedNames/getDefinedName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/intersectsByVertical(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/CTDefinedName/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromFormula(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/Workbook/getDefinedNames()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/DefinedNames/getDefinedName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/intersectsByVertical(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+method:///org/xlsx4j/sml/CTDefinedName/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/hints/XslxHintProcessor/isHintDefinedName(java.lang.String)|",
      "|java+method:///com/google/common/collect/LinkedHashMultimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/CTDefinedName/getValue()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromFormula(java.lang.String)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeHBand(com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/ensureNecessaryRowsCreated(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getBandRange(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/ensureNecessaryRowsCreated(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getBandRange(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/convertAltChunks()|",
    "called": "|java+constructor:///org/docx4j/utils/AltChunkFinder/AltChunkFinder()|",
    "v1Body": [
      "|java+method:///org/docx4j/openpackaging/parts/JaxbXmlPartAltChunkHost/getRelationshipsPart()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getContentList()|",
      "|java+constructor:///org/docx4j/utils/AltChunkFinder/AltChunkFinder()|",
      "|java+method:///org/docx4j/wml/P/getContent()|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getParent()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder/getAltChunks()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getAltChunk()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/docx4j/convert/in/xhtml/XHTMLImporter/convert(java.lang.String,java.lang.String)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getAltChunkType()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AltChunkType/equals(java.lang.Object)|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getIndex()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/wml/ContentAccessor/getContent()|",
      "|java+method:///org/docx4j/openpackaging/packages/WordprocessingMLPackage/getMainDocumentPart()|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getPart(java.lang.String)|",
      "|java+constructor:///org/docx4j/convert/in/xhtml/XHTMLImporterImpl/XHTMLImporterImpl(org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
      "|java+method:///org/docx4j/wml/R/getParent()|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getId()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getBuffer()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/toString(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/docx4j/openpackaging/parts/JaxbXmlPartAltChunkHost/getRelationshipsPart()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getContentList()|",
      "|java+constructor:///org/docx4j/utils/AltChunkFinder/AltChunkFinder()|",
      "|java+method:///org/docx4j/wml/ArrayListWml/addAll(int,java.util.Collection)|",
      "|java+method:///org/docx4j/utils/AltChunkFinder/getAltChunks()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/docx4j/convert/in/xhtml/XHTMLImporter/convert(java.lang.String,java.lang.String)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AltChunkType/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/HtmlImportProcessor/processHtml(java.lang.String)|",
      "|java+method:///org/docx4j/wml/P/getContent()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/docx4j/wml/P/setPPr(org.docx4j.wml.PPr)|",
      "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getParent()|",
      "|java+method:///org/docx4j/wml/ArrayListWml/indexOf(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getAltChunk()|",
      "|java+method:///org/docx4j/wml/ArrayListWml/remove(java.lang.Object)|",
      "|java+method:///org/docx4j/wml/P/getParent()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/wml/ContentAccessor/getContent()|",
      "|java+method:///org/docx4j/openpackaging/packages/WordprocessingMLPackage/getMainDocumentPart()|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getPart(java.lang.String)|",
      "|java+constructor:///org/docx4j/convert/in/xhtml/XHTMLImporterImpl/XHTMLImporterImpl(org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
      "|java+method:///org/docx4j/wml/R/getParent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getAltChunkType()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getId()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getBuffer()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/toString(java.nio.ByteBuffer)|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getIndex()|",
      "|java+method:///org/docx4j/wml/P/getPPr()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToDocx(org.docx4j.openpackaging.packages.WordprocessingMLPackage,org.docx4j.wml.Text,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImageInline(java.lang.String,java.lang.String,int,int,boolean)|",
    "v1Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/wml/R/getContent()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageInfo/getSize()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCy()|",
      "|java+method:///org/docx4j/wml/ObjectFactory/createDrawing()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.WordprocessingMLPackage,byte%5B%5D)|",
      "|java+method:///org/docx4j/wml/Text/getParent()|",
      "|java+constructor:///org/docx4j/wml/ObjectFactory/ObjectFactory()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()|",
      "|java+method:///org/docx4j/wml/Drawing/getAnchorOrInline()|",
      "|java+method:///org/docx4j/dml/wordprocessingDrawing/Inline/getExtent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImageInline(java.lang.String,java.lang.String,int,int,boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/getImageInfo()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "v2Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/wml/R/getContent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageInfo/getSize()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCy()|",
      "|java+method:///org/docx4j/wml/ObjectFactory/createDrawing()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/resolveTextPartForDOCX(org.docx4j.wml.Text,org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
      "|java+method:///org/docx4j/wml/Text/getParent()|",
      "|java+constructor:///org/docx4j/wml/ObjectFactory/ObjectFactory()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()|",
      "|java+method:///org/docx4j/wml/Drawing/getAnchorOrInline()|",
      "|java+method:///org/docx4j/dml/wordprocessingDrawing/Inline/getExtent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImageInline(java.lang.String,java.lang.String,int,int,boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/getImageInfo()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/init()|",
    "called": "|java+method:///org/docx4j/openpackaging/packages/SpreadsheetMLPackage/load(java.io.InputStream)|",
    "v1Body": [
      "|java+method:///org/xlsx4j/sml/Workbook/getCalcPr()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentName()|",
      "|java+method:///org/xlsx4j/sml/CTCalcPr/setCalcMode(org.xlsx4j.sml.STCalcMode)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentContent()|",
      "|java+method:///org/docx4j/openpackaging/packages/SpreadsheetMLPackage/load(java.io.InputStream)|",
      "|java+method:///org/xlsx4j/sml/CTCalcPr/setFullCalcOnLoad(java.lang.Boolean)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/create(org.docx4j.openpackaging.packages.SpreadsheetMLPackage)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/xlsx4j/sml/Workbook/getCalcPr()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentName()|",
      "|java+method:///org/xlsx4j/sml/CTCalcPr/setCalcMode(org.xlsx4j.sml.STCalcMode)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentContent()|",
      "|java+method:///org/docx4j/openpackaging/packages/SpreadsheetMLPackage/load(java.io.InputStream)|",
      "|java+method:///org/xlsx4j/sml/CTCalcPr/setFullCalcOnLoad(java.lang.Boolean)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/create(org.docx4j.openpackaging.packages.SpreadsheetMLPackage)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/haulmont/yarg/util/docx4j/XmlCopyUtils/createUnmarshaller(javax.xml.bind.JAXBContext)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorkbook()|",
      "|java+method:///com/haulmont/yarg/util/docx4j/XmlCopyUtils/createMarshaller(javax.xml.bind.JAXBContext)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/walkJAXBElements(java.lang.Object)|",
    "called": "|java+method:///org/docx4j/XmlUtils/unwrap(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/apply(java.lang.Object)|",
      "|java+method:///org/jvnet/jaxb2_commons/ppp/Child/setParent(java.lang.Object)|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/getChildren(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/docx/TableManager/TableManager(com.haulmont.yarg.formatters.impl.DocxFormatterDelegate,org.docx4j.wml.Tbl)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/docx4j/XmlUtils/unwrap(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/shouldTraverse(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Stack/pop()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/walkJAXBElements(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/apply(java.lang.Object)|",
      "|java+method:///org/jvnet/jaxb2_commons/ppp/Child/setParent(java.lang.Object)|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/setSkipIt(boolean)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/getChildren(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/docx/TableManager/TableManager(com.haulmont.yarg.formatters.impl.DocxFormatterDelegate,org.docx4j.wml.Tbl)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/docx4j/XmlUtils/unwrap(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/shouldTraverse(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Stack/pop()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/walkJAXBElements(java.lang.Object)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/apply(java.lang.Object)|",
    "called": "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|",
    "v1Body": [
      "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/findNameForCurrentTable(com.haulmont.yarg.formatters.impl.docx.TableManager)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/docx/RegexpFinder/RegexpFinder(com.haulmont.yarg.formatters.impl.DocxFormatterDelegate,java.util.regex.Pattern,java.lang.Class)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/RegexpFinder/getValue()|",
      "|java+method:///java/util/Stack/peek()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/isSkipIt()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableCollector/findNameForCurrentTable(com.haulmont.yarg.formatters.impl.docx.TableManager)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/setSkipIt(boolean)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/docx/RegexpCollectionFinder/RegexpCollectionFinder(com.haulmont.yarg.formatters.impl.DocxFormatterDelegate,java.util.regex.Pattern,java.lang.Class)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/RegexpCollectionFinder/getValues()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/Stack/isEmpty()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Stack/peek()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyRowSettings(org.xlsx4j.sml.Row,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Worksheet)|",
    "called": "|java+method:///org/xlsx4j/sml/CTPageBreak/getBrk()|",
    "v1Body": [
      "|java+method:///org/xlsx4j/sml/CTPageBreak/getBrk()|",
      "|java+method:///org/xlsx4j/sml/Row/setCustomHeight(java.lang.Boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/CTBreak/setId(java.lang.Long)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/CTBreak/getId()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/xlsx4j/sml/Row/setHt(java.lang.Double)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getRowBreaks()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Long/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/xlsx4j/sml/Row/getHt()|",
      "|java+method:///org/docx4j/XmlUtils/deepCopy(java.lang.Object,javax.xml.bind.JAXBContext)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|"
    ],
    "v2Body": [
      "|java+method:///org/xlsx4j/sml/CTPageBreak/setManualBreakCount(java.lang.Long)|",
      "|java+method:///org/xlsx4j/sml/CTPageBreak/getBrk()|",
      "|java+method:///org/xlsx4j/sml/Row/setCustomHeight(java.lang.Boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/xlsx4j/sml/Row/getOutlineLevel()|",
      "|java+method:///java/lang/Short/valueOf(short)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/CTBreak/setId(java.lang.Long)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/CTBreak/getId()|",
      "|java+method:///org/xlsx4j/sml/Row/setHt(java.lang.Double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/Long/equals(java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getRowBreaks()|",
      "|java+method:///org/xlsx4j/sml/Row/setOutlineLevel(java.lang.Short)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/xlsx4j/sml/Row/getHt()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/xlsx4j/sml/CTPageBreak/setCount(java.lang.Long)|",
      "|java+method:///org/docx4j/XmlUtils/deepCopy(java.lang.Object,javax.xml.bind.JAXBContext)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/fillTables()|",
    "called": "|java+method:///org/docx4j/wml/Tbl/getContent()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/DocumentWrapper/getTables()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getTable()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/copyRow(org.docx4j.wml.Tr)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/docx4j/wml/Tbl/getContent()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandsRecursively(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getRowWithAliases()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getBandName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/fillRowFromBand(org.docx4j.wml.Tr,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/noHeader()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getTable()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/copyRow(org.docx4j.wml.Tr)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/docx4j/wml/Tbl/getContent()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandsRecursively(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getRowWithAliases()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getBandName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/DocumentWrapper/getTables()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/fillRowFromBand(org.docx4j.wml.Tr,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/noHeader()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
    "called": "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastRow()|",
      "|java+method:///org/xlsx4j/sml/Cell/getParent()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Row,java.util.List)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Range/Range(java.lang.String,int,int,int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getWorksheet(org.xlsx4j.sml.Row)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getCellsByRange(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstColumn()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/createFakeTemplateCellsForEmptyOnes(com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.Map,java.util.List)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstRow()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyRowSettings(org.xlsx4j.sml.Row,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastColumn()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastRow()|",
      "|java+method:///org/xlsx4j/sml/Cell/getParent()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Row,java.util.List)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Range/Range(java.lang.String,int,int,int,int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getWorksheet(org.xlsx4j.sml.Row)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getCellsByRange(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstColumn()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/createFakeTemplateCellsForEmptyOnes(com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.Map,java.util.List)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getFirstRow()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyRowSettings(org.xlsx4j.sml.Row,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getLastColumn()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateMergeRegions()|",
    "called": "|java+constructor:///org/xlsx4j/sml/CTMergeCell/CTMergeCell()|",
    "v1Body": [
      "|java+method:///org/xlsx4j/sml/CTMergeCell/setRef(java.lang.String)|",
      "|java+method:///org/xlsx4j/sml/CTMergeCells/setParent(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromRange(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/copy()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/setMergeCells(org.xlsx4j.sml.CTMergeCells)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/shift(int,int)|",
      "|java+constructor:///org/xlsx4j/sml/CTMergeCell/CTMergeCell()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getMergeCells()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/contains(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/resultsForTemplate(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+constructor:///org/xlsx4j/sml/CTMergeCells/CTMergeCells()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/templates()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/toRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///org/xlsx4j/sml/CTMergeCells/getMergeCell()|",
      "|java+method:///org/xlsx4j/sml/CTMergeCell/getRef()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/calculateOffset(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/xlsx4j/sml/CTMergeCell/setParent(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|"
    ],
    "v2Body": [
      "|java+method:///org/xlsx4j/sml/CTMergeCell/setRef(java.lang.String)|",
      "|java+method:///org/xlsx4j/sml/CTMergeCells/setParent(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/fromRange(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/copy()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/setMergeCells(org.xlsx4j.sml.CTMergeCells)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/shift(int,int)|",
      "|java+constructor:///org/xlsx4j/sml/CTMergeCell/CTMergeCell()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getMergeCells()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/contains(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/resultsForTemplate(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+constructor:///org/xlsx4j/sml/CTMergeCells/CTMergeCells()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/RangeDependencies/templates()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/toRange()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///org/xlsx4j/sml/CTMergeCells/getMergeCell()|",
      "|java+method:///org/xlsx4j/sml/CTMergeCell/getRef()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/isOneCellRange()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/calculateOffset(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/xlsx4j/sml/CTMergeCell/setParent(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/saveAndClose()|",
    "called": "|java+method:///org/docx4j/Docx4J/createHTMLSettings()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/writeToOutputStream(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///org/docx4j/Docx4J/toPDF(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/convertAltChunks()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/docx4j/Docx4J/createHTMLSettings()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/docx4j/Docx4J/toHTML(org.docx4j.convert.out.HTMLSettings,java.io.OutputStream,int)|",
      "|java+method:///org/docx4j/convert/out/HTMLSettings/setWmlPackage(org.docx4j.openpackaging.packages.OpcPackage)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/writeToOutputStream(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/docx4j/Docx4J/toPDF(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/docx4j/Docx4J/createHTMLSettings()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToHtml(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/convertAltChunks()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/docx4j/Docx4J/toHTML(org.docx4j.convert.out.HTMLSettings,java.io.OutputStream,int)|",
      "|java+method:///org/docx4j/convert/out/HTMLSettings/setWmlPackage(org.docx4j.openpackaging.packages.OpcPackage)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToXlsx(org.docx4j.openpackaging.packages.SpreadsheetMLPackage,org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,org.xlsx4j.sml.Cell,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
    "v1Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setRow(int)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/CTOneCellAnchor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getRow()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getExt()|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTMarker/CTMarker()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setFrom(org.docx4j.dml.spreadsheetdrawing.CTMarker)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/putImage(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,org.docx4j.openpackaging.packages.SpreadsheetMLPackage,org.docx4j.openpackaging.parts.WordprocessingML.BinaryPartAbstractImage,org.docx4j.dml.spreadsheetdrawing.CTOneCellAnchor)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setExt(org.docx4j.dml.CTPositiveSize2D)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/XlsxUtils/convertPxToEmu(long)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getFrom()|",
      "|java+constructor:///org/docx4j/dml/CTPositiveSize2D/CTPositiveSize2D()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setCol(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getColumn()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "v2Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setRow(int)|",
      "|java+method:///org/xlsx4j/sml/Cell/setV(java.lang.String)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/CTOneCellAnchor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getRow()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getExt()|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTMarker/CTMarker()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setFrom(org.docx4j.dml.spreadsheetdrawing.CTMarker)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/putImage(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,org.docx4j.openpackaging.packages.SpreadsheetMLPackage,org.docx4j.openpackaging.parts.WordprocessingML.BinaryPartAbstractImage,org.docx4j.dml.spreadsheetdrawing.CTOneCellAnchor)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setExt(org.docx4j.dml.CTPositiveSize2D)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/XlsxUtils/convertPxToEmu(long)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getFrom()|",
      "|java+constructor:///org/docx4j/dml/CTPositiveSize2D/CTPositiveSize2D()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setCol(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getColumn()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/traverse(org.docx4j.openpackaging.parts.Part,org.docx4j.openpackaging.parts.relationships.RelationshipsPart)|",
    "called": "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTDrawing/getEGAnchor()|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/Workbook/getSheets()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTDrawing/getEGAnchor()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Document$SheetWrapper/Document$SheetWrapper(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/traverse(org.docx4j.openpackaging.parts.Part,org.docx4j.openpackaging.parts.relationships.RelationshipsPart)|",
      "|java+method:///org/xlsx4j/sml/Sheets/getSheet()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/Sheet/getName()|",
      "|java+method:///org/docx4j/openpackaging/parts/JaxbXmlPart/getJaxbElement()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTTwoCellAnchor/getFrom()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Document$ChartWrapper/Document$ChartWrapper(org.docx4j.dml.chart.CTChartSpace,org.docx4j.openpackaging.parts.DrawingML.Drawing,org.docx4j.dml.spreadsheetdrawing.CTTwoCellAnchor)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/getRow()|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getRelationships()|",
      "|java+method:///org/xlsx4j/sml/Sheet/getId()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document$SheetWrapper/access$000(com.haulmont.yarg.formatters.impl.xlsx.Document$SheetWrapper)|",
      "|java+method:///org/docx4j/openpackaging/parts/Part/getSourceRelationships()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTTwoCellAnchor/getTo()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getPart(org.docx4j.relationships.Relationship)|",
      "|java+method:///org/docx4j/relationships/Relationships/getRelationship()|",
      "|java+method:///org/docx4j/relationships/Relationship/getType()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Range/Range(java.lang.String,int,int,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/DrawingML/Drawing/getJaxbElement()|",
      "|java+method:///org/docx4j/relationships/Relationship/getId()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/docx4j/openpackaging/parts/Part/getRelationshipsPart()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/xlsx4j/sml/Workbook/getSheets()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTDrawing/getEGAnchor()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Document$SheetWrapper/Document$SheetWrapper(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/traverse(org.docx4j.openpackaging.parts.Part,org.docx4j.openpackaging.parts.relationships.RelationshipsPart)|",
      "|java+method:///org/xlsx4j/sml/Sheets/getSheet()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/Sheet/getName()|",
      "|java+method:///org/docx4j/openpackaging/parts/JaxbXmlPart/getJaxbElement()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTTwoCellAnchor/getFrom()|",
      "|java+method:///java/lang/String/endsWith(java.lang.String)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Document$ChartWrapper/Document$ChartWrapper(org.docx4j.dml.chart.CTChartSpace,org.docx4j.openpackaging.parts.DrawingML.Drawing,org.docx4j.dml.spreadsheetdrawing.CTTwoCellAnchor)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/getRow()|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getRelationships()|",
      "|java+method:///org/xlsx4j/sml/Sheet/getId()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document$SheetWrapper/access$000(com.haulmont.yarg.formatters.impl.xlsx.Document$SheetWrapper)|",
      "|java+method:///org/docx4j/openpackaging/parts/Part/getSourceRelationships()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTTwoCellAnchor/getTo()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getPart(org.docx4j.relationships.Relationship)|",
      "|java+method:///org/docx4j/relationships/Relationships/getRelationship()|",
      "|java+method:///org/docx4j/relationships/Relationship/getType()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/Range/Range(java.lang.String,int,int,int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/DrawingML/Drawing/getJaxbElement()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/StyleSheet/StyleSheet(org.xlsx4j.sml.CTStylesheet)|",
      "|java+method:///org/docx4j/relationships/Relationship/getId()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/docx4j/openpackaging/parts/Part/getRelationshipsPart()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Row,java.util.List)|",
    "called": "|java+method:///org/docx4j/XmlUtils/deepCopy(java.lang.Object,javax.xml.bind.JAXBContext)|",
    "v1Body": [
      "|java+method:///org/xlsx4j/sml/Col/setMax(long)|",
      "|java+method:///org/xlsx4j/sml/Cell/getF()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorksheets()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateCell(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Cell)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document$SheetWrapper/getWorksheet()|",
      "|java+method:///org/xlsx4j/sml/Cols/getCol()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,org.xlsx4j.sml.Cell)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/xlsx4j/sml/Cell/setParent(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getColumn()|",
      "|java+method:///org/xlsx4j/sml/Cell/setR(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/toReference()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/shift(int,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/docx4j/openpackaging/parts/SpreadsheetML/WorksheetPart/getJaxbElement()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getCols()|",
      "|java+method:///org/xlsx4j/sml/Row/getC()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getColumnForCell(java.lang.String,com.haulmont.yarg.formatters.impl.xlsx.CellReference)|",
      "|java+method:///org/xlsx4j/sml/Col/setMin(long)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/addFormulaForPostProcessing(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Row,org.xlsx4j.sml.Cell,org.xlsx4j.sml.Cell)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getWorksheet(org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///java/lang/Long/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/move(int,int)|",
      "|java+method:///org/docx4j/XmlUtils/deepCopy(java.lang.Object,javax.xml.bind.JAXBContext)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|"
    ],
    "v2Body": [
      "|java+method:///org/xlsx4j/sml/Col/setOutlineLevel(java.lang.Short)|",
      "|java+method:///org/xlsx4j/sml/Col/setMax(long)|",
      "|java+method:///org/xlsx4j/sml/Cell/getF()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getWorksheets()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateCell(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Cell)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document$SheetWrapper/getWorksheet()|",
      "|java+method:///java/lang/Short/valueOf(short)|",
      "|java+method:///org/xlsx4j/sml/Cols/getCol()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCell(org.xlsx4j.sml.Cell)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,org.xlsx4j.sml.Cell)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/addFormulaForPostProcessing(com.haulmont.yarg.formatters.impl.xlsx.Range,com.haulmont.yarg.structure.BandData,org.xlsx4j.sml.Row,org.xlsx4j.sml.Cell,org.xlsx4j.sml.Cell)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getWorksheet(org.xlsx4j.sml.Row)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getColumn()|",
      "|java+method:///org/xlsx4j/sml/Cell/setR(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/toReference()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/hints/XslxHintProcessor/add(com.haulmont.yarg.formatters.impl.xlsx.CellReference,org.xlsx4j.sml.Cell,org.xlsx4j.sml.Cell,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/shift(int,int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/docx4j/openpackaging/parts/SpreadsheetML/WorksheetPart/getJaxbElement()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getCols()|",
      "|java+method:///org/xlsx4j/sml/Row/getC()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getColumnForCell(java.lang.String,com.haulmont.yarg.formatters.impl.xlsx.CellReference)|",
      "|java+method:///org/xlsx4j/sml/Col/setMin(long)|",
      "|java+method:///org/xlsx4j/sml/Col/getOutlineLevel()|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/checkThreadInterrupted()|",
      "|java+method:///org/xlsx4j/sml/Cell/setParent(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///java/lang/Long/intValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/move(int,int)|",
      "|java+method:///org/docx4j/XmlUtils/deepCopy(java.lang.Object,javax.xml.bind.JAXBContext)|",
      "|java+method:///org/xlsx4j/sml/Row/getR()|"
    ],
    "affectedLib": "org.docx4j:docx4j:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/convertAltChunks()|",
    "called": "|java+constructor:///org/docx4j/convert/in/xhtml/XHTMLImporterImpl/XHTMLImporterImpl(org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
    "v1Body": [
      "|java+method:///org/docx4j/openpackaging/parts/JaxbXmlPartAltChunkHost/getRelationshipsPart()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getContentList()|",
      "|java+constructor:///org/docx4j/utils/AltChunkFinder/AltChunkFinder()|",
      "|java+method:///org/docx4j/wml/P/getContent()|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getParent()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder/getAltChunks()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getAltChunk()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/docx4j/convert/in/xhtml/XHTMLImporter/convert(java.lang.String,java.lang.String)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getAltChunkType()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AltChunkType/equals(java.lang.Object)|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getIndex()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/wml/ContentAccessor/getContent()|",
      "|java+method:///org/docx4j/openpackaging/packages/WordprocessingMLPackage/getMainDocumentPart()|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getPart(java.lang.String)|",
      "|java+constructor:///org/docx4j/convert/in/xhtml/XHTMLImporterImpl/XHTMLImporterImpl(org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
      "|java+method:///org/docx4j/wml/R/getParent()|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getId()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getBuffer()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/toString(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/docx4j/openpackaging/parts/JaxbXmlPartAltChunkHost/getRelationshipsPart()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getContentList()|",
      "|java+constructor:///org/docx4j/utils/AltChunkFinder/AltChunkFinder()|",
      "|java+method:///org/docx4j/wml/ArrayListWml/addAll(int,java.util.Collection)|",
      "|java+method:///org/docx4j/utils/AltChunkFinder/getAltChunks()|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/docx4j/convert/in/xhtml/XHTMLImporter/convert(java.lang.String,java.lang.String)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AltChunkType/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/HtmlImportProcessor/processHtml(java.lang.String)|",
      "|java+method:///org/docx4j/wml/P/getContent()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/docx4j/wml/P/setPPr(org.docx4j.wml.PPr)|",
      "|java+constructor:///org/docx4j/TraversalUtil/TraversalUtil(java.lang.Object,org.docx4j.TraversalUtil$Callback)|",
      "|java+method:///java/util/List/remove(int)|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getParent()|",
      "|java+method:///org/docx4j/wml/ArrayListWml/indexOf(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getAltChunk()|",
      "|java+method:///org/docx4j/wml/ArrayListWml/remove(java.lang.Object)|",
      "|java+method:///org/docx4j/wml/P/getParent()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/wml/ContentAccessor/getContent()|",
      "|java+method:///org/docx4j/openpackaging/packages/WordprocessingMLPackage/getMainDocumentPart()|",
      "|java+method:///org/docx4j/openpackaging/parts/relationships/RelationshipsPart/getPart(java.lang.String)|",
      "|java+constructor:///org/docx4j/convert/in/xhtml/XHTMLImporterImpl/XHTMLImporterImpl(org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
      "|java+method:///org/docx4j/wml/R/getParent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getAltChunkType()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/docx4j/wml/CTAltChunk/getId()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/AlternativeFormatInputPart/getBuffer()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/toString(java.nio.ByteBuffer)|",
      "|java+method:///org/docx4j/utils/AltChunkFinder$LocatedChunk/getIndex()|",
      "|java+method:///org/docx4j/wml/P/getPPr()|"
    ],
    "affectedLib": "org.docx4j:docx4j-ImportXHTML:3.3.6",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/renderDocument()|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/doCreateDocument(com.haulmont.yarg.structure.ReportOutputType,java.io.OutputStream)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegrationAPI/getCountOfRetry()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentName()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/doCreateDocument(java.io.OutputStream)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegrationAPI/getCountOfRetry()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentName()|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/saveAndClose()|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/writeToOutputStream(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///org/docx4j/Docx4J/toPDF(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/convertAltChunks()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/docx4j/Docx4J/createHTMLSettings()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/docx4j/Docx4J/toHTML(org.docx4j.convert.out.HTMLSettings,java.io.OutputStream,int)|",
      "|java+method:///org/docx4j/convert/out/HTMLSettings/setWmlPackage(org.docx4j.openpackaging.packages.OpcPackage)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/writeToOutputStream(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///org/docx4j/Docx4J/toPDF(org.docx4j.openpackaging.packages.WordprocessingMLPackage,java.io.OutputStream)|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/docx4j/Docx4J/createHTMLSettings()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToHtml(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/convertAltChunks()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///org/docx4j/Docx4J/toHTML(org.docx4j.convert.out.HTMLSettings,java.io.OutputStream,int)|",
      "|java+method:///org/docx4j/convert/out/HTMLSettings/setWmlPackage(org.docx4j.openpackaging.packages.OpcPackage)|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/saveAndClose()|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getPackage()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeToOutputStream(org.docx4j.openpackaging.packages.SpreadsheetMLPackage,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/saveXlsxAsCsv(com.haulmont.yarg.formatters.impl.xlsx.Document,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToHtml(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/io/OutputStream/flush()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeToOutputStream(org.docx4j.openpackaging.packages.SpreadsheetMLPackage,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/structure/ReportOutputType/getId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getPackage()|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/renderPdfDocument(java.lang.String,java.io.OutputStream)|",
    "called": "|java+method:///org/apache/commons/io/FileUtils/deleteQuietly(java.io.File)|",
    "v1Body": [
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/layout()|",
      "|java+method:///java/net/URI/toURL()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/setDocument(java.lang.String)|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/createPDF(java.io.OutputStream)|",
      "|java+constructor:///org/xhtmlrenderer/pdf/ITextRenderer/ITextRenderer()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/io/DataOutputStream/write(byte%5B%5D)|",
      "|java+method:///org/apache/commons/io/FileUtils/deleteQuietly(java.io.File)|",
      "|java+method:///java/io/File/toURI()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/loadFonts(org.xhtmlrenderer.pdf.ITextRenderer)|",
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/layout()|",
      "|java+method:///java/net/URI/toURL()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/setDocument(java.lang.String)|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/createPDF(java.io.OutputStream)|",
      "|java+constructor:///org/xhtmlrenderer/pdf/ITextRenderer/ITextRenderer()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/io/DataOutputStream/write(byte%5B%5D)|",
      "|java+method:///org/apache/commons/io/FileUtils/deleteQuietly(java.io.File)|",
      "|java+method:///java/io/File/toURI()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/outputDocument()|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager/findPid(java.lang.String,int)|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
    "v1Body": [
      "|java+method:///org/apache/commons/lang/ObjectUtils/equals(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Runtime/exec(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/io/IOUtils/readLines(java.io.InputStream)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/WinProcessManager$NetStatInfo/WinProcessManager$NetStatInfo(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Runtime/exec(java.lang.String)|",
      "|java+method:///java/lang/Process/getInputStream()|",
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/commons/lang3/ObjectUtils/equals(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/getTemplate()|",
    "called": "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream,java.nio.charset.Charset)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentContent()|",
      "|java+method:///freemarker/template/Template/setObjectWrapper(freemarker.template.ObjectWrapper)|",
      "|java+method:///freemarker/template/Configuration/setDefaultEncoding(java.lang.String)|",
      "|java+method:///freemarker/cache/StringTemplateLoader/putTemplate(java.lang.String,java.lang.String)|",
      "|java+constructor:///freemarker/template/Configuration/Configuration()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///freemarker/template/Configuration/setTemplateLoader(freemarker.cache.TemplateLoader)|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream)|",
      "|java+method:///freemarker/template/Configuration/getTemplate(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentName()|",
      "|java+constructor:///freemarker/cache/StringTemplateLoader/StringTemplateLoader()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentContent()|",
      "|java+method:///freemarker/template/Configuration/getTemplate(java.lang.String)|",
      "|java+method:///freemarker/template/Template/setObjectWrapper(freemarker.template.ObjectWrapper)|",
      "|java+method:///freemarker/template/Configuration/setDefaultEncoding(java.lang.String)|",
      "|java+method:///freemarker/cache/StringTemplateLoader/putTemplate(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///freemarker/template/Configuration/setTemplateLoader(freemarker.cache.TemplateLoader)|",
      "|java+constructor:///freemarker/template/Configuration/Configuration()|",
      "|java+method:///org/apache/commons/io/IOUtils/toString(java.io.InputStream,java.nio.charset.Charset)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getDocumentName()|",
      "|java+constructor:///freemarker/cache/StringTemplateLoader/StringTemplateLoader()|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeResourceProvider/createTempFile(byte%5B%5D)|",
    "called": "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
    "v1Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "commons-io:commons-io:2.4",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/renderPdfDocument(java.lang.String,java.io.OutputStream)|",
    "called": "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/layout()|",
    "v1Body": [
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/layout()|",
      "|java+method:///java/net/URI/toURL()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/setDocument(java.lang.String)|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/createPDF(java.io.OutputStream)|",
      "|java+constructor:///org/xhtmlrenderer/pdf/ITextRenderer/ITextRenderer()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/io/DataOutputStream/write(byte%5B%5D)|",
      "|java+method:///org/apache/commons/io/FileUtils/deleteQuietly(java.io.File)|",
      "|java+method:///java/io/File/toURI()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/loadFonts(org.xhtmlrenderer.pdf.ITextRenderer)|",
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/layout()|",
      "|java+method:///java/net/URI/toURL()|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/setDocument(java.lang.String)|",
      "|java+method:///org/xhtmlrenderer/pdf/ITextRenderer/createPDF(java.io.OutputStream)|",
      "|java+constructor:///org/xhtmlrenderer/pdf/ITextRenderer/ITextRenderer()|",
      "|java+method:///java/lang/String/getBytes(java.nio.charset.Charset)|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/net/URL/toString()|",
      "|java+method:///java/io/DataOutputStream/write(byte%5B%5D)|",
      "|java+method:///org/apache/commons/io/FileUtils/deleteQuietly(java.io.File)|",
      "|java+method:///java/io/File/toURI()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///java/nio/charset/Charset/forName(java.lang.String)|"
    ],
    "affectedLib": "org.xhtmlrenderer:flying-saucer-pdf:9.1.7",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader/fillOutputData(java.util.List,java.util.List)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader/putValue(java.util.Map,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$OutputValue,java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader/putValue(java.util.Map,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$OutputValue,java.lang.Object)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/insertValue(com.sun.star.text.XText,com.sun.star.text.XTextRange,com.haulmont.yarg.structure.BandData,java.lang.String)|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///com/sun/star/text/XText/getString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/ReportFieldFormat/getFormat()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/getTagPattern()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToDoc(com.haulmont.yarg.formatters.impl.doc.OfficeComponent,com.sun.star.text.XTextRange,com.sun.star.text.XText,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getReportFieldFormats()|"
    ],
    "v2Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///com/sun/star/text/XText/getString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/ReportFieldFormat/getFormat()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/checkThreadInterrupted()|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/getTagPattern()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/ContentInliner/inlineToDoc(com.haulmont.yarg.formatters.impl.doc.OfficeComponent,com.sun.star.text.XTextRange,com.sun.star.text.XText,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getReportFieldFormats()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/util/converter/AbstractObjectToStringConverter/convertFromStringUnresolved(java.lang.Class,java.lang.String)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///org/apache/commons/lang/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class)|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String)|",
      "|java+method:///org/apache/commons/lang3/reflect/MethodUtils/getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Class/getCanonicalName()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/reflect/Constructor/newInstance(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/reflect/ConstructorUtils/getAccessibleConstructor(java.lang.Class,java.lang.Class%5B%5D)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/handleStringWithAliases(java.lang.String)|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/separateBandNameAndParameterName(java.lang.String)|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/join(java.util.Collection,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/AbstractFormatter$BandPathAndParameterName(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/split(java.lang.String)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandRecursively(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/AbstractFormatter$BandPathAndParameterName(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeResourceProvider/createTempFile(byte%5B%5D)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/file/Files/createTempFile(java.nio.file.Path,java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/getTemporaryDirPath()|",
      "|java+method:///java/io/File/mkdirs()|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/commons/io/FileUtils/writeByteArrayToFile(java.io.File,byte%5B%5D)|",
      "|java+method:///java/nio/file/Paths/get(java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///java/nio/file/Path/toFile()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeHBand(com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/ensureNecessaryRowsCreated(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getBandRange(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/ensureNecessaryRowsCreated(com.haulmont.yarg.formatters.impl.xlsx.Range,org.xlsx4j.sml.Worksheet,org.xlsx4j.sml.Row)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/copyCells(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List,org.xlsx4j.sml.Row,org.xlsx4j.sml.Worksheet)|",
      "|java+method:///org/xlsx4j/sml/SheetData/getRow()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getBandRange(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///org/xlsx4j/sml/Worksheet/getSheetData()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/getSheetByName(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Range/getSheet()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateRangeMappings(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/extractData(com.haulmont.yarg.structure.Report,java.util.Map,com.haulmont.yarg.structure.BandData)|",
    "called": "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionController/extractData(com.haulmont.yarg.reporting.extraction.ExtractionContext)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/getBandData(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getChildren()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/addChildren(java.util.List)|",
      "|java+method:///com/haulmont/yarg/structure/Report/getRootBand()|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/createBands(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getFirstLevelBandDefinitionNames()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getChildren()|",
      "|java+method:///com/haulmont/yarg/reporting/DataExtractorImpl/createBands(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/structure/ReportBand/getName()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getData()|",
      "|java+method:///org/apache/commons/collections4/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionController/extractData(com.haulmont.yarg.reporting.extraction.ExtractionContext)|",
      "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionControllerFactory/defaultController()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/addChildren(java.util.List)|",
      "|java+method:///com/haulmont/yarg/structure/Report/getRootBand()|",
      "|java+method:///com/haulmont/yarg/reporting/extraction/ExtractionContextFactory/context(com.haulmont.yarg.structure.ReportBand,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getFirstLevelBandDefinitionNames()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/renderDocument()|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateFormulas()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateConditionalFormatting()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/clearWorkbook()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findVerticalDependencies()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateCharts()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/saveAndClose()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/init()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateMergeRegions()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateFormulas()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateOutlines()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updatePivotTables()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateConditionalFormatting()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/Document/clearWorkbook()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateSheetNames()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/validateTemplateContainsNamedRange()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findVerticalDependencies()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateCharts()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/saveAndClose()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateHeaderAndFooter()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/hints/XslxHintProcessor/init(com.haulmont.yarg.formatters.impl.xlsx.Document,com.haulmont.yarg.formatters.impl.xlsx.Document)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/hints/XslxHintProcessor/apply()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/init()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/updateMergeRegions()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/parseScriptResult(java.util.List,java.lang.String,java.lang.Object)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/createMap(java.util.Map)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/commons/collections/CollectionUtils/isNotEmpty(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/createMap(java.util.Map)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToXls(org.apache.poi.hssf.usermodel.HSSFPatriarch,org.apache.poi.hssf.usermodel.HSSFCell,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRowIndex()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getSheetName()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRow()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow1(int)|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/ss/usermodel/CreationHelper/createClientAnchor()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/addPicture(byte%5B%5D,int)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/getImageDimension()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCreationHelper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/resize(double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.ss.usermodel.ClientAnchor,int)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFRow/setHeightInPoints(float)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getRowIndex()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getColumnIndex()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow1(int)|",
      "|java+method:///java/awt/Dimension/getHeight()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol1(int)|",
      "|java+method:///org/apache/poi/ss/usermodel/CreationHelper/createClientAnchor()|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPicture/resize(double,double)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getWorkbook()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/addPicture(byte%5B%5D,int)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFSheet/getSheetName()|",
      "|java+method:///org/apache/poi/ss/util/ImageUtils/getDimensionFromAnchor(org.apache.poi.ss.usermodel.Picture)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/getCreationHelper()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFCell/getSheet()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setRow2(int)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFPatriarch/createPicture(org.apache.poi.ss.usermodel.ClientAnchor,int)|",
      "|java+method:///java/awt/Dimension/getWidth()|",
      "|java+method:///org/apache/poi/ss/usermodel/ClientAnchor/setCol2(int)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TextWrapper/fillTextWithBandData()|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/findBandByPath(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/String/matches(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/inlineParameterValue(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/wrapWithReportingException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToDocx(org.docx4j.openpackaging.packages.WordprocessingMLPackage,org.docx4j.wml.Text,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/wml/R/getContent()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageInfo/getSize()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCy()|",
      "|java+method:///org/docx4j/wml/ObjectFactory/createDrawing()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.WordprocessingMLPackage,byte%5B%5D)|",
      "|java+method:///org/docx4j/wml/Text/getParent()|",
      "|java+constructor:///org/docx4j/wml/ObjectFactory/ObjectFactory()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()|",
      "|java+method:///org/docx4j/wml/Drawing/getAnchorOrInline()|",
      "|java+method:///org/docx4j/dml/wordprocessingDrawing/Inline/getExtent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImageInline(java.lang.String,java.lang.String,int,int,boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/getImageInfo()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "v2Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/wml/R/getContent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageInfo/getSize()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getWidthPx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCx()|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/getCy()|",
      "|java+method:///org/docx4j/wml/ObjectFactory/createDrawing()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/resolveTextPartForDOCX(org.docx4j.wml.Text,org.docx4j.openpackaging.packages.WordprocessingMLPackage)|",
      "|java+method:///org/docx4j/wml/Text/getParent()|",
      "|java+constructor:///org/docx4j/wml/ObjectFactory/ObjectFactory()|",
      "|java+method:///org/apache/xmlgraphics/image/loader/ImageSize/getHeightPx()|",
      "|java+method:///org/docx4j/wml/Drawing/getAnchorOrInline()|",
      "|java+method:///org/docx4j/dml/wordprocessingDrawing/Inline/getExtent()|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImageInline(java.lang.String,java.lang.String,int,int,boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/getImageInfo()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/formatValue(java.lang.Object,java.lang.String,java.lang.String,java.lang.String)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/applyStringFunction(java.lang.String,java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/format(java.lang.Object)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/defaultFormat(java.lang.Object)|",
      "|java+constructor:///java/text/DecimalFormat/DecimalFormat(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///java/text/DecimalFormat/format(java.lang.Object)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/newInstance()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/defaultFormat(java.lang.Object)|",
      "|java+constructor:///java/text/DecimalFormat/DecimalFormat(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/ValueFormat/format(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/getFormatString(java.lang.String,java.lang.String)|",
      "|java+method:///java/text/DecimalFormat/format(java.lang.Object)|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/applyStringFunction(java.lang.String,java.lang.String)|",
      "|java+method:///java/text/SimpleDateFormat/format(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter/checkThreadInterrupted()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportingException/ReportingException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)|",
      "|java+method:///java/lang/String/replaceFirst(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForHBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/visit(com.haulmont.yarg.structure.BandVisitor)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/structure/BandData/getParentBand()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter$LastRowBandVisitor/access$100(com.haulmont.yarg.formatters.impl.XlsxFormatter$LastRowBandVisitor)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/XlsxFormatter$LastRowBandVisitor/XlsxFormatter$LastRowBandVisitor(com.haulmont.yarg.formatters.impl.XlsxFormatter)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/visit(com.haulmont.yarg.structure.BandVisitor)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/BandsForRanges/bandForResultRange(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForChildBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getLastRenderedBandForThisLevel(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForFirstRender(com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter$LastRowBandVisitor/access$100(com.haulmont.yarg.formatters.impl.XlsxFormatter$LastRowBandVisitor)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getName()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/XlsxFormatter$LastRowBandVisitor/XlsxFormatter$LastRowBandVisitor(com.haulmont.yarg.formatters.impl.XlsxFormatter)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/visit(com.haulmont.yarg.structure.BandVisitor)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/BandsForRanges/bandForResultRange(com.haulmont.yarg.formatters.impl.xlsx.Range)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForChildBand(com.haulmont.yarg.structure.BandData,com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/getLastRenderedBandForThisLevel(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/findNextRowForFirstRender(com.haulmont.yarg.formatters.impl.xlsx.Range,java.util.List)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParentBand()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XlsxFormatter/setPreviousRangeVerticalOffset(int,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/fillTables()|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/findBandsRecursively(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/DocumentWrapper/getTables()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getTable()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/copyRow(org.docx4j.wml.Tr)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/docx4j/wml/Tbl/getContent()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandsRecursively(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getRowWithAliases()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getBandName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/fillRowFromBand(org.docx4j.wml.Tr,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/noHeader()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getTable()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/copyRow(org.docx4j.wml.Tr)|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/docx4j/wml/Tbl/getContent()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/findBandsRecursively(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getRowWithAliases()|",
      "|java+method:///java/util/List/remove(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/getBandName()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatter/checkThreadInterrupted()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/DocumentWrapper/getTables()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/fillRowFromBand(org.docx4j.wml.Tr,com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager/noHeader()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/runTaskWithTimeout(com.haulmont.yarg.formatters.impl.doc.connector.OfficeTask,int)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportingInterruptedException/ReportingInterruptedException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/Future/get(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///com/haulmont/yarg/exception/OpenOfficeException/OpenOfficeException(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/acquireConnection()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/Future/cancel(boolean)|",
      "|java+constructor:///com/haulmont/yarg/exception/OpenOfficeException/OpenOfficeException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/releaseConnection(com.haulmont.yarg.formatters.impl.doc.connector.OfficeConnection)|",
      "|java+method:///java/util/concurrent/ExecutorService/submit(java.util.concurrent.Callable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeConnection/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration$1/OfficeIntegration$1(com.haulmont.yarg.formatters.impl.doc.connector.OfficeIntegration,com.haulmont.yarg.formatters.impl.doc.connector.OfficeConnection,com.haulmont.yarg.formatters.impl.doc.connector.OfficeTask)|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/Future/get(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/acquireConnection()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/haulmont/yarg/exception/OpenOfficeException/OpenOfficeException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportingInterruptedException/ReportingInterruptedException(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeIntegration/releaseConnection(com.haulmont.yarg.formatters.impl.doc.connector.OfficeConnection)|",
      "|java+method:///java/util/concurrent/ExecutorService/submit(java.util.concurrent.Callable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/doc/connector/OfficeConnection/close()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/OpenOfficeException/OpenOfficeException(java.lang.Throwable)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/util/concurrent/TimeoutException/getCause()|",
      "|java+method:///java/util/concurrent/Future/cancel(boolean)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/outputDocument()|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/PdfConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.PdfConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/xls/DocumentConverter/convertToPdf(com.haulmont.yarg.formatters.impl.xls.DocumentConverter$FileType,byte%5B%5D,java.io.OutputStream)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/wrapWithReportingException(java.lang.String,java.lang.Exception)|",
      "|java+method:///org/apache/poi/hssf/usermodel/HSSFWorkbook/write(java.io.OutputStream)|",
      "|java+method:///org/apache/commons/io/IOUtils/closeQuietly(java.io.OutputStream)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/docx/TableManager$2/handle(org.docx4j.wml.Text)|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/containsJustOneAlias(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getBandPath()|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/AbstractFormatter$BandPathAndParameterName/getParameterName()|",
      "|java+method:///org/docx4j/wml/Text/getValue()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/unwrapParameterName(java.lang.String)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/tryToApplyInliners(java.lang.String,java.lang.Object,org.docx4j.wml.Text)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/insertBandDataToString(com.haulmont.yarg.structure.BandData,java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/separateBandNameAndParameterName(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParameterValue(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/docx4j/wml/Text/setSpace(java.lang.String)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/DocxFormatterDelegate/containsJustOneAlias(java.lang.String)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/docx4j/wml/Text/setValue(java.lang.String)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/loadData(com.haulmont.yarg.structure.ReportQuery,com.haulmont.yarg.structure.BandData,java.util.Map)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/processQueryTemplate(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getQuery()|",
      "|java+constructor:///com/haulmont/yarg/loaders/impl/SqlDataLoader$1/SqlDataLoader$1(com.haulmont.yarg.loaders.impl.SqlDataLoader,java.util.List,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$QueryPack)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/ArrayList/addAll(java.util.Collection)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/runQuery(com.haulmont.yarg.structure.ReportQuery,java.lang.String,java.lang.Object%5B%5D,com.haulmont.yarg.util.db.ResultSetHandler)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getParams()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/isSingleValue()|",
      "|java+method:///java/util/ArrayList/toArray()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getMultipleValues()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getProcessTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/fillOutputData(java.util.List,java.util.List)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/prepareQuery(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getName()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/equals(java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getQuery()|",
      "|java+constructor:///com/haulmont/yarg/loaders/impl/SqlDataLoader$1/SqlDataLoader$1(com.haulmont.yarg.loaders.impl.SqlDataLoader,java.util.List,com.haulmont.yarg.loaders.impl.AbstractDbDataLoader$QueryPack)|",
      "|java+method:///java/util/List/addAll(java.util.Collection)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/runQuery(com.haulmont.yarg.structure.ReportQuery,java.lang.String,java.lang.Object%5B%5D,com.haulmont.yarg.util.db.ResultSetHandler)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryPack/getParams()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/isSingleValue()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/processQueryTemplate(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getMultipleValues()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getProcessTemplate()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/fillOutputData(java.util.List,java.util.List)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/SqlDataLoader/prepareQuery(java.lang.String,com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/AbstractDbDataLoader$QueryParameter/getValue()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getName()|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/loadData(com.haulmont.yarg.structure.ReportQuery,com.haulmont.yarg.structure.BandData,java.util.Map)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/addParentBandDataToParameters(com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/regex/Matcher/replaceAll(java.lang.String)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///org/apache/commons/lang/StringUtils/isNotBlank(java.lang.String)|",
      "|java+method:///com/jayway/jsonpath/JsonPath/read(java.lang.String,java.lang.String,com.jayway.jsonpath.Predicate%5B%5D)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/structure/BandData/getParentBand()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/getParameterName(java.util.regex.Matcher)|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/parseScriptResult(java.util.List,java.lang.String,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/addParentBandDataToParametersRecursively(com.haulmont.yarg.structure.BandData,java.util.Map)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/getParameterName(java.util.regex.Matcher)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isNotBlank(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/loadDataFromScript(com.haulmont.yarg.structure.ReportQuery,java.util.Map,java.util.regex.Matcher,java.lang.Object)|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/structure/ReportQuery/getScript()|",
      "|java+method:///com/haulmont/yarg/loaders/impl/JsonDataLoader/copyParameters(java.util.Map)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/DataLoadingException/DataLoadingException(java.lang.String)|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/renderDocument()|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/writeHtmlDocument(com.haulmont.yarg.structure.BandData,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException()|",
      "|java+method:///com/haulmont/yarg/structure/ReportTemplate/getOutputType()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/renderPdfDocument(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/writeHtmlDocument(com.haulmont.yarg.structure.BandData,java.io.OutputStream)|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+constructor:///com/haulmont/yarg/exception/UnsupportedFormatException/UnsupportedFormatException()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/HtmlFormatter/renderPdfDocument(java.lang.String,java.io.OutputStream)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D)|",
      "|java+method:///java/io/ByteArrayOutputStream/toByteArray()|",
      "|java+constructor:///java/io/ByteArrayOutputStream/ByteArrayOutputStream()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/inlineToDoc(com.haulmont.yarg.formatters.impl.doc.OfficeComponent,com.sun.star.text.XTextRange,com.sun.star.text.XText,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isEmpty(java.lang.String)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/insertHTML(com.sun.star.text.XText,com.sun.star.text.XTextRange,java.lang.String)|",
      "|java+method:///com/sun/star/text/XText/getText()|"
    ],
    "v2Body": [
      "|java+method:///com/sun/star/text/XText/insertString(com.sun.star.text.XTextRange,java.lang.String,boolean)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/isEmpty(java.lang.CharSequence)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/HtmlContentInliner/insertHTML(com.sun.star.text.XText,com.sun.star.text.XTextRange,java.lang.String)|",
      "|java+method:///com/sun/star/text/XText/getText()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/inlineToXlsx(org.docx4j.openpackaging.packages.SpreadsheetMLPackage,org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,org.xlsx4j.sml.Cell,java.lang.Object,java.util.regex.Matcher)|",
    "called": "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setRow(int)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/CTOneCellAnchor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getRow()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getExt()|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTMarker/CTMarker()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setFrom(org.docx4j.dml.spreadsheetdrawing.CTMarker)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/putImage(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,org.docx4j.openpackaging.packages.SpreadsheetMLPackage,org.docx4j.openpackaging.parts.WordprocessingML.BinaryPartAbstractImage,org.docx4j.dml.spreadsheetdrawing.CTOneCellAnchor)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setExt(org.docx4j.dml.CTPositiveSize2D)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/XlsxUtils/convertPxToEmu(long)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getFrom()|",
      "|java+constructor:///org/docx4j/dml/CTPositiveSize2D/CTPositiveSize2D()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setCol(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getColumn()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "v2Body": [
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCy(long)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setRow(int)|",
      "|java+method:///org/xlsx4j/sml/Cell/setV(java.lang.String)|",
      "|java+method:///org/docx4j/openpackaging/parts/WordprocessingML/BinaryPartAbstractImage/createImagePart(org.docx4j.openpackaging.packages.OpcPackage,org.docx4j.openpackaging.parts.Part,byte%5B%5D)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/isValid()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/CellReference(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/CTOneCellAnchor()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getRow()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getExt()|",
      "|java+constructor:///org/docx4j/dml/spreadsheetdrawing/CTMarker/CTMarker()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setFrom(org.docx4j.dml.spreadsheetdrawing.CTMarker)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner/putImage(org.docx4j.openpackaging.parts.SpreadsheetML.WorksheetPart,org.docx4j.openpackaging.packages.SpreadsheetMLPackage,org.docx4j.openpackaging.parts.WordprocessingML.BinaryPartAbstractImage,org.docx4j.dml.spreadsheetdrawing.CTOneCellAnchor)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/setExt(org.docx4j.dml.CTPositiveSize2D)|",
      "|java+method:///org/xlsx4j/sml/Cell/getR()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/XlsxUtils/convertPxToEmu(long)|",
      "|java+constructor:///com/haulmont/yarg/exception/ReportFormattingException/ReportFormattingException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTOneCellAnchor/getFrom()|",
      "|java+constructor:///org/docx4j/dml/CTPositiveSize2D/CTPositiveSize2D()|",
      "|java+method:///org/docx4j/dml/spreadsheetdrawing/CTMarker/setCol(int)|",
      "|java+method:///com/haulmont/yarg/formatters/impl/xlsx/CellReference/getColumn()|",
      "|java+constructor:///com/haulmont/yarg/formatters/impl/inline/AbstractInliner$Image/AbstractInliner$Image(com.haulmont.yarg.formatters.impl.inline.AbstractInliner,java.lang.Object,java.util.regex.Matcher)|",
      "|java+method:///org/docx4j/dml/CTPositiveSize2D/setCx(long)|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.haulmont.yarg:yarg:1.0.70",
    "coordinatesV2": "com.haulmont.yarg:yarg:2.0.12",
    "caller": "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/processDocument()|",
    "called": "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
    "v1Body": [
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateFormulas()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyPictures()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/haulmont/yarg/structure/BandData/getChildrenList()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/updateFormulas()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/copyPictures()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/writeBand(com.haulmont.yarg.structure.BandData)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/haulmont/yarg/formatters/impl/XLSFormatter/checkThreadInterrupted()|"
    ],
    "affectedLib": "com.haulmont.yarg:yarg-api:2.0.12",
    "change": "UPDATED"
  }
]