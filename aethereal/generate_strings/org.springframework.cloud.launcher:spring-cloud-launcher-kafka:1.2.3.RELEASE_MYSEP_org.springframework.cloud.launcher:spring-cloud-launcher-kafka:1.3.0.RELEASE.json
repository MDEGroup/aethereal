[
  {
    "coordinatesV1": "org.springframework.cloud.launcher:spring-cloud-launcher-kafka:1.3.0.RELEASE",
    "coordinatesV2": "org.springframework.cloud.launcher:spring-cloud-launcher-kafka:1.2.3.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$KafkaDevServer/start()|",
    "called": "|java+constructor:///kafka/server/KafkaConfig/KafkaConfig(java.util.Map)|",
    "v1Body": [
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/getPort()|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/shutdown()|",
      "|java+method:///org/springframework/util/ReflectionUtils/rethrowRuntimeException(java.lang.Throwable)|",
      "|java+method:///scala/Option/apply(java.lang.Object)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///org/I0Itec/zkclient/ZkClient/ZkClient(java.lang.String,int,int,org.I0Itec.zkclient.serialize.ZkSerializer)|",
      "|java+method:///kafka/utils/TestUtils/createBrokerConfig(int,java.lang.String,boolean,boolean,int,scala.Option,scala.Option,boolean,boolean,int,boolean,int,boolean,int)|",
      "|java+method:///kafka/utils/TestUtils/createServer(kafka.server.KafkaConfig,kafka.utils.Time)|",
      "|java+method:///org/I0Itec/zkclient/ZkClient/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///kafka/server/KafkaConfig/port()|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/KafkaApplication$EmbeddedZookeeper(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///kafka/server/KafkaConfig/hostName()|",
      "|java+constructor:///kafka/server/KafkaConfig/KafkaConfig(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication/access$000()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/getPort()|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/shutdown()|",
      "|java+method:///org/springframework/util/ReflectionUtils/rethrowRuntimeException(java.lang.Throwable)|",
      "|java+method:///java/util/Properties/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Properties/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///org/I0Itec/zkclient/ZkClient/ZkClient(java.lang.String,int,int,org.I0Itec.zkclient.serialize.ZkSerializer)|",
      "|java+method:///kafka/utils/TestUtils/createServer(kafka.server.KafkaConfig,kafka.utils.Time)|",
      "|java+method:///org/I0Itec/zkclient/ZkClient/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///kafka/utils/TestUtils/createBrokerConfig(int,java.lang.String,boolean,boolean,int,scala.Option,scala.Option,scala.Option,boolean,boolean,int,boolean,int,boolean,int,scala.Option)|",
      "|java+method:///scala/Option/apply(java.lang.Object)|",
      "|java+method:///kafka/server/KafkaConfig/port()|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/KafkaApplication$EmbeddedZookeeper(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///kafka/server/KafkaConfig/hostName()|",
      "|java+constructor:///kafka/server/KafkaConfig/KafkaConfig(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication/access$000()|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.11:0.9.0.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.cloud.launcher:spring-cloud-launcher-kafka:1.3.0.RELEASE",
    "coordinatesV2": "org.springframework.cloud.launcher:spring-cloud-launcher-kafka:1.2.3.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$KafkaDevServer/stop()|",
    "called": "|java+method:///kafka/server/KafkaServer/shutdown()|",
    "v1Body": [
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+method:///kafka/server/KafkaServer/brokerState()|",
      "|java+method:///kafka/server/NotRunning/state()|",
      "|java+method:///kafka/server/BrokerState/currentState()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///kafka/server/KafkaServer/shutdown()|",
      "|java+method:///kafka/server/KafkaServer/awaitShutdown()|",
      "|java+method:///org/I0Itec/zkclient/ZkClient/close()|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/shutdown()|",
      "|java+method:///kafka/utils/CoreUtils/rm(scala.collection.Seq)|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication/access$000()|",
      "|java+method:///kafka/server/KafkaConfig/logDirs()|"
    ],
    "v2Body": [
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication$EmbeddedZookeeper/shutdown()|",
      "|java+method:///kafka/server/KafkaServer/config()|",
      "|java+method:///kafka/server/KafkaServer/brokerState()|",
      "|java+method:///kafka/server/NotRunning/state()|",
      "|java+method:///kafka/server/BrokerState/currentState()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///kafka/utils/CoreUtils/delete(scala.collection.Seq)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///kafka/server/KafkaServer/shutdown()|",
      "|java+method:///kafka/server/KafkaServer/awaitShutdown()|",
      "|java+method:///org/I0Itec/zkclient/ZkClient/close()|",
      "|java+method:///org/springframework/cloud/launcher/kafka/KafkaApplication/access$000()|",
      "|java+method:///kafka/server/KafkaConfig/logDirs()|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.11:0.9.0.1",
    "change": "REMOVED"
  }
]