[
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/provisionConsumerDestination(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties)|",
    "called": "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isEnableDlq()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isAutoRebalanceEnabled()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation/partitionSize(java.lang.String,kafka.utils.ZkUtils)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,int)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getConcurrency()|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkSessionTimeout()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionTimeout()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/getDlqName()|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getInstanceCount()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionString()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getExtension()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicsIfAutoCreateEnabledAndAdminUtilsPresent(java.lang.String,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicAndPartitions(java.lang.String,int,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/admin/DescribeTopicsResult/all()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createAdminClient()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isAutoRebalanceEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getConcurrency()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createDlqIfNeedBe(org.apache.kafka.clients.admin.AdminClient,java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties,boolean,int)|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/close()|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isEnableDlq()|",
      "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/kafka/clients/admin/TopicDescription/partitions()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/describeTopics(java.util.Collection)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,int)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopic(org.apache.kafka.clients.admin.AdminClient,java.lang.String,int,boolean,org.springframework.cloud.stream.binder.kafka.properties.KafkaAdminProperties)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/getAdmin()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getInstanceCount()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getExtension()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:0.10.1.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/provisionProducerDestination(java.lang.String,org.springframework.cloud.stream.binder.ExtendedProducerProperties)|",
    "called": "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
    "v1Body": [
      "|java+method:///org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation/partitionSize(java.lang.String,kafka.utils.ZkUtils)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionString()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicsIfAutoCreateEnabledAndAdminUtilsPresent(java.lang.String,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getPartitionCount()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String,java.lang.Integer)|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkSessionTimeout()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionTimeout()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/admin/DescribeTopicsResult/all()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopic(org.apache.kafka.clients.admin.AdminClient,java.lang.String,int,boolean,org.springframework.cloud.stream.binder.kafka.properties.KafkaAdminProperties)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaProducerProperties/getAdmin()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/describeTopics(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/close()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/create(java.util.Map)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getExtension()|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getPartitionCount()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/clients/admin/TopicDescription/partitions()|"
    ],
    "affectedLib": "org.apache.kafka:kafka-clients:0.10.1.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/provisionConsumerDestination(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties)|",
    "called": "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isEnableDlq()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isAutoRebalanceEnabled()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation/partitionSize(java.lang.String,kafka.utils.ZkUtils)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,int)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getConcurrency()|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkSessionTimeout()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionTimeout()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/getDlqName()|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getInstanceCount()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionString()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getExtension()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicsIfAutoCreateEnabledAndAdminUtilsPresent(java.lang.String,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicAndPartitions(java.lang.String,int,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/admin/DescribeTopicsResult/all()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createAdminClient()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isAutoRebalanceEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getConcurrency()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createDlqIfNeedBe(org.apache.kafka.clients.admin.AdminClient,java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties,boolean,int)|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/close()|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isEnableDlq()|",
      "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/kafka/clients/admin/TopicDescription/partitions()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/describeTopics(java.util.Collection)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,int)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopic(org.apache.kafka.clients.admin.AdminClient,java.lang.String,int,boolean,org.springframework.cloud.stream.binder.kafka.properties.KafkaAdminProperties)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/getAdmin()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getInstanceCount()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getExtension()|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.11:0.10.1.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/provisionProducerDestination(java.lang.String,org.springframework.cloud.stream.binder.ExtendedProducerProperties)|",
    "called": "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
    "v1Body": [
      "|java+method:///org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation/partitionSize(java.lang.String,kafka.utils.ZkUtils)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionString()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicsIfAutoCreateEnabledAndAdminUtilsPresent(java.lang.String,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getPartitionCount()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String,java.lang.Integer)|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkSessionTimeout()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionTimeout()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/admin/DescribeTopicsResult/all()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopic(org.apache.kafka.clients.admin.AdminClient,java.lang.String,int,boolean,org.springframework.cloud.stream.binder.kafka.properties.KafkaAdminProperties)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaProducerProperties/getAdmin()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/describeTopics(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/close()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/create(java.util.Map)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getExtension()|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getPartitionCount()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/clients/admin/TopicDescription/partitions()|"
    ],
    "affectedLib": "org.apache.kafka:kafka_2.11:0.10.1.1",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/provisionConsumerDestination(java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties)|",
    "called": "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String)|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isEnableDlq()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isAutoRebalanceEnabled()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation/partitionSize(java.lang.String,kafka.utils.ZkUtils)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,int)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getConcurrency()|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkSessionTimeout()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionTimeout()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/getDlqName()|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getInstanceCount()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,java.lang.Integer,java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionString()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getExtension()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicsIfAutoCreateEnabledAndAdminUtilsPresent(java.lang.String,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicAndPartitions(java.lang.String,int,boolean)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/admin/DescribeTopicsResult/all()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createAdminClient()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isAutoRebalanceEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getConcurrency()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createDlqIfNeedBe(org.apache.kafka.clients.admin.AdminClient,java.lang.String,java.lang.String,org.springframework.cloud.stream.binder.ExtendedConsumerProperties,boolean,int)|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/close()|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/isEnableDlq()|",
      "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/kafka/clients/admin/TopicDescription/partitions()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/describeTopics(java.util.Collection)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaConsumerDestination/KafkaTopicProvisioner$KafkaConsumerDestination(java.lang.String,int)|",
      "|java+method:///org/springframework/util/StringUtils/hasText(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopic(org.apache.kafka.clients.admin.AdminClient,java.lang.String,int,boolean,org.springframework.cloud.stream.binder.kafka.properties.KafkaAdminProperties)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/util/Assert/isTrue(boolean,java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaConsumerProperties/getAdmin()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getInstanceCount()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedConsumerProperties/getExtension()|"
    ],
    "affectedLib": "org.springframework.cloud:spring-cloud-stream:2.0.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/provisionProducerDestination(java.lang.String,org.springframework.cloud.stream.binder.ExtendedProducerProperties)|",
    "called": "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/springframework/cloud/stream/binder/kafka/admin/AdminUtilsOperation/partitionSize(java.lang.String,kafka.utils.ZkUtils)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionString()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopicsIfAutoCreateEnabledAndAdminUtilsPresent(java.lang.String,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getPartitionCount()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String,java.lang.Integer)|",
      "|java+method:///kafka/utils/ZkUtils/apply(java.lang.String,int,int,boolean)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/security/JaasUtils/isZkSecurityEnabled()|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkSessionTimeout()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/getZkConnectionTimeout()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/kafka/clients/admin/DescribeTopicsResult/all()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/createTopic(org.apache.kafka.clients.admin.AdminClient,java.lang.String,int,boolean,org.springframework.cloud.stream.binder.kafka.properties.KafkaAdminProperties)|",
      "|java+method:///org/apache/commons/logging/Log/isInfoEnabled()|",
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$KafkaProducerDestination/KafkaTopicProvisioner$KafkaProducerDestination(java.lang.String,java.lang.Integer)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaProducerProperties/getAdmin()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/describeTopics(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/properties/KafkaBinderConfigurationProperties/isAutoCreateTopics()|",
      "|java+method:///org/apache/kafka/common/KafkaFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/commons/logging/Log/info(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/springframework/cloud/stream/binder/kafka/utils/KafkaTopicUtils/validateTopicName(java.lang.String)|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/close()|",
      "|java+method:///org/apache/kafka/clients/admin/AdminClient/create(java.util.Map)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/springframework/cloud/stream/provisioning/ProvisioningException/ProvisioningException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getExtension()|",
      "|java+method:///org/springframework/cloud/stream/binder/ExtendedProducerProperties/getPartitionCount()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/kafka/clients/admin/TopicDescription/partitions()|"
    ],
    "affectedLib": "org.springframework.cloud:spring-cloud-stream:2.0.0.RELEASE",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:1.3.3.RELEASE",
    "coordinatesV2": "org.springframework.cloud:spring-cloud-stream-binder-kafka-core:2.0.0.RELEASE",
    "caller": "|java+method:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner/getPartitionsForTopic(int,boolean,java.util.concurrent.Callable)|",
    "called": "|java+constructor:///org/springframework/cloud/stream/binder/BinderException/BinderException(java.lang.String,java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///org/springframework/cloud/stream/binder/kafka/provisioning/KafkaTopicProvisioner$2/KafkaTopicProvisioner$2(org.springframework.cloud.stream.binder.kafka.provisioning.KafkaTopicProvisioner,java.util.concurrent.Callable,int,boolean)|",
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/retry/RetryOperations/execute(org.springframework.retry.RetryCallback)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/BinderException/BinderException(java.lang.String,java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/commons/logging/Log/error(java.lang.Object,java.lang.Throwable)|",
      "|java+method:///org/springframework/retry/RetryOperations/execute(org.springframework.retry.RetryCallback)|",
      "|java+constructor:///org/springframework/cloud/stream/binder/BinderException/BinderException(java.lang.String,java.lang.Throwable)|"
    ],
    "affectedLib": "org.springframework.cloud:spring-cloud-stream:2.0.0.RELEASE",
    "change": "UPDATED"
  }
]