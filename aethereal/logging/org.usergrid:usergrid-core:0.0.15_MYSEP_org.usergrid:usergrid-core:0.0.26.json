[
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchRemoveLocationFromCollectionIndex(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.Object,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
    "called": "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/addLocationEntryDeletionToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/IndexBucketLocator/getBuckets(java.util.UUID,org.usergrid.persistence.IndexBucketLocator$IndexType,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/addLocationEntryDeletionToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/usergrid/persistence/IndexBucketLocator/getBuckets(java.util.UUID,org.usergrid.persistence.IndexBucketLocator$IndexType,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|"
    ],
    "affectedLib": "com.ganyo:geocell:0.0.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchDeleteLocationInConnectionsIndex(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.util.UUID%5B%5D,java.lang.String,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
    "called": "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
    "v1Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchDeleteConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "v2Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchDeleteConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "affectedLib": "com.ganyo:geocell:0.0.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl$SearchConnectionVisitor/visit(org.usergrid.persistence.query.ir.WithinNode)|",
    "called": "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$500(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+method:///org/usergrid/persistence/Query/getResultsLevel()|",
      "|java+method:///org/usergrid/persistence/cassandra/ConnectionRefImpl/getIndexId()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/proximitySearchConnections(java.util.UUID,java.lang.String,com.beoui.geocell.model.Point,double,java.util.UUID,int,boolean,org.usergrid.persistence.Results$Level)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$700(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+method:///org/usergrid/persistence/cassandra/ConnectionRefImpl/getIndexId()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator/GeoIterator(org.usergrid.persistence.query.ir.result.GeoIterator$GeoIndexSearcher,int,org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getSlice()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator$ConnectionGeoSearch/GeoIterator$ConnectionGeoSearch(org.usergrid.persistence.cassandra.GeoIndexManager,java.util.UUID,com.beoui.geocell.model.Point,java.lang.String,float)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+method:///org/usergrid/persistence/cassandra/QueryProcessor/applyCursorAndSort(org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|"
    ],
    "affectedLib": "com.ganyo:geocell:0.0.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchStoreLocationInConnectionsIndex(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.util.UUID%5B%5D,java.lang.String,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
    "called": "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
    "v1Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchAddConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "v2Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchAddConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnValue()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "affectedLib": "com.ganyo:geocell:0.0.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl$SearchCollectionVisitor/visit(org.usergrid.persistence.query.ir.WithinNode)|",
    "called": "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getName()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$500(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/Query/getResultsLevel()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/proximitySearchCollection(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.String,com.beoui.geocell.model.Point,double,java.util.UUID,int,boolean,org.usergrid.persistence.Results$Level)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getName()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator$CollectionGeoSearch/GeoIterator$CollectionGeoSearch(org.usergrid.persistence.cassandra.GeoIndexManager,org.usergrid.persistence.EntityRef,java.lang.String,com.beoui.geocell.model.Point,java.lang.String,float)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$700(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator/GeoIterator(org.usergrid.persistence.query.ir.result.GeoIterator$GeoIndexSearcher,int,org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getSlice()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$000(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+method:///org/usergrid/persistence/cassandra/QueryProcessor/applyCursorAndSort(org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|"
    ],
    "affectedLib": "com.ganyo:geocell:0.0.10",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/setProperty(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/validateEntityPropertyValue(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/Schema/validateEntityPropertyValue(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/updateProperties(java.util.UUID,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateProperties(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.util.Map,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMillis(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateProperties(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.util.Map,java.util.UUID)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMillis(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/addMapToDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/createItemInCollection(java.lang.String,java.lang.String,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createRole(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/cleanUpdatedProperties(java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createGroupRole(java.util.UUID,java.lang.String,long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/create(java.lang.String,java.util.Map)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/InflectionUtils/singularize(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createRole(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/cleanUpdatedProperties(java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createGroupRole(java.util.UUID,java.lang.String,long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/create(java.lang.String,java.util.Map)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/InflectionUtils/singularize(java.lang.Object)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+initializer:///org/usergrid/persistence/cassandra/RelationManagerImpl/RelationManagerImpl$initializer|",
    "called": "|java+constructor:///me/prettyprint/cassandra/serializers/LongSerializer/LongSerializer()|",
    "v1Body": [
      "|java+constructor:///java/util/UUID/UUID(long,long)|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/UUIDSerializer/UUIDSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/ByteBufferSerializer/ByteBufferSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/StringSerializer/StringSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/LongSerializer/LongSerializer()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/UUID/UUID(long,long)|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/UUIDSerializer/UUIDSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/ByteBufferSerializer/ByteBufferSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/StringSerializer/StringSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/LongSerializer/LongSerializer()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/UUIDIndexSliceParser/UUIDIndexSliceParser()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/CollectionIndexSliceParser/CollectionIndexSliceParser()|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/initializeApplication(java.lang.String,java.util.UUID,java.lang.String,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getSetup()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getSystemKeyspace()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addInsertToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getEntityManager(java.util.UUID)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///org/usergrid/persistence/cassandra/Setup/checkKeyspaces()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/buildAppName(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/EntityManager/resetRoles()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/EntityManager/create(java.lang.String,java.lang.Class,java.util.Map)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/Setup/setupApplicationKeyspace(java.util.UUID,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createTimestamp()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getSetup()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/lookupApplication(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getSystemKeyspace()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addInsertToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getEntityManager(java.util.UUID)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///org/usergrid/persistence/EntityManager/resetRoles()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/EntityManager/create(java.lang.String,java.lang.Class,java.util.Map)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/buildAppName(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/ApplicationAlreadyExistsException/ApplicationAlreadyExistsException(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/Setup/setupApplicationKeyspace(java.util.UUID,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createTimestamp()|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/addSetToDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.util.Set)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getStart(org.usergrid.persistence.query.ir.QuerySlice)|",
    "called": "|java+constructor:///me/prettyprint/hector/api/beans/DynamicComposite/DynamicComposite(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/isInclusive()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getCode()|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///me/prettyprint/hector/api/beans/DynamicComposite/DynamicComposite(java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getStart()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getValue()|",
      "|java+method:///org/usergrid/utils/CompositeUtils/setEqualityFlag(me.prettyprint.hector.api.beans.DynamicComposite,me.prettyprint.hector.api.beans.AbstractComposite$ComponentEquality)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getCursor()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/isInclusive()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getCode()|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///me/prettyprint/hector/api/beans/DynamicComposite/DynamicComposite(java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getStart()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getValue()|",
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/fromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/usergrid/utils/CompositeUtils/setEqualityFlag(me.prettyprint.hector.api.beans.DynamicComposite,me.prettyprint.hector.api.beans.AbstractComposite$ComponentEquality)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getCursor()|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/batchPostToQueue(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.mq.Message,org.usergrid.mq.cassandra.MessageIndexUpdate,long)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/batchIncrementQueueCounter(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.lang.String,long,long,java.util.UUID)|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/getQueueShardRowKey(java.util.UUID,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/addMessageCounterMutations(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.util.UUID,org.usergrid.mq.Message,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///me/prettyprint/hector/api/mutation/Mutator/addInsertion(java.lang.Object,java.lang.String,me.prettyprint.hector.api.beans.HColumn)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+constructor:///org/usergrid/mq/cassandra/MessageIndexUpdate/MessageIndexUpdate(org.usergrid.mq.Message)|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/addMessageToMutator(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.mq.Message,long)|",
      "|java+method:///org/usergrid/mq/Queue/normalizeQueuePath(java.lang.String)|",
      "|java+method:///org/usergrid/mq/Message/sync()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/mq/Message/getTimestamp()|",
      "|java+method:///org/usergrid/mq/cassandra/MessageIndexUpdate/addToMutation(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long,long)|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///org/usergrid/mq/Queue/getQueueId(java.lang.String)|",
      "|java+method:///org/usergrid/utils/NumberUtils/roundLong(long,long)|",
      "|java+method:///org/usergrid/utils/ConversionUtils/bytebuffer(java.util.UUID)|",
      "|java+method:///org/usergrid/mq/cassandra/QueuesCF/getColumnFamily()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/getQueueShardRowKey(java.util.UUID,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/addMessageCounterMutations(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.util.UUID,org.usergrid.mq.Message,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///me/prettyprint/hector/api/mutation/Mutator/addInsertion(java.lang.Object,java.lang.String,me.prettyprint.hector.api.beans.HColumn)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+constructor:///org/usergrid/mq/cassandra/MessageIndexUpdate/MessageIndexUpdate(org.usergrid.mq.Message)|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/addMessageToMutator(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.mq.Message,long)|",
      "|java+method:///org/usergrid/mq/Queue/normalizeQueuePath(java.lang.String)|",
      "|java+method:///org/usergrid/mq/Message/sync()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/mq/Message/getTimestamp()|",
      "|java+method:///org/usergrid/mq/cassandra/MessageIndexUpdate/addToMutation(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/batchIncrementQueueCounter(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.lang.String,long,long,java.util.UUID)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///org/usergrid/mq/Queue/getQueueId(java.lang.String)|",
      "|java+method:///org/usergrid/utils/NumberUtils/roundLong(long,long)|",
      "|java+method:///org/usergrid/utils/ConversionUtils/bytebuffer(java.util.UUID)|",
      "|java+method:///org/usergrid/mq/cassandra/QueuesCF/getColumnFamily()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/addToCollection(java.lang.String,org.usergrid.persistence.EntityRef)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/removeFromCollection(java.lang.String,org.usergrid.persistence.EntityRef)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteRole(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getMetadata(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/delete(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/RoleRef/getApplicationRoleName()|",
      "|java+method:///org/usergrid/persistence/SimpleRoleRef/forRoleEntity(org.usergrid.persistence.Entity)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteRole(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/delete(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/RoleRef/getApplicationRoleName()|",
      "|java+method:///org/usergrid/persistence/SimpleRoleRef/forRoleEntity(org.usergrid.persistence.Entity)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/Entity/getMetadata(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/Setup/setupSystemKeyspace()|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createKeyspace(java.lang.String,java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createColumnFamily(java.lang.String,me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/getFromQueue(java.lang.String,org.usergrid.mq.QueueQuery)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMultigetSliceQuery(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///me/prettyprint/hector/api/beans/Row/getColumnSlice()|",
      "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/getQueueBounds(me.prettyprint.hector.api.Keyspace,java.util.UUID)|",
      "|java+constructor:///com/fasterxml/uuid/UUIDComparator/UUIDComparator()|",
      "|java+method:///me/prettyprint/hector/api/mutation/Mutator/addInsertion(java.lang.Object,java.lang.String,me.prettyprint.hector.api.beans.HColumn)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/usergrid/mq/QueueQuery/isUpdate()|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/deserializeMessage(java.util.List)|",
      "|java+method:///org/usergrid/mq/Queue/normalizeQueuePath(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///me/prettyprint/hector/api/query/QueryResult/get()|",
      "|java+method:///org/usergrid/mq/cassandra/QueuesCF/getColumnFamily()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMultigetSliceQuery(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///me/prettyprint/hector/api/query/MultigetSliceQuery/setColumnFamily(java.lang.String)|",
      "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/searchQueueRange(me.prettyprint.hector.api.Keyspace,java.util.UUID,org.usergrid.mq.cassandra.QueueManagerImpl$QueueBounds,java.util.TreeSet,java.util.UUID,java.util.UUID,boolean,org.usergrid.mq.QueryProcessor$QuerySlice,int)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getConsumerId()|",
      "|java+method:///org/usergrid/mq/QueueQuery/getLimit()|",
      "|java+method:///org/usergrid/mq/Queue/getQueueId(java.lang.String)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getNextCount()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/usergrid/mq/QueryProcessor/getSlices()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(java.util.Collection)|",
      "|java+method:///me/prettyprint/hector/api/beans/ColumnSlice/getColumns()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/util/TreeSet/TreeSet(java.util.Comparator)|",
      "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/getQueueRange(me.prettyprint.hector.api.Keyspace,java.util.UUID,org.usergrid.mq.cassandra.QueueManagerImpl$QueueBounds,java.util.TreeSet,java.util.UUID,java.util.UUID,boolean,int)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getLastTimestamp()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/sortReversed(java.util.List)|",
      "|java+method:///org/usergrid/mq/QueueQuery/hasFilterPredicates()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+constructor:///org/usergrid/mq/QueryProcessor/QueryProcessor(org.usergrid.mq.Query)|",
      "|java+method:///java/util/List/subList(int,int)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///me/prettyprint/hector/api/beans/Rows/iterator()|",
      "|java+method:///org/usergrid/mq/QueueQuery/getLastMessageId()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+constructor:///org/usergrid/mq/QueueResults/QueueResults(java.lang.String,java.util.UUID,java.util.List,java.util.UUID,java.util.UUID)|",
      "|java+method:///me/prettyprint/hector/api/query/MultigetSliceQuery/setRange(java.lang.Object,java.lang.Object,boolean,int)|",
      "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/getConsumerQueuePosition(me.prettyprint.hector.api.Keyspace,java.util.UUID,java.util.UUID)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/TreeSet/remove(java.lang.Object)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///me/prettyprint/hector/api/query/MultigetSliceQuery/setKeys(java.lang.Iterable)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getPosition()|",
      "|java+constructor:///org/usergrid/mq/QueueQuery/QueueQuery()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/mq/Message/sortReversed(java.util.List)|",
      "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/mergeAnd(java.util.TreeSet,java.util.TreeSet,boolean,int)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getPreviousCount()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createTimestamp()|",
      "|java+method:///me/prettyprint/hector/api/query/MultigetSliceQuery/execute()|"
    ],
    "v2Body": [
      "|java+constructor:///org/usergrid/mq/cassandra/io/EndSearch/EndSearch(me.prettyprint.hector.api.Keyspace)|",
      "|java+method:///org/usergrid/mq/QueueQuery/hasFilterPredicates()|",
      "|java+constructor:///org/usergrid/mq/cassandra/io/StartSearch/StartSearch(me.prettyprint.hector.api.Keyspace)|",
      "|java+method:///org/usergrid/mq/cassandra/io/QueueSearch/getResults(java.lang.String,org.usergrid.mq.QueueQuery)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+constructor:///org/usergrid/mq/QueueQuery/QueueQuery()|",
      "|java+constructor:///org/usergrid/mq/cassandra/io/FilterSearch/FilterSearch(me.prettyprint.hector.api.Keyspace)|",
      "|java+constructor:///org/usergrid/mq/cassandra/io/ConsumerTransaction/ConsumerTransaction(java.util.UUID,me.prettyprint.hector.api.Keyspace,org.usergrid.locking.LockManager,org.usergrid.persistence.cassandra.CassandraService)|",
      "|java+constructor:///org/usergrid/mq/cassandra/io/NoTransactionSearch/NoTransactionSearch(me.prettyprint.hector.api.Keyspace)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getTimeout()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///org/usergrid/mq/QueueQuery/getPosition()|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/removeFromDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/addToDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteEntity(java.util.UUID)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteAliasesForEntity(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addDeleteToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/usergrid/persistence/Schema/defaultCollectionName(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getUuid()|",
      "|java+method:///org/usergrid/persistence/SimpleEntityRef/ref(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromContainers(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryAsSet(org.usergrid.persistence.EntityRef,java.lang.String)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchDisconnect(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryNames(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/decrementEntityCollection(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getPropertyNames(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteAliasesForEntity(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/usergrid/persistence/Schema/defaultCollectionName(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/SimpleEntityRef/ref(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addDeleteToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromContainers(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryAsSet(org.usergrid.persistence.EntityRef,java.lang.String)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchDisconnect(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryNames(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/decrementEntityCollection(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getPropertyNames(org.usergrid.persistence.EntityRef)|"
    ],
    "affectedLib": "org.hectorclient:hector-core:1.1-2",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+initializer:///org/usergrid/utils/JsonUtils/JsonUtils$initializer|",
    "called": "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/getSerializationConfig()|",
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper(org.codehaus.jackson.JsonFactory)|",
      "|java+method:///org/codehaus/jackson/map/SerializationConfig/set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper(com.fasterxml.jackson.core.JsonFactory)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-smile:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+constructor:///org/usergrid/persistence/Schema/Schema()|",
    "called": "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-smile:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/getJsonSchema(java.lang.Class)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/generateJsonSchema(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/generateJsonSchema(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/generateJsonSchema(java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/mapToFormattedJsonString(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/nodeFromByteBuffer(java.nio.ByteBuffer)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/parse(java.lang.String)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/toMap(org.usergrid.persistence.Entity)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference)|",
    "v1Body": [
      "|java+constructor:///org/usergrid/persistence/Schema$4/Schema$4(org.usergrid.persistence.Schema)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference)|"
    ],
    "v2Body": [
      "|java+constructor:///org/usergrid/persistence/Schema$4/Schema$4(org.usergrid.persistence.Schema)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/setEntityProperty(org.usergrid.persistence.Entity,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/beans/PropertyDescriptor/getPropertyType()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/beans/PropertyDescriptor/getWriteMethod()|",
      "|java+method:///org/usergrid/persistence/Entity/setDynamicProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/usergrid/persistence/Schema/getDescriptorForEntityProperty(java.lang.Class,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/beans/PropertyDescriptor/getPropertyType()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/beans/PropertyDescriptor/getWriteMethod()|",
      "|java+method:///org/usergrid/persistence/Entity/setDynamicProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/usergrid/persistence/Schema/getDescriptorForEntityProperty(java.lang.Class,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/toByteBuffer(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/mapToJsonString(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/toEntity(java.util.Map)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/validateEntityPropertyValue(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/PropertyTypeConversionException/PropertyTypeConversionException(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/PropertyTypeConversionException/PropertyTypeConversionException(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/getEntityJsonSchema(java.lang.String)|",
    "called": "|java+method:///org/codehaus/jackson/node/ObjectNode/remove(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/put(java.lang.String,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/generateJsonSchema(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/getFieldNames()|",
      "|java+method:///org/usergrid/persistence/Schema/isRequiredProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/codehaus/jackson/schema/JsonSchema/getSchemaNode()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/remove(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/remove(java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getSchemaNode()|",
      "|java+method:///org/usergrid/persistence/Schema/isRequiredProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/generateJsonSchema(java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,boolean)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/fieldNames()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+initializer:///org/usergrid/utils/JsonUtils/JsonUtils$initializer|",
    "called": "|java+method:///org/codehaus/jackson/map/SerializationConfig/set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/getSerializationConfig()|",
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper(org.codehaus.jackson.JsonFactory)|",
      "|java+method:///org/codehaus/jackson/map/SerializationConfig/set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper(com.fasterxml.jackson.core.JsonFactory)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/convertToPropertyType(java.lang.Class,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityType(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityType(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/fromByteBuffer(java.nio.ByteBuffer,java.lang.Class)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/normalizeJsonTree(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/utils/JsonUtils/normalizeJsonTree(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/set(int,java.lang.Object)|",
      "|java+method:///java/lang/Integer/longValue()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/usergrid/utils/JsonUtils/tryConvertToUUID(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///java/math/BigInteger/longValue()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/utils/JsonUtils/normalizeJsonTree(java.lang.Object,boolean)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/IndexUtils/buildKeyValueSet(java.lang.Object,java.util.Map,java.lang.String,boolean,java.lang.Object%5B%5D)|",
    "called": "|java+method:///org/codehaus/jackson/node/ObjectNode/getFields()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/usergrid/utils/IndexUtils/buildKeyValueSet(java.lang.Object,java.util.Map,java.lang.String,boolean,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Arrays/copyOf(java.lang.Object%5B%5D,int)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/utils/JsonUtils/quoteString(java.lang.String)|",
      "|java+method:///org/usergrid/utils/ClassUtils/cast(java.lang.Object)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/getFields()|",
      "|java+method:///org/codehaus/jackson/node/ArrayNode/iterator()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/getNumberValue()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/tryGetUUID(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/usergrid/utils/IndexUtils/keywords(java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/fields()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/numberValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/usergrid/utils/IndexUtils/buildKeyValueSet(java.lang.Object,java.util.Map,java.lang.String,boolean,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Arrays/copyOf(java.lang.Object%5B%5D,int)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/utils/JsonUtils/quoteString(java.lang.String)|",
      "|java+method:///org/usergrid/utils/ClassUtils/cast(java.lang.Object)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/databind/node/ArrayNode/iterator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/tryGetUUID(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///org/usergrid/utils/IndexUtils/keywords(java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+constructor:///org/usergrid/persistence/Schema/Schema()|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/convertToPropertyType(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/toJsonMap(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/validateEntitySetValue(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getDictionaryKeyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getDictionaryKeyType(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-mapper-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+constructor:///org/usergrid/persistence/Schema$4/Schema$4(org.usergrid.persistence.Schema)|",
    "called": "|java+constructor:///org/codehaus/jackson/type/TypeReference/TypeReference()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/type/TypeReference/TypeReference()|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/core/type/TypeReference/TypeReference()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-core-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/Schema/getEntityJsonSchema(java.lang.String)|",
    "called": "|java+method:///org/codehaus/jackson/JsonNode/getFieldNames()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/put(java.lang.String,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/generateJsonSchema(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/getFieldNames()|",
      "|java+method:///org/usergrid/persistence/Schema/isRequiredProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/codehaus/jackson/schema/JsonSchema/getSchemaNode()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/remove(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/remove(java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getSchemaNode()|",
      "|java+method:///org/usergrid/persistence/Schema/isRequiredProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/generateJsonSchema(java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,boolean)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/fieldNames()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-core-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/toStorableValue(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/getBigIntegerValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBigInteger()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getBinaryValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBoolean()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isValueNode()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/binaryValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/bigIntegerValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBigInteger()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBinary()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isValueNode()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-core-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/IndexUpdate/toIndexableValue(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/getBigIntegerValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBigInteger()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBoolean()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///org/usergrid/persistence/cassandra/IndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isValueNode()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getBinaryValue()|",
      "|java+method:///java/lang/Number/longValue()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/binaryValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/bigIntegerValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBigInteger()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/usergrid/persistence/cassandra/IndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isValueNode()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-core-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/quoteString(java.lang.String)|",
    "called": "|java+constructor:///org/codehaus/jackson/io/JsonStringEncoder/JsonStringEncoder()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/io/JsonStringEncoder/JsonStringEncoder()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D)|",
      "|java+method:///org/codehaus/jackson/io/JsonStringEncoder/quoteAsUTF8(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/io/JsonStringEncoder/quoteAsUTF8(java.lang.String)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D)|",
      "|java+constructor:///com/fasterxml/jackson/core/io/JsonStringEncoder/JsonStringEncoder()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-core-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.26",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.15",
    "caller": "|java+method:///org/usergrid/mq/cassandra/QueueIndexUpdate/toIndexableValue(java.lang.Object)|",
    "called": "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/getBigIntegerValue()|",
      "|java+method:///org/usergrid/mq/cassandra/QueueIndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBigInteger()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBoolean()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isValueNode()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getBinaryValue()|",
      "|java+method:///java/lang/Number/longValue()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/bigIntegerValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBigInteger()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/usergrid/mq/cassandra/QueueIndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/binaryValue()|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isValueNode()|"
    ],
    "affectedLib": "org.codehaus.jackson:jackson-core-asl:1.9.9",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/getJsonSchema(java.lang.Class)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/generateJsonSchema(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/generateJsonSchema(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/generateJsonSchema(java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/mapToFormattedJsonString(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/nodeFromByteBuffer(java.nio.ByteBuffer)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/parse(java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(java.lang.String,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/toMap(org.usergrid.persistence.Entity)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)|",
    "v1Body": [
      "|java+constructor:///org/usergrid/persistence/Schema$4/Schema$4(org.usergrid.persistence.Schema)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference)|"
    ],
    "v2Body": [
      "|java+constructor:///org/usergrid/persistence/Schema$4/Schema$4(org.usergrid.persistence.Schema)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/setEntityProperty(org.usergrid.persistence.Entity,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/beans/PropertyDescriptor/getPropertyType()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/beans/PropertyDescriptor/getWriteMethod()|",
      "|java+method:///org/usergrid/persistence/Entity/setDynamicProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/usergrid/persistence/Schema/getDescriptorForEntityProperty(java.lang.Class,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/isAssignableFrom(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/beans/PropertyDescriptor/getPropertyType()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/beans/PropertyDescriptor/getWriteMethod()|",
      "|java+method:///org/usergrid/persistence/Entity/setDynamicProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/usergrid/persistence/Schema/getDescriptorForEntityProperty(java.lang.Class,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/toStorableValue(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/getBigIntegerValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBigInteger()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getBinaryValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBoolean()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isValueNode()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/binaryValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/bigIntegerValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBigInteger()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBinary()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isValueNode()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/toByteBuffer(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/mapToJsonString(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/toEntity(java.util.Map)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/IndexUpdate/toIndexableValue(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/getBigIntegerValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBigInteger()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBoolean()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///org/usergrid/persistence/cassandra/IndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isValueNode()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getBinaryValue()|",
      "|java+method:///java/lang/Number/longValue()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/binaryValue()|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/bigIntegerValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBigInteger()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/usergrid/persistence/cassandra/IndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isValueNode()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/validateEntityPropertyValue(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/PropertyTypeConversionException/PropertyTypeConversionException(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/PropertyTypeConversionException/PropertyTypeConversionException(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/getEntityJsonSchema(java.lang.String)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonNode/fieldNames()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/put(java.lang.String,boolean)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/generateJsonSchema(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/getFieldNames()|",
      "|java+method:///org/usergrid/persistence/Schema/isRequiredProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/codehaus/jackson/schema/JsonSchema/getSchemaNode()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/remove(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/remove(java.util.Collection)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/get(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/fasterxml/jackson/databind/jsonschema/JsonSchema/getSchemaNode()|",
      "|java+method:///org/usergrid/persistence/Schema/isRequiredProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/generateJsonSchema(java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/hasProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/put(java.lang.String,boolean)|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/fieldNames()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+initializer:///org/usergrid/utils/JsonUtils/JsonUtils$initializer|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/getSerializationConfig()|",
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper(org.codehaus.jackson.JsonFactory)|",
      "|java+method:///org/codehaus/jackson/map/SerializationConfig/set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper(com.fasterxml.jackson.core.JsonFactory)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/convertToPropertyType(java.lang.Class,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityType(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityType(java.lang.Class)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/fromByteBuffer(java.nio.ByteBuffer,java.lang.Class)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/arrayOffset()|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/nio/ByteBuffer/array()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(byte%5B%5D,int,int,java.lang.Class)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/IndexUtils/buildKeyValueSet(java.lang.Object,java.util.Map,java.lang.String,boolean,java.lang.Object%5B%5D)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/usergrid/utils/IndexUtils/buildKeyValueSet(java.lang.Object,java.util.Map,java.lang.String,boolean,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Arrays/copyOf(java.lang.Object%5B%5D,int)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/utils/JsonUtils/quoteString(java.lang.String)|",
      "|java+method:///org/usergrid/utils/ClassUtils/cast(java.lang.Object)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/node/ObjectNode/getFields()|",
      "|java+method:///org/codehaus/jackson/node/ArrayNode/iterator()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///org/codehaus/jackson/JsonNode/getNumberValue()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/tryGetUUID(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///org/usergrid/utils/IndexUtils/keywords(java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/utils/ClassUtils/isBasicType(java.lang.Class)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/fasterxml/jackson/databind/node/ObjectNode/fields()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/numberValue()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///org/usergrid/utils/IndexUtils/buildKeyValueSet(java.lang.Object,java.util.Map,java.lang.String,boolean,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Arrays/copyOf(java.lang.Object%5B%5D,int)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/utils/JsonUtils/quoteString(java.lang.String)|",
      "|java+method:///org/usergrid/utils/ClassUtils/cast(java.lang.Object)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/fasterxml/jackson/databind/node/ArrayNode/iterator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/tryGetUUID(java.lang.String)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///org/usergrid/utils/IndexUtils/keywords(java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+constructor:///org/usergrid/persistence/Schema/Schema()|",
    "called": "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/convertToPropertyType(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getPropertyType(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/toJsonMap(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/mq/cassandra/QueueIndexUpdate/toIndexableValue(java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
    "v1Body": [
      "|java+method:///org/codehaus/jackson/JsonNode/getBigIntegerValue()|",
      "|java+method:///org/usergrid/mq/cassandra/QueueIndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBigInteger()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getValueAsLong()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///org/codehaus/jackson/JsonNode/isNumber()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isBoolean()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getTextValue()|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isTextual()|",
      "|java+method:///org/codehaus/jackson/JsonNode/isValueNode()|",
      "|java+method:///org/codehaus/jackson/JsonNode/getBinaryValue()|",
      "|java+method:///java/lang/Number/longValue()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/bigIntegerValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBigInteger()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBinary()|",
      "|java+method:///java/math/BigInteger/valueOf(long)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isBoolean()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isNumber()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/textValue()|",
      "|java+method:///java/nio/ByteBuffer/wrap(byte%5B%5D)|",
      "|java+method:///java/util/Date/getTime()|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+method:///org/usergrid/mq/cassandra/QueueIndexUpdate/prepStringForIndex(java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/binaryValue()|",
      "|java+method:///java/lang/Number/longValue()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isTextual()|",
      "|java+method:///com/fasterxml/jackson/databind/JsonNode/isValueNode()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/Schema/validateEntitySetValue(java.lang.String,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/getDictionaryKeyType(java.lang.String,java.lang.String)|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/Schema/getDictionaryKeyType(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/convertValue(java.lang.Object,java.lang.Class)|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-databind:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+initializer:///org/usergrid/utils/JsonUtils/JsonUtils$initializer|",
    "called": "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/getSerializationConfig()|",
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper(org.codehaus.jackson.JsonFactory)|",
      "|java+method:///org/codehaus/jackson/map/SerializationConfig/set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper(com.fasterxml.jackson.core.JsonFactory)|"
    ],
    "affectedLib": "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+constructor:///org/usergrid/persistence/Schema/Schema()|",
    "called": "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/map/ObjectMapper/ObjectMapper()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///org/codehaus/jackson/smile/SmileFactory/SmileFactory()|",
      "|java+method:///org/codehaus/jackson/map/ObjectMapper/configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/dataformat/smile/SmileFactory/SmileFactory()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///com/fasterxml/jackson/databind/ObjectMapper/ObjectMapper()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/configure(com.fasterxml.jackson.databind.SerializationFeature,boolean)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///org/usergrid/persistence/Schema/setDefaultSchema(org.usergrid.persistence.Schema)|"
    ],
    "affectedLib": "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/setProperty(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Schema/validateEntityPropertyValue(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/Schema/validateEntityPropertyValue(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getType()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/updateProperties(java.util.UUID,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateProperties(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.util.Map,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMillis(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateProperties(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.util.Map,java.util.UUID)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMillis(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/Setup/setupStaticKeyspace()|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createKeyspace(java.lang.String,java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/getCfDefs(java.lang.Class,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/getCfDefs(java.lang.Class,java.util.List,java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createColumnFamily(java.lang.String,me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/getCfDefs(java.lang.Class,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createColumnFamilies(java.lang.String,java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/addMapToDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/createItemInCollection(java.lang.String,java.lang.String,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createRole(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/cleanUpdatedProperties(java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createGroupRole(java.util.UUID,java.lang.String,long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/create(java.lang.String,java.util.Map)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/InflectionUtils/singularize(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createRole(java.lang.String,java.lang.String,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/cleanUpdatedProperties(java.lang.String,java.util.Map,boolean)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createGroupRole(java.util.UUID,java.lang.String,long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/create(java.lang.String,java.util.Map)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/InflectionUtils/singularize(java.lang.Object)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+initializer:///org/usergrid/persistence/cassandra/RelationManagerImpl/RelationManagerImpl$initializer|",
    "called": "|java+constructor:///me/prettyprint/cassandra/serializers/LongSerializer/LongSerializer()|",
    "v1Body": [
      "|java+constructor:///java/util/UUID/UUID(long,long)|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/UUIDSerializer/UUIDSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/ByteBufferSerializer/ByteBufferSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/StringSerializer/StringSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/LongSerializer/LongSerializer()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/UUID/UUID(long,long)|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/UUIDSerializer/UUIDSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/ByteBufferSerializer/ByteBufferSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/StringSerializer/StringSerializer()|",
      "|java+constructor:///me/prettyprint/cassandra/serializers/LongSerializer/LongSerializer()|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/UUIDIndexSliceParser/UUIDIndexSliceParser()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/CollectionIndexSliceParser/CollectionIndexSliceParser()|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/initializeApplication(java.lang.String,java.util.UUID,java.lang.String,java.util.Map)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getSetup()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getSystemKeyspace()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addInsertToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getEntityManager(java.util.UUID)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///org/usergrid/persistence/cassandra/Setup/checkKeyspaces()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/buildAppName(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/EntityManager/resetRoles()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/EntityManager/create(java.lang.String,java.lang.Class,java.util.Map)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/Setup/setupApplicationKeyspace(java.util.UUID,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createTimestamp()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getSetup()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/lookupApplication(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getSystemKeyspace()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addInsertToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/getEntityManager(java.util.UUID)|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///org/usergrid/persistence/EntityManager/resetRoles()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/EntityManager/create(java.lang.String,java.lang.Class,java.util.Map)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerFactoryImpl/buildAppName(java.lang.String,java.lang.String)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/ApplicationAlreadyExistsException/ApplicationAlreadyExistsException(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/Setup/setupApplicationKeyspace(java.util.UUID,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createTimestamp()|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/addSetToDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.util.Set)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getStart(org.usergrid.persistence.query.ir.QuerySlice)|",
    "called": "|java+constructor:///me/prettyprint/hector/api/beans/DynamicComposite/DynamicComposite(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/isInclusive()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getCode()|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///me/prettyprint/hector/api/beans/DynamicComposite/DynamicComposite(java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getStart()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getValue()|",
      "|java+method:///org/usergrid/utils/CompositeUtils/setEqualityFlag(me.prettyprint.hector.api.beans.DynamicComposite,me.prettyprint.hector.api.beans.AbstractComposite$ComponentEquality)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getCursor()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/isInclusive()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getCode()|",
      "|java+method:///java/lang/Byte/valueOf(byte)|",
      "|java+constructor:///me/prettyprint/hector/api/beans/DynamicComposite/DynamicComposite(java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getStart()|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice$RangeValue/getValue()|",
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/fromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/usergrid/utils/CompositeUtils/setEqualityFlag(me.prettyprint.hector.api.beans.DynamicComposite,me.prettyprint.hector.api.beans.AbstractComposite$ComponentEquality)|",
      "|java+method:///org/usergrid/persistence/query/ir/QuerySlice/getCursor()|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/mq/cassandra/QueueManagerImpl/batchPostToQueue(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.mq.Message,org.usergrid.mq.cassandra.MessageIndexUpdate,long)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/batchIncrementQueueCounter(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.lang.String,long,long,java.util.UUID)|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/getQueueShardRowKey(java.util.UUID,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/addMessageCounterMutations(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.util.UUID,org.usergrid.mq.Message,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///me/prettyprint/hector/api/mutation/Mutator/addInsertion(java.lang.Object,java.lang.String,me.prettyprint.hector.api.beans.HColumn)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+constructor:///org/usergrid/mq/cassandra/MessageIndexUpdate/MessageIndexUpdate(org.usergrid.mq.Message)|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/addMessageToMutator(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.mq.Message,long)|",
      "|java+method:///org/usergrid/mq/Queue/normalizeQueuePath(java.lang.String)|",
      "|java+method:///org/usergrid/mq/Message/sync()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/mq/Message/getTimestamp()|",
      "|java+method:///org/usergrid/mq/cassandra/MessageIndexUpdate/addToMutation(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long,long)|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///org/usergrid/mq/Queue/getQueueId(java.lang.String)|",
      "|java+method:///org/usergrid/utils/NumberUtils/roundLong(long,long)|",
      "|java+method:///org/usergrid/utils/ConversionUtils/bytebuffer(java.util.UUID)|",
      "|java+method:///org/usergrid/mq/cassandra/QueuesCF/getColumnFamily()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/getQueueShardRowKey(java.util.UUID,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/addMessageCounterMutations(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.util.UUID,org.usergrid.mq.Message,long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///me/prettyprint/hector/api/mutation/Mutator/addInsertion(java.lang.Object,java.lang.String,me.prettyprint.hector.api.beans.HColumn)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+constructor:///org/usergrid/mq/cassandra/MessageIndexUpdate/MessageIndexUpdate(org.usergrid.mq.Message)|",
      "|java+method:///org/usergrid/mq/cassandra/CassandraMQUtils/addMessageToMutator(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.mq.Message,long)|",
      "|java+method:///org/usergrid/mq/Queue/normalizeQueuePath(java.lang.String)|",
      "|java+method:///org/usergrid/mq/Message/sync()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumn(java.lang.Object,java.lang.Object,long,me.prettyprint.hector.api.Serializer,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/mq/Message/getTimestamp()|",
      "|java+method:///org/usergrid/mq/cassandra/MessageIndexUpdate/addToMutation(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CounterUtils/batchIncrementQueueCounter(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,java.lang.String,long,long,java.util.UUID)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/nio/ByteBuffer/allocate(int)|",
      "|java+method:///org/usergrid/mq/Queue/getQueueId(java.lang.String)|",
      "|java+method:///org/usergrid/utils/NumberUtils/roundLong(long,long)|",
      "|java+method:///org/usergrid/utils/ConversionUtils/bytebuffer(java.util.UUID)|",
      "|java+method:///org/usergrid/mq/cassandra/QueuesCF/getColumnFamily()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/addToCollection(java.lang.String,org.usergrid.persistence.EntityRef)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchAddToCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/removeFromCollection(java.lang.String,org.usergrid.persistence.EntityRef)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteRole(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getMetadata(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/delete(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/RoleRef/getApplicationRoleName()|",
      "|java+method:///org/usergrid/persistence/SimpleRoleRef/forRoleEntity(org.usergrid.persistence.Entity)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteRole(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getLinkedCollection()|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromCollection(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,org.usergrid.persistence.Entity,java.util.UUID)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/delete(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///org/usergrid/persistence/RoleRef/getApplicationRoleName()|",
      "|java+method:///org/usergrid/persistence/SimpleRoleRef/forRoleEntity(org.usergrid.persistence.Entity)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/Entity/getMetadata(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/get(org.usergrid.persistence.EntityRef)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///java/lang/String/startsWith(java.lang.String)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/Setup/setupSystemKeyspace()|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createKeyspace(java.lang.String,java.util.List)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|",
      "|java+method:///java/util/List/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/createColumnFamily(java.lang.String,me.prettyprint.hector.api.ddl.ColumnFamilyDefinition)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createColumnFamilyDefinition(java.lang.String,java.lang.String,me.prettyprint.hector.api.ddl.ComparatorType)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/removeFromDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/addToDictionary(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteEntity(java.util.UUID)|",
    "called": "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteAliasesForEntity(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addDeleteToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/usergrid/persistence/Schema/defaultCollectionName(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getUuid()|",
      "|java+method:///org/usergrid/persistence/SimpleEntityRef/ref(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/loadPartialEntity(java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromContainers(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryAsSet(org.usergrid.persistence.EntityRef,java.lang.String)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchDisconnect(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryNames(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/decrementEntityCollection(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/DynamicEntity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getPropertyNames(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/deleteAliasesForEntity(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/EntityRef/getType()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///me/prettyprint/hector/api/factory/HFactory/createMutator(me.prettyprint.hector.api.Keyspace,me.prettyprint.hector.api.Serializer)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/usergrid/persistence/Schema/defaultCollectionName(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/SimpleEntityRef/ref(java.util.UUID)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchUpdateDictionary(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/EntityRef/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addDeleteToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,long)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRef(java.util.UUID)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/batchExecute(me.prettyprint.hector.api.mutation.Mutator,int)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchRemoveFromContainers(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryAsSet(org.usergrid.persistence.EntityRef,java.lang.String)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getApplicationKeyspace(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/batchDisconnect(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getRelationManager(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/Schema/hasDictionary(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getDictionaryNames(org.usergrid.persistence.EntityRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/decrementEntityCollection(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getPropertyNames(org.usergrid.persistence.EntityRef)|"
    ],
    "affectedLib": "org.usergrid:hector-core:1.1-2-1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchCreate(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,java.lang.Class,java.util.Map,java.util.UUID,java.util.UUID)|",
    "called": "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validate(com.fasterxml.jackson.databind.JsonNode)|",
    "v1Body": [
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/entities/Event/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/Entity/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/uniquePropertyWrite(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,java.lang.String,java.lang.Object,java.util.UUID,long)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/usergrid/persistence/exceptions/RequiredPropertyNotFoundException/RequiredPropertyNotFoundException(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Entity/toTypedEntity()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityFactory/newEntity(java.util.UUID,java.lang.String,java.lang.Class)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/incrementEntityCollection(java.lang.String,long)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///org/usergrid/persistence/SimpleEntityRef/ref(java.lang.String,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/IndexBucketLocator/getBucket(java.util.UUID,org.usergrid.persistence.IndexBucketLocator$IndexType,java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/isAssociatedEntityType(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/isPropertyValueUniqueForEntity(java.util.UUID,java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/hasSubkeys()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/usergrid/persistence/Schema/aliasProperty(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/isTimeBased(java.util.UUID)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/isPropertyTimestamp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityInfo(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createAlias(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.String,long)|",
      "|java+method:///org/usergrid/utils/ConversionUtils/getLong(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getRequiredProperties(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Entity/setUuid(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/defaultCollectionName(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/usergrid/locking/Lock/unlock()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addInsertToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,long)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/DuplicateUniquePropertyExistsException/DuplicateUniquePropertyExistsException(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/locking/LockHelper/getUniqueUpdateLock(org.usergrid.locking.LockManager,java.util.UUID,java.lang.Object,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.Entity,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///org/usergrid/persistence/schema/EntityInfo/isPropertyUnique(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String,boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/storeEventAsMessage(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.entities.Event,long)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getSubkeyCombinations()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getLockManager()|",
      "|java+method:///org/usergrid/locking/Lock/lock()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/utils/UUIDUtils/newTimeUUID()|",
      "|java+method:///org/usergrid/persistence/entities/Event/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/UUID/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/batchSetProperty(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.Object,boolean,boolean,java.util.UUID)|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchema/validate(com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///org/usergrid/persistence/Entity/setProperty(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/usergrid/persistence/Entity/getType()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/uniquePropertyWrite(me.prettyprint.hector.api.mutation.Mutator,java.lang.String,java.lang.String,java.lang.Object,java.util.UUID,long)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+constructor:///org/usergrid/persistence/exceptions/RequiredPropertyNotFoundException/RequiredPropertyNotFoundException(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/utils/JsonUtils/toJsonNode(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Entity/toTypedEntity()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/EntityFactory/newEntity(java.util.UUID,java.lang.String,java.lang.Class)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/String/toLowerCase()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/List/toArray()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/incrementEntityCollection(java.lang.String,long)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchemaFactory/getJsonSchema(com.fasterxml.jackson.databind.JsonNode)|",
      "|java+method:///com/github/fge/jsonschema/report/ProcessingReport/isSuccess()|",
      "|java+method:///org/usergrid/persistence/SimpleEntityRef/ref(java.lang.String,java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/IndexBucketLocator/getBucket(java.util.UUID,org.usergrid.persistence.IndexBucketLocator$IndexType,java.util.UUID,java.lang.String%5B%5D)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/isAssociatedEntityType(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/usergrid/mq/Message/getUuid()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/isPropertyValueUniqueForEntity(java.util.UUID,java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/hasSubkeys()|",
      "|java+method:///org/apache/commons/lang/StringUtils/isBlank(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/keySet()|",
      "|java+method:///org/usergrid/persistence/Schema/aliasProperty(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getDefaultSchema()|",
      "|java+method:///org/usergrid/utils/UUIDUtils/isTimeBased(java.util.UUID)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/isPropertyTimestamp(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityInfo(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/createAlias(me.prettyprint.hector.api.mutation.Mutator,java.util.UUID,org.usergrid.persistence.EntityRef,java.lang.String,java.lang.String,long)|",
      "|java+method:///org/usergrid/utils/ConversionUtils/getLong(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/Schema/getRequiredProperties(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/getCollection(java.lang.String,java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Entity/setUuid(java.util.UUID)|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getSchemaForEntityType(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///org/usergrid/persistence/exceptions/EntityValidationException/EntityValidationException(java.lang.String,com.github.fge.jsonschema.report.ProcessingReport)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/defaultCollectionName(java.lang.String)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/usergrid/locking/Lock/unlock()|",
      "|java+method:///org/usergrid/locking/LockHelper/getUniqueUpdateLock(org.usergrid.locking.LockManager,java.util.UUID,java.lang.Object,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/addInsertToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,long)|",
      "|java+constructor:///org/usergrid/persistence/exceptions/DuplicateUniquePropertyExistsException/DuplicateUniquePropertyExistsException(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+constructor:///java/util/TreeMap/TreeMap(java.util.Comparator)|",
      "|java+method:///org/usergrid/persistence/schema/EntityInfo/isPropertyUnique(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/Schema/normalizeEntityType(java.lang.String,boolean)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/storeEventAsMessage(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.entities.Event,long)|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getSubkeyCombinations()|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraService/getLockManager()|",
      "|java+method:///org/usergrid/locking/Lock/lock()|",
      "|java+method:///org/usergrid/persistence/Schema/getEntityClass(java.lang.String)|",
      "|java+method:///org/usergrid/utils/UUIDUtils/getTimestampInMicros(java.util.UUID)|"
    ],
    "affectedLib": "com.github.fge:json-schema-validator:2.1.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+constructor:///org/usergrid/persistence/cassandra/EntityManagerImpl/EntityManagerImpl()|",
    "called": "|java+method:///com/github/fge/jsonschema/cfg/ValidationConfiguration/byDefault()|",
    "v1Body": [
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///com/github/fge/jsonschema/processors/syntax/SyntaxValidator/SyntaxValidator(com.github.fge.jsonschema.cfg.ValidationConfiguration)|",
      "|java+method:///com/github/fge/jsonschema/cfg/ValidationConfiguration/byDefault()|",
      "|java+method:///com/github/fge/jsonschema/main/JsonSchemaFactory/byDefault()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "com.github.fge:json-schema-validator:2.1.6",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchRemoveLocationFromCollectionIndex(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.Object,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
    "called": "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/addLocationEntryDeletionToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/IndexBucketLocator/getBuckets(java.util.UUID,org.usergrid.persistence.IndexBucketLocator$IndexType,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/addLocationEntryDeletionToMutator(me.prettyprint.hector.api.mutation.Mutator,java.lang.Object,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/CassandraPersistenceUtils/key(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/usergrid/persistence/IndexBucketLocator/getBuckets(java.util.UUID,org.usergrid.persistence.IndexBucketLocator$IndexType,java.lang.String%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/slf4j/Logger/isInfoEnabled()|"
    ],
    "affectedLib": "org.usergrid:geocell:0.0.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchDeleteLocationInConnectionsIndex(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.util.UUID%5B%5D,java.lang.String,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
    "called": "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
    "v1Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchDeleteConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "v2Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchDeleteConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "affectedLib": "org.usergrid:geocell:0.0.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl$SearchConnectionVisitor/visit(org.usergrid.persistence.query.ir.WithinNode)|",
    "called": "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$500(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+method:///org/usergrid/persistence/Query/getResultsLevel()|",
      "|java+method:///org/usergrid/persistence/cassandra/ConnectionRefImpl/getIndexId()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/proximitySearchConnections(java.util.UUID,java.lang.String,com.beoui.geocell.model.Point,double,java.util.UUID,int,boolean,org.usergrid.persistence.Results$Level)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$700(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+method:///org/usergrid/persistence/cassandra/ConnectionRefImpl/getIndexId()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator/GeoIterator(org.usergrid.persistence.query.ir.result.GeoIterator$GeoIndexSearcher,int,org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getSlice()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator$ConnectionGeoSearch/GeoIterator$ConnectionGeoSearch(org.usergrid.persistence.cassandra.GeoIndexManager,java.util.UUID,com.beoui.geocell.model.Point,java.lang.String,float)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+method:///org/usergrid/persistence/cassandra/QueryProcessor/applyCursorAndSort(org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|"
    ],
    "affectedLib": "org.usergrid:geocell:0.0.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchStoreLocationInConnectionsIndex(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.util.UUID%5B%5D,java.lang.String,org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
    "called": "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
    "v1Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchAddConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(double)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "v2Body": [
      "|java+method:///me/prettyprint/hector/api/beans/DynamicComposite/serialize()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$100(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/batchAddConnectionIndexEntries(me.prettyprint.hector.api.mutation.Mutator,org.usergrid.persistence.IndexBucketLocator,java.util.UUID,java.lang.String,java.lang.String,java.util.UUID%5B%5D,java.nio.ByteBuffer,java.nio.ByteBuffer,long)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getPoint()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/beoui/geocell/GeocellManager/generateGeoCell(com.beoui.geocell.model.Point)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnValue()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getTimestampInMicros()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/access$000(org.usergrid.persistence.cassandra.GeoIndexManager$EntityLocationRef)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager$EntityLocationRef/getColumnName()|"
    ],
    "affectedLib": "org.usergrid:geocell:0.0.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl$SearchCollectionVisitor/visit(org.usergrid.persistence.query.ir.WithinNode)|",
    "called": "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
    "v1Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getName()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$500(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/getHeadEntity()|",
      "|java+method:///org/usergrid/persistence/Query/getResultsLevel()|",
      "|java+method:///org/usergrid/persistence/cassandra/GeoIndexManager/proximitySearchCollection(org.usergrid.persistence.EntityRef,java.lang.String,java.lang.String,com.beoui.geocell.model.Point,double,java.util.UUID,int,boolean,org.usergrid.persistence.Results$Level)|"
    ],
    "v2Body": [
      "|java+method:///org/usergrid/persistence/cassandra/EntityManagerImpl/getGeoIndexManager()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLattitude()|",
      "|java+method:///org/usergrid/persistence/schema/CollectionInfo/getName()|",
      "|java+method:///java/util/Stack/push(java.lang.Object)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getPropertyName()|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator$CollectionGeoSearch/GeoIterator$CollectionGeoSearch(org.usergrid.persistence.cassandra.GeoIndexManager,org.usergrid.persistence.EntityRef,java.lang.String,com.beoui.geocell.model.Point,java.lang.String,float)|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$700(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+constructor:///com/beoui/geocell/model/Point/Point(double,double)|",
      "|java+constructor:///org/usergrid/persistence/query/ir/result/GeoIterator/GeoIterator(org.usergrid.persistence.query.ir.result.GeoIterator$GeoIndexSearcher,int,org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getLongitude()|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getSlice()|",
      "|java+method:///org/usergrid/persistence/Query/getLimit()|",
      "|java+method:///org/usergrid/persistence/cassandra/RelationManagerImpl/access$000(org.usergrid.persistence.cassandra.RelationManagerImpl)|",
      "|java+method:///org/usergrid/persistence/cassandra/QueryProcessor/applyCursorAndSort(org.usergrid.persistence.query.ir.QuerySlice)|",
      "|java+method:///org/usergrid/persistence/query/ir/WithinNode/getDistance()|"
    ],
    "affectedLib": "org.usergrid:geocell:0.0.11",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+constructor:///org/usergrid/persistence/Schema$4/Schema$4(org.usergrid.persistence.Schema)|",
    "called": "|java+constructor:///com/fasterxml/jackson/core/type/TypeReference/TypeReference()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/type/TypeReference/TypeReference()|"
    ],
    "v2Body": [
      "|java+constructor:///com/fasterxml/jackson/core/type/TypeReference/TypeReference()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.usergrid:usergrid-core:0.0.15",
    "coordinatesV2": "org.usergrid:usergrid-core:0.0.26",
    "caller": "|java+method:///org/usergrid/utils/JsonUtils/quoteString(java.lang.String)|",
    "called": "|java+constructor:///com/fasterxml/jackson/core/io/JsonStringEncoder/JsonStringEncoder()|",
    "v1Body": [
      "|java+constructor:///org/codehaus/jackson/io/JsonStringEncoder/JsonStringEncoder()|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D)|",
      "|java+method:///org/codehaus/jackson/io/JsonStringEncoder/quoteAsUTF8(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/core/io/JsonStringEncoder/quoteAsUTF8(java.lang.String)|",
      "|java+constructor:///java/lang/String/String(byte%5B%5D)|",
      "|java+constructor:///com/fasterxml/jackson/core/io/JsonStringEncoder/JsonStringEncoder()|"
    ],
    "affectedLib": "com.fasterxml.jackson.core:jackson-core:2.2.0",
    "change": "ADDED"
  }
]