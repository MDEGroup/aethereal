[
  {
    "coordinatesV1": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta1",
    "coordinatesV2": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta2",
    "caller": "|java+method:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/withBatchSize(com.datastax.spark.connector.BatchSize)|",
    "called": "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|",
    "v1Body": [
      "|java+constructor:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/RDDAndDStreamCommonJavaFunctions$WriterBuilder(com.datastax.spark.connector.japi.RDDAndDStreamCommonJavaFunctions,java.lang.String,java.lang.String,com.datastax.spark.connector.writer.RowWriterFactory,com.datastax.spark.connector.ColumnSelector,com.datastax.spark.connector.cql.CassandraConnector,com.datastax.spark.connector.writer.WriteConf)|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/parallelismLevel()|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/consistencyLevel()|",
      "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|"
    ],
    "v2Body": [
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/batchSize()|",
      "|java+constructor:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/RDDAndDStreamCommonJavaFunctions$WriterBuilder(com.datastax.spark.connector.japi.RDDAndDStreamCommonJavaFunctions,java.lang.String,java.lang.String,com.datastax.spark.connector.writer.RowWriterFactory,com.datastax.spark.connector.ColumnSelector,com.datastax.spark.connector.cql.CassandraConnector,com.datastax.spark.connector.writer.WriteConf)|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/parallelismLevel()|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/consistencyLevel()|",
      "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|"
    ],
    "affectedLib": "com.datastax.spark:spark-cassandra-connector_2.10:1.1.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta1",
    "coordinatesV2": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta2",
    "caller": "|java+method:///com/datastax/spark/connector/japi/CassandraRow$$anonfun$fromJavaDriverRow$1/apply$mcVI$sp(int)|",
    "called": "|java+method:///com/datastax/spark/connector/AbstractRow$/get(com.datastax.driver.core.Row,int,com.datastax.driver.core.ProtocolVersion)|",
    "v1Body": [
      "|java+method:///com/datastax/spark/connector/AbstractRow$/get(com.datastax.driver.core.Row,int)|"
    ],
    "v2Body": [
      "|java+method:///com/datastax/spark/connector/AbstractRow$/get(com.datastax.driver.core.Row,int,com.datastax.driver.core.ProtocolVersion)|"
    ],
    "affectedLib": "com.datastax.spark:spark-cassandra-connector_2.10:1.1.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta1",
    "coordinatesV2": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta2",
    "caller": "|java+method:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/withParallelismLevel(int)|",
    "called": "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|",
    "v1Body": [
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/batchSize()|",
      "|java+constructor:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/RDDAndDStreamCommonJavaFunctions$WriterBuilder(com.datastax.spark.connector.japi.RDDAndDStreamCommonJavaFunctions,java.lang.String,java.lang.String,com.datastax.spark.connector.writer.RowWriterFactory,com.datastax.spark.connector.ColumnSelector,com.datastax.spark.connector.cql.CassandraConnector,com.datastax.spark.connector.writer.WriteConf)|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/consistencyLevel()|",
      "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|"
    ],
    "v2Body": [
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/batchSize()|",
      "|java+constructor:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/RDDAndDStreamCommonJavaFunctions$WriterBuilder(com.datastax.spark.connector.japi.RDDAndDStreamCommonJavaFunctions,java.lang.String,java.lang.String,com.datastax.spark.connector.writer.RowWriterFactory,com.datastax.spark.connector.ColumnSelector,com.datastax.spark.connector.cql.CassandraConnector,com.datastax.spark.connector.writer.WriteConf)|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/parallelismLevel()|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/consistencyLevel()|",
      "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|"
    ],
    "affectedLib": "com.datastax.spark:spark-cassandra-connector_2.10:1.1.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta1",
    "coordinatesV2": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta2",
    "caller": "|java+method:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/withConsistencyLevel(com.datastax.driver.core.ConsistencyLevel)|",
    "called": "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|",
    "v1Body": [
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/batchSize()|",
      "|java+constructor:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/RDDAndDStreamCommonJavaFunctions$WriterBuilder(com.datastax.spark.connector.japi.RDDAndDStreamCommonJavaFunctions,java.lang.String,java.lang.String,com.datastax.spark.connector.writer.RowWriterFactory,com.datastax.spark.connector.ColumnSelector,com.datastax.spark.connector.cql.CassandraConnector,com.datastax.spark.connector.writer.WriteConf)|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/parallelismLevel()|",
      "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|"
    ],
    "v2Body": [
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/batchSize()|",
      "|java+constructor:///com/datastax/spark/connector/japi/RDDAndDStreamCommonJavaFunctions$WriterBuilder/RDDAndDStreamCommonJavaFunctions$WriterBuilder(com.datastax.spark.connector.japi.RDDAndDStreamCommonJavaFunctions,java.lang.String,java.lang.String,com.datastax.spark.connector.writer.RowWriterFactory,com.datastax.spark.connector.ColumnSelector,com.datastax.spark.connector.cql.CassandraConnector,com.datastax.spark.connector.writer.WriteConf)|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/parallelismLevel()|",
      "|java+method:///com/datastax/spark/connector/writer/WriteConf/consistencyLevel()|",
      "|java+constructor:///com/datastax/spark/connector/writer/WriteConf/WriteConf(com.datastax.spark.connector.BatchSize,com.datastax.driver.core.ConsistencyLevel,int)|"
    ],
    "affectedLib": "com.datastax.spark:spark-cassandra-connector_2.10:1.1.0-beta2",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta1",
    "coordinatesV2": "com.datastax.spark:spark-cassandra-connector-java_2.10:1.1.0-beta2",
    "caller": "|java+constructor:///com/datastax/spark/connector/japi/CassandraRow/CassandraRow(java.lang.Object%5B%5D,java.lang.String%5B%5D)|",
    "called": "|java+constructor:///com/datastax/spark/connector/AbstractRow/AbstractRow(scala.collection.IndexedSeq,scala.collection.IndexedSeq)|",
    "v1Body": [
      "|java+constructor:///com/datastax/spark/connector/AbstractRow/AbstractRow(java.lang.Object%5B%5D,java.lang.String%5B%5D)|"
    ],
    "v2Body": [
      "|java+constructor:///com/datastax/spark/connector/AbstractRow/AbstractRow(scala.collection.IndexedSeq,scala.collection.IndexedSeq)|",
      "|java+method:///scala/Predef$/wrapRefArray(java.lang.Object%5B%5D)|"
    ],
    "affectedLib": "com.datastax.spark:spark-cassandra-connector_2.10:1.1.0-beta2",
    "change": "UPDATED"
  }
]