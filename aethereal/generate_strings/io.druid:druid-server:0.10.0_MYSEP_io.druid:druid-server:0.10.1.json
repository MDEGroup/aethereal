[
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/selector/ServerSelector/getCandidates(int)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/values()|",
    "v1Body": [
      "|java+method:///java/util/TreeMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///io/druid/client/DruidServer/getMetadata()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/google/common/collect/Maps/newTreeMap()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/TreeMap/entrySet()|",
      "|java+method:///io/druid/client/selector/ServerSelector/toPrioritizedServers()|",
      "|java+method:///io/druid/client/selector/QueryableDruidServer/getServer()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/client/selector/TierSelectorStrategy/pick(java.util.TreeMap,io.druid.timeline.DataSegment)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|"
    ],
    "v2Body": [
      "|java+method:///java/util/stream/Stream/map(java.util.function.Function)|",
      "|java+method:///java/util/stream/Stream/collect(java.util.stream.Collector)|",
      "|java+method:///io/druid/client/selector/TierSelectorStrategy/pick(it.unimi.dsi.fastutil.ints.Int2ObjectRBTreeMap,io.druid.timeline.DataSegment,int)|",
      "|java+method:///java/util/stream/Stream/flatMap(java.util.function.Function)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/ObjectCollection/stream()|",
      "|java+method:///java/util/stream/Collectors/toList()|",
      "|java+method:///java/util/List/stream()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/values()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordinator/CoordinatorStats/addToTieredStat(java.lang.String,java.lang.String,long)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///io/druid/collections/CountingMap/CountingMap()|",
      "|java+method:///io/druid/collections/CountingMap/add(java.lang.Object,long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/computeIfAbsent(java.lang.Object,java.util.function.Function)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/metrics/HistoricalMetricsMonitor/doMonitor(com.metamx.emitter.service.ServiceEmitter)|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/Object2LongOpenHashMap()|",
    "v1Body": [
      "|java+method:///io/druid/client/DruidServerConfig/getPriority()|",
      "|java+method:///io/druid/java/util/common/collect/CountingMap/entrySet()|",
      "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+constructor:///io/druid/java/util/common/collect/CountingMap/CountingMap()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/client/DruidServerConfig/getTier()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/druid/timeline/DataSegment/getSize()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceSizes()|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceCounts()|",
      "|java+method:///io/druid/timeline/DataSegment/getDataSource()|",
      "|java+method:///io/druid/java/util/common/collect/CountingMap/add(java.lang.Object,java.lang.Long)|",
      "|java+method:///io/druid/server/coordination/ZkCoordinator/getPendingDeleteSnapshot()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///io/druid/client/DruidServerConfig/getMaxSize()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/client/DruidServerConfig/getPriority()|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/Object2LongOpenHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongMap$Entry/getKey()|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/SegmentManager/getDataSourceSizes()|",
      "|java+method:///io/druid/timeline/DataSegment/getDataSource()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/client/DruidServerConfig/getTier()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongMap$FastEntrySet/iterator()|",
      "|java+constructor:///com/metamx/emitter/service/ServiceMetricEvent$Builder/ServiceMetricEvent$Builder()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/object2LongEntrySet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///io/druid/timeline/DataSegment/getSize()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/druid/server/coordination/ZkCoordinator/getPendingDeleteSnapshot()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///io/druid/server/SegmentManager/getDataSourceCounts()|",
      "|java+method:///java/lang/String/valueOf(int)|",
      "|java+method:///io/druid/client/DruidServerConfig/getMaxSize()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongMap$Entry/getLongValue()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordinator/DruidCoordinator/getSegmentAvailability()|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/Object2LongOpenHashMap()|",
    "v1Body": [
      "|java+method:///io/druid/server/coordinator/DruidCoordinator/getAvailableDataSegments()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/collections/CountingMap/add(java.lang.Object,long)|",
      "|java+method:///io/druid/server/coordinator/SegmentReplicantLookup/getTotalReplicants(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+constructor:///io/druid/collections/CountingMap/CountingMap()|",
      "|java+method:///io/druid/timeline/DataSegment/getDataSource()|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|"
    ],
    "v2Body": [
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/Object2LongOpenHashMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/server/coordinator/SegmentReplicantLookup/getTotalReplicants(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///io/druid/timeline/DataSegment/getDataSource()|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|",
      "|java+method:///io/druid/server/coordinator/DruidCoordinator/getAvailableDataSegments()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+constructor:///io/druid/client/selector/ServerSelector/ServerSelector(io.druid.timeline.DataSegment,io.druid.client.selector.TierSelectorStrategy)|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/Int2ObjectRBTreeMap(java.util.Comparator)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Sets/newHashSet()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/client/selector/TierSelectorStrategy/getComparator()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+constructor:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/Int2ObjectRBTreeMap(java.util.Comparator)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/selector/ServerSelector/removeServer(io.druid.client.selector.QueryableDruidServer)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/remove(int)|",
    "v1Body": [
      "|java+method:///java/util/Set/remove(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/get(int)|",
      "|java+method:///io/druid/client/selector/QueryableDruidServer/getServer()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///io/druid/client/DruidServer/getPriority()|",
      "|java+method:///it/unimi/dsi/fastutil/ints/Int2ObjectRBTreeMap/remove(int)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordinator/CoordinatorStats/accumulate(io.druid.server.coordinator.CoordinatorStats)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/druid/collections/CountingMap/entrySet()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/collections/CountingMap/add(java.lang.Object,long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///io/druid/collections/CountingMap/CountingMap()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/forEach(java.util.function.BiConsumer)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongMap$FastEntrySet/iterator()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongMap$Entry/getKey()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/object2LongEntrySet()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongMap$Entry/getLongValue()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+constructor:///io/druid/server/coordinator/CoordinatorStats/CoordinatorStats()|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/Object2LongOpenHashMap()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///io/druid/collections/CountingMap/CountingMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/Object2LongOpenHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordinator/CoordinatorStats/addToGlobalStat(java.lang.String,long)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|",
    "v1Body": [
      "|java+method:///io/druid/collections/CountingMap/add(java.lang.Object,long)|"
    ],
    "v2Body": [
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2LongOpenHashMap/addTo(java.lang.Object,long)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.2.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$1/done(com.metamx.http.client.response.ClientResponse)|",
    "called": "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/metamx/http/client/response/ClientResponse/getObj()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/io/ByteSource/empty()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100(io.druid.client.DirectDruidClient)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/google/common/io/ByteSource/openStream()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "v2Body": [
      "|java+method:///com/metamx/http/client/response/ClientResponse/getObj()|",
      "|java+method:///com/google/common/io/ByteSource/openStream()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100()|",
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///com/google/common/io/ByteSource/empty()|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/client/DirectDruidClient$1/acquireResponseMetrics()|",
      "|java+method:///io/druid/query/QueryMetrics/reportNodeTime(long)|",
      "|java+method:///io/druid/query/QueryMetrics/emit(com.metamx.emitter.service.ServiceEmitter)|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Double/valueOf(double)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryMetrics/reportNodeBytes(long)|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "affectedLib": "com.metamx:http-client:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$2/onFailure(java.lang.Throwable)|",
    "called": "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getCode()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndDecrement()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$700(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$600(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$500(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getStatus()|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/isCancelled()|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getReasonPhrase()|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/http/client/response/StatusResponseHandler/StatusResponseHandler(java.nio.charset.Charset)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getCode()|",
      "|java+constructor:///com/metamx/http/client/Request/Request(org.jboss.netty.handler.codec.http.HttpMethod,java.net.URL)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$300(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///java/net/URL/URL(java.lang.String)|",
      "|java+method:///com/metamx/http/client/HttpClient/go(com.metamx.http.client.Request,com.metamx.http.client.response.HttpResponseHandler,org.joda.time.Duration)|",
      "|java+method:///com/metamx/http/client/response/StatusResponseHolder/getStatus()|",
      "|java+method:///com/metamx/http/client/Request/setContent(byte%5B%5D)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/isCancelled()|",
      "|java+method:///com/metamx/http/client/Request/setHeader(java.lang.String,java.lang.String)|",
      "|java+method:///org/joda/time/Duration/standardSeconds(long)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$900(io.druid.client.DirectDruidClient)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/getAndDecrement()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$800(io.druid.client.DirectDruidClient)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$1000(io.druid.client.DirectDruidClient)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponseStatus/getReasonPhrase()|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/get(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///com/metamx/http/client/response/StatusResponseHandler/StatusResponseHandler(java.nio.charset.Charset)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsBytes(java.lang.Object)|"
    ],
    "affectedLib": "com.metamx:http-client:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$1/handleResponse(org.jboss.netty.handler.codec.http.HttpResponse)|",
    "called": "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
    "v1Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$1/DirectDruidClient$1$1(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+constructor:///java/io/SequenceInputStream/SequenceInputStream(java.util.Enumeration)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/getContent()|",
      "|java+method:///org/jboss/netty/buffer/ChannelBuffer/readableBytes()|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$3/DirectDruidClient$1$3(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$2/DirectDruidClient$1$2(io.druid.client.DirectDruidClient$1,java.io.IOException)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/jboss/netty/buffer/ChannelBufferInputStream/ChannelBufferInputStream(org.jboss.netty.buffer.ChannelBuffer)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|"
    ],
    "v2Body": [
      "|java+method:///org/jboss/netty/handler/codec/http/HttpHeaders/get(java.lang.String)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$100()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$2/DirectDruidClient$1$2(io.druid.client.DirectDruidClient$1,java.io.IOException)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$1/DirectDruidClient$1$1(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///io/druid/client/DirectDruidClient$1/checkQueryTimeout()|",
      "|java+method:///io/druid/client/DirectDruidClient$1/acquireResponseMetrics()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/headers()|",
      "|java+method:///io/druid/client/DirectDruidClient$1/checkTotalBytesLimit(long)|",
      "|java+method:///com/metamx/http/client/response/ClientResponse/finished(java.lang.Object)|",
      "|java+method:///io/druid/query/QueryMetrics/emit(com.metamx.emitter.service.ServiceEmitter)|",
      "|java+constructor:///java/io/SequenceInputStream/SequenceInputStream(java.util.Enumeration)|",
      "|java+method:///io/druid/query/QueryMetrics/reportNodeTimeToFirstByte(long)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///org/jboss/netty/handler/codec/http/HttpResponse/getContent()|",
      "|java+method:///org/jboss/netty/buffer/ChannelBuffer/readableBytes()|",
      "|java+method:///java/util/concurrent/BlockingQueue/put(java.lang.Object)|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$300(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/client/DirectDruidClient$1$3/DirectDruidClient$1$3(io.druid.client.DirectDruidClient$1)|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/jboss/netty/buffer/ChannelBufferInputStream/ChannelBufferInputStream(org.jboss.netty.buffer.ChannelBuffer)|"
    ],
    "affectedLib": "com.metamx:http-client:1.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/AsyncQueryForwardingServlet$MetricsEmittingProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
    "called": "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
    "v1Body": [
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$600(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$500(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$400(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$100(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///javax/ws/rs/core/Response$Status/getStatusCode()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$300(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///org/eclipse/jetty/client/api/Response/getStatus()|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$200(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$000()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/client/api/Result/getResponse()|",
      "|java+method:///org/eclipse/jetty/client/api/Result/isSucceeded()|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$100(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///javax/ws/rs/core/Response$Status/getStatusCode()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$300(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///org/eclipse/jetty/proxy/ProxyServlet$ProxyResponseListener/onComplete(org.eclipse.jetty.client.api.Result)|",
      "|java+method:///org/eclipse/jetty/client/api/Response/getStatus()|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$200(io.druid.server.AsyncQueryForwardingServlet)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+constructor:///org/joda/time/DateTime/DateTime()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet$MetricsEmittingProxyResponseListener/emitQueryTime(long,boolean)|",
      "|java+method:///io/druid/server/AsyncQueryForwardingServlet/access$000()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/eclipse/jetty/client/api/Result/getResponse()|",
      "|java+method:///org/eclipse/jetty/client/api/Result/isSucceeded()|"
    ],
    "affectedLib": "org.eclipse.jetty:jetty-proxy:9.3.19.v20170502",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordination/ServerManager$3/apply(io.druid.query.SegmentDescriptor)|",
    "called": "|java+constructor:///io/druid/query/ReportTimelineMissingSegmentQueryRunner/ReportTimelineMissingSegmentQueryRunner(io.druid.query.SegmentDescriptor)|",
    "v1Body": [
      "|java+method:///io/druid/query/SegmentDescriptor/getPartitionNumber()|",
      "|java+method:///io/druid/query/SegmentDescriptor/getVersion()|",
      "|java+method:///io/druid/query/SegmentDescriptor/getInterval()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/timeline/partition/PartitionHolder/getChunk(int)|",
      "|java+constructor:///io/druid/query/ReportTimelineMissingSegmentQueryRunner/ReportTimelineMissingSegmentQueryRunner(io.druid.query.SegmentDescriptor)|",
      "|java+method:///io/druid/server/coordination/ServerManager/access$000(io.druid.server.coordination.ServerManager,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,io.druid.segment.ReferenceCountingSegment,io.druid.query.SegmentDescriptor,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+method:///io/druid/timeline/partition/PartitionChunk/getObject()|",
      "|java+method:///io/druid/timeline/VersionedIntervalTimeline/findEntry(org.joda.time.Interval,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/SegmentDescriptor/getPartitionNumber()|",
      "|java+method:///io/druid/query/SegmentDescriptor/getVersion()|",
      "|java+method:///io/druid/query/SegmentDescriptor/getInterval()|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/coordination/ServerManager/access$000(io.druid.server.coordination.ServerManager,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,io.druid.segment.ReferenceCountingSegment,io.druid.query.SegmentDescriptor,java.util.concurrent.atomic.AtomicLong)|",
      "|java+method:///io/druid/timeline/partition/PartitionHolder/getChunk(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+constructor:///io/druid/query/ReportTimelineMissingSegmentQueryRunner/ReportTimelineMissingSegmentQueryRunner(io.druid.query.SegmentDescriptor)|",
      "|java+method:///io/druid/timeline/partition/PartitionChunk/getObject()|",
      "|java+method:///io/druid/timeline/VersionedIntervalTimeline/findEntry(org.joda.time.Interval,java.lang.Object)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/segment/realtime/FireHydrant/toString()|",
    "called": "|java+method:///io/druid/segment/ReferenceCountingSegment/getIdentifier()|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///io/druid/segment/ReferenceCountingSegment/getIdentifier()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(char)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/query/lookup/LookupIntrospectionResource/introspectLookup(java.lang.String)|",
    "called": "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
    "v1Body": [
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/get()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/getIntrospectHandler()|"
    ],
    "v2Body": [
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactoryContainer/getLookupExtractorFactory()|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///io/druid/query/lookup/LookupReferencesManager/get(java.lang.String)|",
      "|java+method:///io/druid/java/util/common/logger/Logger/error(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/get()|",
      "|java+method:///io/druid/java/util/common/logger/Logger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/lookup/LookupExtractorFactory/getIntrospectHandler()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/guice/DruidProcessingModule/getMergeBufferPool(io.druid.query.DruidProcessingConfig)|",
    "called": "|java+method:///io/druid/query/DruidProcessingConfig/getNumMergeBuffers()|",
    "v1Body": [
      "|java+constructor:///io/druid/collections/BlockingPool/BlockingPool(com.google.common.base.Supplier,int)|",
      "|java+method:///io/druid/guice/DruidProcessingModule/verifyDirectMemory(io.druid.query.DruidProcessingConfig)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumMergeBuffers()|",
      "|java+method:///io/druid/query/DruidProcessingConfig/intermediateComputeSizeBytes()|",
      "|java+constructor:///io/druid/offheap/OffheapBufferGenerator/OffheapBufferGenerator(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/guice/DruidProcessingModule/verifyDirectMemory(io.druid.query.DruidProcessingConfig)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/getNumMergeBuffers()|",
      "|java+constructor:///io/druid/offheap/OffheapBufferGenerator/OffheapBufferGenerator(java.lang.String,int)|",
      "|java+method:///io/druid/query/DruidProcessingConfig/intermediateComputeSizeBytes()|",
      "|java+constructor:///io/druid/collections/DefaultBlockingPool/DefaultBlockingPool(com.google.common.base.Supplier,int)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/CacheUtil/populateCache(io.druid.query.Query,io.druid.query.CacheStrategy,io.druid.client.cache.CacheConfig)|",
    "called": "|java+method:///io/druid/query/QueryContexts/isPopulateCache(io.druid.query.Query)|",
    "v1Body": [
      "|java+method:///io/druid/client/cache/CacheConfig/isPopulateCache()|",
      "|java+method:///io/druid/client/cache/CacheConfig/isQueryCacheable(io.druid.query.Query)|",
      "|java+method:///io/druid/query/BaseQuery/getContextPopulateCache(io.druid.query.Query,boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/client/cache/CacheConfig/isPopulateCache()|",
      "|java+method:///io/druid/client/cache/CacheConfig/isQueryCacheable(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryContexts/isPopulateCache(io.druid.query.Query)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1/apply(io.druid.segment.realtime.firehose.WindowedStorageAdapter)|",
    "called": "|java+method:///io/druid/segment/filter/Filters/toFilter(io.druid.query.filter.DimFilter)|",
    "v1Body": [
      "|java+method:///io/druid/segment/StorageAdapter/makeCursors(io.druid.query.filter.Filter,org.joda.time.Interval,io.druid.segment.VirtualColumns,io.druid.java.util.common.granularity.Granularity,boolean)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/concat(io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getAdapter()|",
      "|java+constructor:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1/IngestSegmentFirehose$1$1(io.druid.segment.realtime.firehose.IngestSegmentFirehose$1)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getInterval()|",
      "|java+method:///io/druid/segment/filter/Filters/toFilter(io.druid.query.filter.DimFilter)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/java/util/common/guava/Sequences/concat(io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/map(io.druid.java.util.common.guava.Sequence,com.google.common.base.Function)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getAdapter()|",
      "|java+constructor:///io/druid/segment/realtime/firehose/IngestSegmentFirehose$1$1/IngestSegmentFirehose$1$1(io.druid.segment.realtime.firehose.IngestSegmentFirehose$1)|",
      "|java+method:///io/druid/segment/realtime/firehose/WindowedStorageAdapter/getInterval()|",
      "|java+method:///io/druid/segment/StorageAdapter/makeCursors(io.druid.query.filter.Filter,org.joda.time.Interval,io.druid.segment.VirtualColumns,io.druid.java.util.common.granularity.Granularity,boolean,io.druid.query.QueryMetrics)|",
      "|java+method:///io/druid/segment/filter/Filters/toFilter(io.druid.query.filter.DimFilter)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber$2/doRun()|",
    "called": "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
    "v1Body": [
      "|java+method:///java/io/File/createNewFile()|",
      "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$000(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$300()|",
      "|java+method:///io/druid/segment/indexing/RealtimeTuningConfig/getIndexSpec()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementFailedHandoffs()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/iterator()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementMergeTimeMillis(long)|",
      "|java+method:///com/google/common/base/Stopwatch/stop()|",
      "|java+method:///io/druid/segment/realtime/SegmentPublisher/publishSegment(io.druid.timeline.DataSegment)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$900(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/IndexIO/loadIndex(java.io.File)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementMergeCpuTime(long)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$800(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$1000(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$700(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$1102(io.druid.segment.realtime.plumber.RealtimePlumber,boolean)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$600(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/computePersistDir(io.druid.segment.indexing.DataSchema,org.joda.time.Interval)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$500(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$400(io.druid.segment.realtime.plumber.RealtimePlumber,io.druid.segment.realtime.plumber.Sink,java.io.File)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$200(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$100(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/timeline/DataSegment/withDimensions(java.util.List)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/wtf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/persistHydrant(io.druid.segment.realtime.FireHydrant,io.druid.segment.indexing.DataSchema,org.joda.time.Interval,java.util.Map)|",
      "|java+method:///io/druid/timeline/DataSegment/getShardSpec()|",
      "|java+method:///com/google/common/base/Stopwatch/createStarted()|",
      "|java+method:///io/druid/timeline/partition/ShardSpec/getPartitionNum()|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementRowOutputCount(long)|",
      "|java+method:///io/druid/common/utils/VMUtils/safeGetThreadCpuTime()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getDataSource()|",
      "|java+method:///io/druid/segment/loading/DataSegmentPusher/push(java.io.File,io.druid.timeline.DataSegment)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getInterval()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/abandonSegment(long,io.druid.segment.realtime.plumber.Sink)|"
    ],
    "v2Body": [
      "|java+method:///java/io/File/createNewFile()|",
      "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$600(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$000(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$300()|",
      "|java+method:///io/druid/segment/indexing/RealtimeTuningConfig/getIndexSpec()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementFailedHandoffs()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/iterator()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementMergeTimeMillis(long)|",
      "|java+method:///com/google/common/base/Stopwatch/stop()|",
      "|java+method:///io/druid/segment/realtime/SegmentPublisher/publishSegment(io.druid.timeline.DataSegment)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$900(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementMergeCpuTime(long)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$800(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$700(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$1002(io.druid.segment.realtime.plumber.RealtimePlumber,boolean)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/computePersistDir(io.druid.segment.indexing.DataSchema,org.joda.time.Interval)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$500(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///com/google/common/base/Stopwatch/elapsed(java.util.concurrent.TimeUnit)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$400(io.druid.segment.realtime.plumber.RealtimePlumber,io.druid.segment.realtime.plumber.Sink,java.io.File)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$200(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/access$100(io.druid.segment.realtime.plumber.RealtimePlumber)|",
      "|java+method:///io/druid/timeline/DataSegment/withDimensions(java.util.List)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/wtf(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/persistHydrant(io.druid.segment.realtime.FireHydrant,io.druid.segment.indexing.DataSchema,org.joda.time.Interval,java.util.Map)|",
      "|java+method:///io/druid/timeline/DataSegment/getShardSpec()|",
      "|java+method:///com/google/common/base/Stopwatch/createStarted()|",
      "|java+method:///io/druid/timeline/partition/ShardSpec/getPartitionNum()|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementRowOutputCount(long)|",
      "|java+method:///io/druid/common/utils/VMUtils/safeGetThreadCpuTime()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getDataSource()|",
      "|java+method:///io/druid/segment/IndexMerger/getMergedDimensionsFromQueryableIndexes(java.util.List)|",
      "|java+method:///io/druid/segment/loading/DataSegmentPusher/push(java.io.File,io.druid.timeline.DataSegment)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getInterval()|",
      "|java+method:///io/druid/segment/realtime/plumber/RealtimePlumber/abandonSegment(long,io.druid.segment.realtime.plumber.Sink)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/DirectDruidClient$JsonParserIterator/init()|",
    "called": "|java+constructor:///io/druid/query/ResourceLimitExceededException/ResourceLimitExceededException(java.lang.String,java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getFactory()|",
      "|java+method:///io/druid/client/DirectDruidClient/access$800(io.druid.client.DirectDruidClient)|",
      "|java+method:///com/fasterxml/jackson/core/ObjectCodec/readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$200(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/QueryInterruptedException/QueryInterruptedException(java.lang.Throwable,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCodec()|",
      "|java+method:///java/util/concurrent/Future/get()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createParser(java.io.InputStream)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/getFactory()|",
      "|java+constructor:///io/druid/query/ResourceLimitExceededException/ResourceLimitExceededException(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///com/fasterxml/jackson/core/ObjectCodec/readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$300(io.druid.client.DirectDruidClient)|",
      "|java+method:///io/druid/client/DirectDruidClient/access$000(io.druid.client.DirectDruidClient)|",
      "|java+constructor:///io/druid/java/util/common/RE/RE(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/java/util/common/IAE/IAE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/query/QueryInterruptedException/QueryInterruptedException(java.lang.Throwable,java.lang.String)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCodec()|",
      "|java+method:///java/util/concurrent/Future/get()|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/getCurrentToken()|",
      "|java+method:///com/fasterxml/jackson/core/JsonFactory/createParser(java.io.InputStream)|",
      "|java+method:///com/fasterxml/jackson/core/JsonParser/nextToken()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/segment/realtime/plumber/Sink/makeNewCurrIndex(long,io.druid.segment.indexing.DataSchema)|",
    "called": "|java+method:///io/druid/segment/incremental/IncrementalIndex/loadDimensionIterable(java.lang.Iterable,java.util.Map)|",
    "v1Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMinTimestamp(long)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/addAndGet(int)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getIndex()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getDimensionOrder()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/build()|",
      "|java+constructor:///io/druid/segment/realtime/FireHydrant/FireHydrant(io.druid.segment.incremental.IncrementalIndex,int,java.lang.String)|",
      "|java+method:///io/druid/segment/column/Column/getCapabilities()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getParser()|",
      "|java+method:///io/druid/segment/data/Indexed/iterator()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/close()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMetrics(io.druid.query.aggregation.AggregatorFactory%5B%5D)|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/getQueryGranularity()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/size()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/loadDimensionIterable(java.lang.Iterable,java.util.Map)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withQueryGranularity(io.druid.java.util.common.granularity.Granularity)|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/IncrementalIndexSchema$Builder()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/size()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema/getDimensionsSpec()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withTimestampSpec(io.druid.data.input.impl.InputRowParser)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getColumnCapabilities()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withRollup(boolean)|",
      "|java+method:///java/util/LinkedHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+constructor:///io/druid/segment/incremental/OnheapIncrementalIndex/OnheapIncrementalIndex(io.druid.segment.incremental.IncrementalIndexSchema,boolean,int)|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/get(int)|",
      "|java+method:///io/druid/segment/QueryableIndex/getColumn(java.lang.String)|",
      "|java+method:///java/util/LinkedHashSet/add(java.lang.Object)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withDimensionsSpec(io.druid.data.input.impl.InputRowParser)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMinTimestamp(long)|",
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/addAndGet(int)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getIndex()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$Builder/setMaxRowCount(int)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/build()|",
      "|java+constructor:///io/druid/segment/realtime/FireHydrant/FireHydrant(io.druid.segment.incremental.IncrementalIndex,int,java.lang.String)|",
      "|java+method:///io/druid/segment/column/Column/getCapabilities()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getParser()|",
      "|java+method:///io/druid/segment/data/Indexed/iterator()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getCount()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/close()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withMetrics(io.druid.query.aggregation.AggregatorFactory%5B%5D)|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/getQueryGranularity()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/size()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$Builder/setIndexSchema(io.druid.segment.incremental.IncrementalIndexSchema)|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/data/input/impl/DimensionsSpec/hasCustomDimensions()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/loadDimensionIterable(java.lang.Iterable,java.util.Map)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withQueryGranularity(io.druid.java.util.common.granularity.Granularity)|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/IncrementalIndexSchema$Builder()|",
      "|java+constructor:///io/druid/segment/incremental/IncrementalIndex$Builder/IncrementalIndex$Builder()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$Builder/setReportParseExceptions(boolean)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getDimensionOrder()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/size()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema/getDimensionsSpec()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withTimestampSpec(io.druid.data.input.impl.InputRowParser)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex/getColumnCapabilities()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withRollup(boolean)|",
      "|java+method:///java/util/LinkedHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///java/util/concurrent/CopyOnWriteArrayList/get(int)|",
      "|java+method:///io/druid/segment/QueryableIndex/getColumn(java.lang.String)|",
      "|java+method:///java/util/LinkedHashSet/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndex$Builder/buildOnheap()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/timeline/DataSegment/getIdentifier()|",
      "|java+method:///io/druid/segment/incremental/IncrementalIndexSchema$Builder/withDimensionsSpec(io.druid.data.input.impl.InputRowParser)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/QueryResource$ResponseContext/gotError(java.lang.Exception)|",
    "called": "|java+method:///io/druid/query/QueryInterruptedException/wrapIfNeeded(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/entity(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///javax/ws/rs/core/Response/serverError()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectWriter/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/type(java.lang.String)|",
      "|java+method:///io/druid/query/QueryInterruptedException/wrapIfNeeded(java.lang.Throwable)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/newOutputWriter()|"
    ],
    "v2Body": [
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/entity(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///javax/ws/rs/core/Response/serverError()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectWriter/writeValueAsBytes(java.lang.Object)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/newOutputWriter(boolean)|",
      "|java+method:///io/druid/query/QueryInterruptedException/wrapIfNeeded(java.lang.Throwable)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/type(java.lang.String)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker/getQueryRunnerForSegments(io.druid.query.Query,java.lang.Iterable)|",
    "called": "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
    "v1Body": [
      "|java+method:///io/druid/query/TableDataSource/getName()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$3/SinkQuerySegmentWalker$3(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryToolChest,io.druid.query.Query)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$4/SinkQuerySegmentWalker$4(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryRunnerFactory,boolean,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transform(com.google.common.base.Function)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/TableDataSource/getName()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transform(com.google.common.base.Function)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+constructor:///io/druid/segment/realtime/appenderator/SinkQuerySegmentWalker$3/SinkQuerySegmentWalker$3(io.druid.segment.realtime.appenderator.SinkQuerySegmentWalker,io.druid.query.QueryRunnerFactory,boolean,io.druid.query.QueryToolChest,java.util.concurrent.atomic.AtomicLong)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,io.druid.query.QueryToolChest,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/booleanValue()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/QueryResource/doPost(java.io.InputStream,java.lang.String,javax.servlet.http.HttpServletRequest)|",
    "called": "|java+method:///io/druid/query/QueryPlus/wrap(io.druid.query.Query)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/MapMaker/makeMap()|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///io/druid/server/security/Access/isAllowed()|",
      "|java+method:///java/lang/Thread/getName()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/druid/query/DataSource/getNames()|",
      "|java+method:///io/druid/java/util/common/guava/Yielder/close()|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object,java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)|",
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/Query/getType()|",
      "|java+method:///javax/ws/rs/core/Response/notModified()|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/security/AuthConfig/isEnabled()|",
      "|java+method:///io/druid/query/Query/getContextValue(java.lang.String)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/header(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/newOutputWriter()|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getObjectMapper()|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/empty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getContentType()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/gotError(java.lang.Exception)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+constructor:///com/google/common/collect/MapMaker/MapMaker()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///io/druid/java/util/common/guava/Yielders/each(io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getAttribute(java.lang.String)|",
      "|java+constructor:///io/druid/server/QueryResource$1/QueryResource$1(io.druid.server.QueryResource,com.fasterxml.jackson.databind.ObjectWriter,io.druid.java.util.common.guava.Yielder,long,io.druid.query.QueryToolChest,io.druid.query.Query,javax.servlet.http.HttpServletRequest,java.lang.String)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime(long)|",
      "|java+method:///org/joda/time/Period/toStandardDuration()|",
      "|java+method:///io/druid/server/initialization/ServerConfig/getMaxIdleTime()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///io/druid/query/Query/run(io.druid.query.QuerySegmentWalker,java.util.Map)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/joda/time/Duration/getMillis()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,java.lang.Class)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/druid/query/Query/withId(java.lang.String)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getContentType()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/security/AuthorizationInfo/isAuthorized(io.druid.server.security.Resource,io.druid.server.security.Action)|",
      "|java+method:///io/druid/query/Query/withOverriddenContext(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+constructor:///io/druid/server/security/Resource/Resource(java.lang.String,io.druid.server.security.ResourceType)|",
      "|java+method:///io/druid/query/QueryInterruptedException/toString()|",
      "|java+method:///io/druid/server/QueryResource/createContext(java.lang.String,boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/query/QueryPlus/wrap(io.druid.query.Query)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///io/druid/server/security/Access/isAllowed()|",
      "|java+method:///io/druid/query/QueryToolChestWarehouse/getToolChest(io.druid.query.Query)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///io/druid/query/DataSource/getNames()|",
      "|java+method:///io/druid/java/util/common/guava/Yielder/close()|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object,java.lang.String)|",
      "|java+method:///io/druid/query/QueryPlus/run(io.druid.query.QuerySegmentWalker,java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeRequestMetrics(io.druid.query.GenericQueryMetricsFactory,io.druid.query.QueryToolChest,io.druid.query.Query,java.lang.String)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getHeader(java.lang.String)|",
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/query/Query/getType()|",
      "|java+method:///javax/ws/rs/core/Response/notModified()|",
      "|java+constructor:///io/druid/server/QueryResource$1/QueryResource$1(io.druid.server.QueryResource,com.fasterxml.jackson.databind.ObjectWriter,io.druid.java.util.common.guava.Yielder,long,io.druid.query.QueryToolChest,io.druid.query.Query,javax.servlet.http.HttpServletRequest,long,java.lang.String)|",
      "|java+method:///io/druid/query/Query/getId()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///io/druid/server/security/AuthConfig/isEnabled()|",
      "|java+method:///io/druid/query/QueryContexts/isSerializeDateTimeAsLongInner(io.druid.query.Query,boolean)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/header(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///io/druid/client/DirectDruidClient/makeResponseContextForQuery(io.druid.query.Query,long)|",
      "|java+method:///io/druid/query/QueryMetrics/reportQueryTime(long)|",
      "|java+method:///java/lang/Thread/getName()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getObjectMapper()|",
      "|java+method:///io/druid/java/util/common/guava/Sequences/empty()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValueAsString(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///java/util/UUID/randomUUID()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/query/QueryContexts/isSerializeDateTimeAsLong(io.druid.query.Query,boolean)|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getContentType()|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/gotError(java.lang.Exception)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/newOutputWriter(boolean)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/guava/Yielders/each(io.druid.java.util.common.guava.Sequence)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getAttribute(java.lang.String)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime(long)|",
      "|java+method:///io/druid/query/QueryMetrics/success(boolean)|",
      "|java+method:///io/druid/query/QueryContexts/isFinalize(io.druid.query.Query,boolean)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+method:///io/druid/client/DirectDruidClient/withDefaultTimeoutAndMaxScatterGatherBytes(io.druid.query.Query,io.druid.server.initialization.ServerConfig)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.InputStream,java.lang.Class)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///io/druid/query/Query/withId(java.lang.String)|",
      "|java+method:///io/druid/server/QueryResource$ResponseContext/getContentType()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/isDebugEnabled()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/server/security/AuthorizationInfo/isAuthorized(io.druid.server.security.Resource,io.druid.server.security.Action)|",
      "|java+method:///io/druid/query/Query/withOverriddenContext(java.util.Map)|",
      "|java+constructor:///io/druid/server/security/Resource/Resource(java.lang.String,io.druid.server.security.ResourceType)|",
      "|java+method:///io/druid/query/QueryMetrics/emit(com.metamx.emitter.service.ServiceEmitter)|",
      "|java+method:///io/druid/query/QueryInterruptedException/toString()|",
      "|java+method:///io/druid/server/QueryResource/createContext(java.lang.String,boolean)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/mergeAndPush(io.druid.segment.realtime.appenderator.SegmentIdentifier,io.druid.segment.realtime.plumber.Sink)|",
    "called": "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
    "v1Body": [
      "|java+method:///io/druid/segment/realtime/plumber/Sink/iterator()|",
      "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getIndexSpec()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValue(java.io.File,java.lang.Object)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/IndexIO/loadIndex(java.io.File)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/QueryableIndex/getAvailableDimensions()|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computeDescriptorFile(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/timeline/DataSegment/withDimensions(java.util.List)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementFailedHandoffs()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/removeDirectory(java.io.File)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computePersistDir(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/isWritable()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/loading/DataSegmentPusher/push(java.io.File,io.druid.timeline.DataSegment)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/segment/realtime/plumber/Sink/iterator()|",
      "|java+method:///io/druid/segment/IndexMerger/mergeQueryableIndex(java.util.List,boolean,io.druid.query.aggregation.AggregatorFactory%5B%5D,java.io.File,io.druid.segment.IndexSpec)|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getAggregators()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/hasSwapped()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorConfig/getIndexSpec()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/writeValue(java.io.File,java.lang.Object)|",
      "|java+method:///io/druid/segment/indexing/DataSchema/getGranularitySpec()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/druid/segment/realtime/FireHydrant/getSegment()|",
      "|java+method:///io/druid/segment/Segment/asQueryableIndex()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computeDescriptorFile(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/timeline/DataSegment/withDimensions(java.util.List)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/io/File/exists()|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/getSegment()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/druid/segment/indexing/granularity/GranularitySpec/isRollup()|",
      "|java+method:///io/druid/segment/realtime/FireDepartmentMetrics/incrementFailedHandoffs()|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectMapper/readValue(java.io.File,java.lang.Class)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/removeDirectory(java.io.File)|",
      "|java+method:///io/druid/segment/realtime/appenderator/AppenderatorImpl/computePersistDir(io.druid.segment.realtime.appenderator.SegmentIdentifier)|",
      "|java+method:///io/druid/segment/realtime/plumber/Sink/isWritable()|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/IndexMerger/getMergedDimensionsFromQueryableIndexes(java.util.List)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/warn(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/segment/loading/DataSegmentPusher/push(java.io.File,io.druid.timeline.DataSegment)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/router/PriorityTieredBrokerSelectorStrategy/getBrokerServiceName(io.druid.server.router.TieredBrokerConfig,io.druid.query.Query)|",
    "called": "|java+method:///io/druid/query/QueryContexts/getPriority(io.druid.query.Query)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///io/druid/server/router/TieredBrokerConfig/getTierToBrokerMap()|",
      "|java+method:///com/google/common/collect/Iterables/getLast(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///io/druid/server/router/TieredBrokerConfig/getDefaultBrokerServiceName()|",
      "|java+method:///java/util/LinkedHashMap/values()|",
      "|java+method:///io/druid/query/BaseQuery/getContextPriority(io.druid.query.Query,int)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///io/druid/query/QueryContexts/getPriority(io.druid.query.Query)|",
      "|java+method:///com/google/common/collect/Iterables/getFirst(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///io/druid/server/router/TieredBrokerConfig/getTierToBrokerMap()|",
      "|java+method:///com/google/common/collect/Iterables/getLast(java.lang.Iterable,java.lang.Object)|",
      "|java+method:///io/druid/server/router/TieredBrokerConfig/getDefaultBrokerServiceName()|",
      "|java+method:///java/util/LinkedHashMap/values()|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/client/CacheUtil/useCache(io.druid.query.Query,io.druid.query.CacheStrategy,io.druid.client.cache.CacheConfig)|",
    "called": "|java+method:///io/druid/query/QueryContexts/isUseCache(io.druid.query.Query)|",
    "v1Body": [
      "|java+method:///io/druid/client/cache/CacheConfig/isUseCache()|",
      "|java+method:///io/druid/client/cache/CacheConfig/isQueryCacheable(io.druid.query.Query)|",
      "|java+method:///io/druid/query/BaseQuery/getContextUseCache(io.druid.query.Query,boolean)|"
    ],
    "v2Body": [
      "|java+method:///io/druid/client/cache/CacheConfig/isUseCache()|",
      "|java+method:///io/druid/client/cache/CacheConfig/isQueryCacheable(io.druid.query.Query)|",
      "|java+method:///io/druid/query/QueryContexts/isUseCache(io.druid.query.Query)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordination/ServerManager/getQueryRunnerForSegments(io.druid.query.Query,java.lang.Iterable)|",
    "called": "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
    "v1Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$3/ServerManager$3(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getBuilderFn(io.druid.query.QueryToolChest)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$3/ServerManager$3(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/addData(java.lang.String,java.lang.Object)|",
      "|java+method:///com/metamx/emitter/EmittingLogger/makeAlert(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/server/SegmentManager/getTimeline(java.lang.String)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,io.druid.query.QueryToolChest,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///com/metamx/emitter/service/AlertBuilder/emit()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/QueryResource$1/write(java.io.OutputStream)|",
    "called": "|java+method:///io/druid/query/DruidMetrics/makeRequestMetrics(io.druid.query.GenericQueryMetricsFactory,io.druid.query.QueryToolChest,io.druid.query.Query,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/setDimension(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/metamx/emitter/service/ServiceEmitter/emit(com.metamx.emitter.service.ServiceEventBuilder)|",
      "|java+method:///io/druid/server/QueryResource/access$000(io.druid.server.QueryResource)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime(long)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectWriter/writeValue(java.io.OutputStream,java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/DruidMetrics/makeQueryTimeMetric(io.druid.query.QueryToolChest,com.fasterxml.jackson.databind.ObjectMapper,io.druid.query.Query,java.lang.String)|",
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/metamx/emitter/service/ServiceMetricEvent$Builder/build(java.lang.String,java.lang.Number)|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/TimeUnit/toMillis(long)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+method:///io/druid/query/QueryMetrics/reportQueryTime(long)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/build()|",
      "|java+method:///io/druid/server/QueryResource/access$100(io.druid.server.QueryResource)|",
      "|java+method:///javax/servlet/http/HttpServletRequest/getRemoteAddr()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///com/fasterxml/jackson/databind/ObjectWriter/writeValue(java.io.OutputStream,java.lang.Object)|",
      "|java+method:///java/lang/Exception/toString()|",
      "|java+constructor:///io/druid/server/QueryStats/QueryStats(java.util.Map)|",
      "|java+method:///io/druid/query/QueryMetrics/emit(com.metamx.emitter.service.ServiceEmitter)|",
      "|java+constructor:///io/druid/server/RequestLogLine/RequestLogLine(org.joda.time.DateTime,java.lang.String,io.druid.query.Query,io.druid.server.QueryStats)|",
      "|java+method:///io/druid/query/DruidMetrics/makeRequestMetrics(io.druid.query.GenericQueryMetricsFactory,io.druid.query.QueryToolChest,io.druid.query.Query,java.lang.String)|",
      "|java+method:///com/google/common/io/CountingOutputStream/getCount()|",
      "|java+method:///com/google/common/collect/ImmutableMap/builder()|",
      "|java+method:///com/google/common/io/CountingOutputStream/close()|",
      "|java+constructor:///com/google/common/io/CountingOutputStream/CountingOutputStream(java.io.OutputStream)|",
      "|java+method:///io/druid/query/QueryMetrics/reportQueryBytes(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/incrementAndGet()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///io/druid/server/QueryResource/access$200(io.druid.server.QueryResource)|",
      "|java+method:///com/google/common/collect/ImmutableMap$Builder/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/druid/server/QueryResource/access$000(io.druid.server.QueryResource)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///io/druid/server/log/RequestLogger/log(io.druid.server.RequestLogLine)|",
      "|java+method:///com/google/common/io/CountingOutputStream/flush()|",
      "|java+method:///com/metamx/emitter/EmittingLogger/error(java.lang.Throwable,java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/joda/time/DateTime/DateTime(long)|",
      "|java+method:///io/druid/query/QueryMetrics/success(boolean)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.druid:druid-server:0.10.0",
    "coordinatesV2": "io.druid:druid-server:0.10.1",
    "caller": "|java+method:///io/druid/server/coordination/ServerManager/getQueryRunnerForIntervals(io.druid.query.Query,java.lang.Iterable)|",
    "called": "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
    "v1Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,com.google.common.base.Function,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$1/ServerManager$1(io.druid.server.coordination.ServerManager,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,com.google.common.base.Function,java.util.concurrent.atomic.AtomicLong)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$2/ServerManager$2(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getBuilderFn(io.druid.query.QueryToolChest)|"
    ],
    "v2Body": [
      "|java+constructor:///io/druid/query/NoopQueryRunner/NoopQueryRunner()|",
      "|java+constructor:///io/druid/query/FinalizeResultsQueryRunner/FinalizeResultsQueryRunner(io.druid.query.QueryRunner,io.druid.query.QueryToolChest)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$1/ServerManager$1(io.druid.server.coordination.ServerManager,io.druid.query.QueryRunnerFactory,io.druid.query.QueryToolChest,java.util.concurrent.atomic.AtomicLong)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+constructor:///io/druid/java/util/common/ISE/ISE(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///io/druid/server/coordination/ServerManager$2/ServerManager$2(io.druid.server.coordination.ServerManager,io.druid.timeline.VersionedIntervalTimeline)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///io/druid/server/coordination/ServerManager/getDataSourceName(io.druid.query.DataSource)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/transformCat(com.google.common.base.Function)|",
      "|java+method:///io/druid/query/QueryToolChest/mergeResults(io.druid.query.QueryRunner)|",
      "|java+method:///io/druid/java/util/common/guava/FunctionalIterable/create(java.lang.Iterable)|",
      "|java+method:///io/druid/server/SegmentManager/getTimeline(java.lang.String)|",
      "|java+method:///io/druid/query/QueryRunnerFactory/getToolchest()|",
      "|java+method:///io/druid/query/Query/getDataSource()|",
      "|java+method:///io/druid/query/CPUTimeMetricQueryRunner/safeBuild(io.druid.query.QueryRunner,io.druid.query.QueryToolChest,com.metamx.emitter.service.ServiceEmitter,java.util.concurrent.atomic.AtomicLong,boolean)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///io/druid/query/QueryRunnerFactory/mergeRunners(java.util.concurrent.ExecutorService,java.lang.Iterable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///io/druid/query/QueryRunnerFactoryConglomerate/findFactory(io.druid.query.Query)|"
    ],
    "affectedLib": "io.druid:druid-processing:0.10.1",
    "change": "UPDATED"
  }
]