[
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/init()|",
    "called": "|java+method:///com/google/common/math/DoubleMath/roundToLong(double,java.math.RoundingMode)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/math/DoubleMath/roundToLong(double,java.math.RoundingMode)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextDouble()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/register(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/Box/Box(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,long,com.github.rinde.rinsim.examples.demo.factory.AgvModel$BoxHandle)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel$BoxHandle/AgvModel$BoxHandle(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/rndBorder()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/isPresent()|",
      "|java+method:///com/google/common/math/DoubleMath/roundToLong(double,java.math.RoundingMode)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextDouble()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/register(java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/Box/Box(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,long,com.github.rinde.rinsim.examples.demo.factory.AgvModel$BoxHandle)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel$BoxHandle/AgvModel$BoxHandle(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/rndBorder()|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/Demo/main(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/google/common/collect/Lists/newArrayList()|",
    "v1Body": [
      "|java+method:///org/eclipse/swt/widgets/Shell/addListener(int,org.eclipse.swt.widgets.Listener)|",
      "|java+method:///org/eclipse/swt/widgets/Button/setSize(int,int)|",
      "|java+constructor:///org/eclipse/swt/graphics/Font/Font(org.eclipse.swt.graphics.Device,org.eclipse.swt.graphics.FontData%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+constructor:///org/eclipse/swt/widgets/Label/Label(org.eclipse.swt.widgets.Composite,int)|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setLocation(int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/eclipse/swt/widgets/Shell/isDisposed()|",
      "|java+method:///org/eclipse/swt/graphics/Font/getFontData()|",
      "|java+method:///org/eclipse/swt/widgets/Text/addListener(int,org.eclipse.swt.widgets.Listener)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+method:///org/eclipse/swt/widgets/Button/setFont(org.eclipse.swt.graphics.Font)|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setSize(int,int)|",
      "|java+constructor:///org/eclipse/swt/widgets/Display/Display()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Button/setData(java.lang.Object)|",
      "|java+constructor:///org/eclipse/swt/widgets/Composite/Composite(org.eclipse.swt.widgets.Composite,int)|",
      "|java+method:///org/eclipse/swt/widgets/Display/getMonitors()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/eclipse/swt/widgets/Button/addSelectionListener(org.eclipse.swt.events.SelectionListener)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$3/Demo$3(java.util.List,org.eclipse.swt.widgets.Display)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoType/values()|",
      "|java+method:///org/eclipse/swt/widgets/Button/setSelection(boolean)|",
      "|java+method:///org/eclipse/swt/widgets/Text/setLayoutData(java.lang.Object)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/eclipse/swt/widgets/Button/getFont()|",
      "|java+method:///org/eclipse/swt/widgets/Text/setText(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$1/Demo$1(java.util.List)|",
      "|java+method:///org/eclipse/swt/widgets/Display/sleep()|",
      "|java+method:///org/eclipse/swt/widgets/Shell/open()|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setText(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoType/name()|",
      "|java+method:///org/eclipse/swt/widgets/Composite/setLayout(org.eclipse.swt.widgets.Layout)|",
      "|java+method:///org/eclipse/swt/graphics/FontData/setHeight(int)|",
      "|java+method:///org/eclipse/swt/widgets/Display/readAndDispatch()|",
      "|java+constructor:///org/eclipse/swt/widgets/Button/Button(org.eclipse.swt.widgets.Composite,int)|",
      "|java+constructor:///org/eclipse/swt/widgets/Text/Text(org.eclipse.swt.widgets.Composite,int)|",
      "|java+method:///org/eclipse/swt/widgets/Button/setText(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Label/setText(java.lang.String)|",
      "|java+constructor:///org/eclipse/swt/layout/RowData/RowData(int,int)|",
      "|java+constructor:///org/eclipse/swt/widgets/Shell/Shell(org.eclipse.swt.widgets.Display,int)|",
      "|java+method:///org/eclipse/swt/widgets/Display/setAppName(java.lang.String)|",
      "|java+constructor:///org/eclipse/swt/layout/RowLayout/RowLayout(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setLayout(org.eclipse.swt.widgets.Layout)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$2/Demo$2(java.util.List,org.eclipse.swt.widgets.Display,org.eclipse.swt.widgets.Shell,java.util.List,org.eclipse.swt.widgets.Composite,org.eclipse.swt.widgets.Button,java.util.List,java.util.List,org.eclipse.swt.widgets.Text,org.eclipse.swt.widgets.Composite)|"
    ],
    "v2Body": [
      "|java+method:///org/eclipse/swt/widgets/Shell/addListener(int,org.eclipse.swt.widgets.Listener)|",
      "|java+method:///org/eclipse/swt/widgets/Button/setSize(int,int)|",
      "|java+constructor:///org/eclipse/swt/graphics/Font/Font(org.eclipse.swt.graphics.Device,org.eclipse.swt.graphics.FontData%5B%5D)|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+constructor:///org/eclipse/swt/widgets/Label/Label(org.eclipse.swt.widgets.Composite,int)|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setLocation(int,int)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/eclipse/swt/widgets/Shell/isDisposed()|",
      "|java+method:///org/eclipse/swt/graphics/Font/getFontData()|",
      "|java+method:///org/eclipse/swt/widgets/Text/addListener(int,org.eclipse.swt.widgets.Listener)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+method:///org/eclipse/swt/widgets/Button/setFont(org.eclipse.swt.graphics.Font)|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setSize(int,int)|",
      "|java+constructor:///org/eclipse/swt/widgets/Display/Display()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Button/setData(java.lang.Object)|",
      "|java+constructor:///org/eclipse/swt/widgets/Composite/Composite(org.eclipse.swt.widgets.Composite,int)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$RunButtonHandler/Demo$RunButtonHandler(org.eclipse.swt.widgets.Button,org.eclipse.swt.widgets.Shell,java.util.List,org.eclipse.swt.widgets.Composite,java.util.List,java.util.List,org.eclipse.swt.widgets.Text)|",
      "|java+method:///org/eclipse/swt/widgets/Display/getMonitors()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$1/Demo$1(java.util.List,org.eclipse.swt.widgets.Display)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///org/eclipse/swt/widgets/Button/addSelectionListener(org.eclipse.swt.events.SelectionListener)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoType/values()|",
      "|java+method:///org/eclipse/swt/widgets/Button/setSelection(boolean)|",
      "|java+method:///org/eclipse/swt/widgets/Text/setLayoutData(java.lang.Object)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/eclipse/swt/widgets/Button/getFont()|",
      "|java+method:///org/eclipse/swt/widgets/Text/setText(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Display/sleep()|",
      "|java+method:///org/eclipse/swt/widgets/Shell/open()|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setText(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoType/name()|",
      "|java+method:///org/eclipse/swt/widgets/Composite/setLayout(org.eclipse.swt.widgets.Layout)|",
      "|java+method:///org/eclipse/swt/graphics/FontData/setHeight(int)|",
      "|java+method:///org/eclipse/swt/widgets/Display/readAndDispatch()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$TimeTextVerifier/Demo$TimeTextVerifier(java.util.List)|",
      "|java+constructor:///org/eclipse/swt/widgets/Button/Button(org.eclipse.swt.widgets.Composite,int)|",
      "|java+constructor:///org/eclipse/swt/widgets/Text/Text(org.eclipse.swt.widgets.Composite,int)|",
      "|java+method:///org/eclipse/swt/widgets/Button/setText(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Label/setText(java.lang.String)|",
      "|java+constructor:///org/eclipse/swt/layout/RowData/RowData(int,int)|",
      "|java+constructor:///org/eclipse/swt/widgets/Shell/Shell(org.eclipse.swt.widgets.Display,int)|",
      "|java+method:///org/eclipse/swt/widgets/Display/setAppName(java.lang.String)|",
      "|java+constructor:///org/eclipse/swt/layout/RowLayout/RowLayout(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/eclipse/swt/widgets/Shell/setLayout(org.eclipse.swt.widgets.Layout)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/nextDestination()|",
    "called": "|java+method:///com/google/common/base/Verify/verify(boolean)|",
    "v1Body": [
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/List/get(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/google/common/base/Verify/verify(boolean)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/init()|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/setSimulator(com.github.rinde.rinsim.core.SimulatorAPI)|",
    "called": "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/getEventAPI()|",
      "|java+method:///com/github/rinde/rinsim/event/EventAPI/addListener(com.github.rinde.rinsim.event.Listener,java.lang.Enum%5B%5D)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/of(java.lang.Object)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner/next()|",
    "called": "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunnerControlPanel/update()|",
      "|java+method:///org/eclipse/swt/widgets/Display/asyncExec(java.lang.Runnable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$1/Demo$DemoRunner$1(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$2/Demo$DemoRunner$2(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/stop()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner/getState()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunnerControlPanel/update()|",
      "|java+method:///org/eclipse/swt/widgets/Display/asyncExec(java.lang.Runnable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$1/Demo$DemoRunner$1(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$2/Demo$DemoRunner$2(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/stop()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner/getState()|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///java/util/List/clear()|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/Truck/getFields()|",
    "called": "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getFields(com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getFields(com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/registerModelProvider(com.github.rinde.rinsim.core.model.ModelProvider)|",
    "called": "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/github/rinde/rinsim/event/EventAPI/addListener(com.github.rinde.rinsim.event.Listener,java.lang.Enum%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getEventAPI()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/tryGetModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/event/EventAPI/addListener(com.github.rinde.rinsim.event.Listener,java.lang.Enum%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getEventAPI()|",
      "|java+method:///com/google/common/base/Optional/fromNullable(java.lang.Object)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/renderDynamic(org.eclipse.swt.graphics.GC,com.github.rinde.rinsim.ui.renderers.ViewPort,long)|",
    "called": "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/geom/Point/diff(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/getImage(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getVehicle()|",
      "|java+constructor:///com/github/rinde/rinsim/geom/Point/Point(double,double)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/ViewPort/toCoordY(double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/eclipse/swt/graphics/GC/getTransform(org.eclipse.swt.graphics.Transform)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/timeNeeded()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/eclipse/swt/graphics/GC/setBackground(org.eclipse.swt.graphics.Color)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getParcel()|",
      "|java+method:///org/eclipse/swt/graphics/Transform/rotate(float)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModel/getPosition(com.github.rinde.rinsim.core.model.road.RoadUser)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///org/eclipse/swt/graphics/Transform/dispose()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleState(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///org/eclipse/swt/graphics/GC/drawText(java.lang.String,int,int,boolean)|",
      "|java+method:///org/eclipse/swt/graphics/GC/drawImage(org.eclipse.swt.graphics.Image,int,int)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicles()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getParcels(com.github.rinde.rinsim.core.model.pdp.PDPModel$ParcelState%5B%5D)|",
      "|java+method:///org/eclipse/swt/graphics/Transform/translate(float,float)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleActionInfo(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///org/eclipse/swt/graphics/GC/getDevice()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$ParcelState/isDelivered()|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$ParcelState/values()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getPickupDuration()|",
      "|java+method:///org/eclipse/swt/graphics/GC/textExtent(java.lang.String)|",
      "|java+method:///org/eclipse/swt/graphics/GC/setTransform(org.eclipse.swt.graphics.Transform)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/ViewPort/toCoordX(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/eclipse/swt/graphics/Transform/Transform(org.eclipse.swt.graphics.Device)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getParcelState(com.github.rinde.rinsim.core.model.pdp.Parcel)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/initialize(org.eclipse.swt.graphics.Device)|",
      "|java+method:///org/eclipse/swt/graphics/Device/getSystemColor(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/eclipse/swt/graphics/Image/getBounds()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/getImage(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$ParcelState/values()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getVehicle()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleState(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicles()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getParcels(com.github.rinde.rinsim.core.model.pdp.PDPModel$ParcelState%5B%5D)|",
      "|java+method:///org/eclipse/swt/graphics/GC/getDevice()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleActionInfo(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/initialize(org.eclipse.swt.graphics.Device)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getParcel()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/drawBox(com.github.rinde.rinsim.core.model.pdp.Parcel,org.eclipse.swt.graphics.GC,com.github.rinde.rinsim.ui.renderers.ViewPort,long,org.eclipse.swt.graphics.Image,java.util.Map)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getField(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|",
    "called": "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getPosition()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDestination()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getStrength()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getPosition()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getStrength()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDeliveryLocation()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/run(long,org.eclipse.swt.widgets.Display,org.eclipse.swt.widgets.Monitor,com.github.rinde.rinsim.event.Listener)|",
    "called": "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+constructor:///com/github/rinde/rinsim/core/Simulator/Simulator(org.apache.commons.math3.random.RandomGenerator,javax.measure.Measure)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample$1/FactoryExample$1(long,com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoPlay()|",
      "|java+method:///javax/measure/Measure/valueOf(long,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/SwarmDemo/measureString(java.lang.String,int,double,int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/AgvModel(org.apache.commons.math3.random.RandomGenerator,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/GraphRoadModelRenderer(int,boolean,boolean,boolean)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AGV/AGV(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel/BlockingGraphRoadModel(com.github.rinde.rinsim.geom.Graph,javax.measure.unit.Unit,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createGrid(int,int,int,int,double)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setAsync()|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setTitleAppendix(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setFullScreen()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/show()|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setSpeedUp(int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/BoxRenderer()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/google/common/math/DoubleMath/roundToInt(double,java.math.RoundingMode)|",
      "|java+method:///javax/measure/unit/SI/MILLI(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///java/lang/Math/max(double,double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/create(com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.ui.renderers.Renderer%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(com.github.rinde.rinsim.core.model.Model)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/displayOnMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.TickListener)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/RoadUserRenderer(com.github.rinde.rinsim.ui.renderers.UiSchema,boolean)|",
      "|java+constructor:///java/util/Random/Random(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/add(java.lang.Class,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/UiSchema/UiSchema(boolean)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setResolution(int,int)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/DefaultPDPModel()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/getBorderNodes(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/configure()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel$Builder/withDistanceUnit(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextInt(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer$Builder/withMargin(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel/blockingBuilder(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.model.time.TickListener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AGV/AGV(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAsync()|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withTitleAppendix(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createGraph(com.google.common.collect.ImmutableList)|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(long)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel$Builder/withSpeedUnit(javax.measure.unit.Unit)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/builder()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample$1/FactoryExample$1(long,com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withFullScreen()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setRandomGenerator(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel$Builder/withPoints(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withResolution(int,int)|",
      "|java+constructor:///java/util/Random/Random(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createPoints(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/getBorderNodes(com.github.rinde.rinsim.geom.Graph)|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/AgvModel(org.apache.commons.math3.random.RandomGenerator,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
    "called": "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/Model$AbstractModel/Model$AbstractModel()|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/handleEvent(com.github.rinde.rinsim.event.Event)|",
    "called": "|java+method:///com/google/common/math/DoubleMath/roundToLong(double,java.math.RoundingMode)|",
    "v1Body": [
      "|java+method:///com/google/common/math/DoubleMath/roundToLong(double,java.math.RoundingMode)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/unregister(java.lang.Object)|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextDouble()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDestination()|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/register(java.lang.Object)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/Box/Box(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,long,com.github.rinde.rinsim.examples.demo.factory.AgvModel$BoxHandle)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/event/Event/getEventType()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/init()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/rndBorder()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/math/DoubleMath/roundToLong(double,java.math.RoundingMode)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/unregister(java.lang.Object)|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextDouble()|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///com/github/rinde/rinsim/core/SimulatorAPI/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/Box/getDeliveryLocation()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/Box/Box(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,long,com.github.rinde.rinsim.examples.demo.factory.AgvModel$BoxHandle)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///com/google/common/base/Verify/verify(boolean)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/Box/getPickupLocation()|",
      "|java+method:///com/github/rinde/rinsim/event/Event/getEventType()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/rndBorder()|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample/main2(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
    "v1Body": [
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/simulate()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/DynamicPDPTWProblem(com.github.rinde.rinsim.scenario.Scenario,long,com.github.rinde.rinsim.core.model.Model%5B%5D)|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/addCreator(java.lang.Class,com.github.rinde.rinsim.pdptw.common.DynamicPDPTWProblem$Creator)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/enableUI()|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/getStatistics()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/AddParcelEvent/defaultHandler()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController$Builder/withEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/builder()|"
    ],
    "affectedLib": "com.google.guava:guava:19.0",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$TaxiBase/TaxiExample$TaxiBase(com.github.rinde.rinsim.geom.Point,double)|",
    "called": "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/Depot/Depot(com.github.rinde.rinsim.geom.Point)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$TaxiBase/setStartPosition(com.github.rinde.rinsim.geom.Point)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/Depot/Depot()|",
      "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$TaxiBase/setCapacity(double)|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$TaxiBase/setCapacity(double)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/Depot/Depot(com.github.rinde.rinsim.geom.Point)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getField(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|",
    "called": "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDeliveryLocation()|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getPosition()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDestination()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getStrength()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getPosition()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getStrength()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDeliveryLocation()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/run(long,org.eclipse.swt.widgets.Display,org.eclipse.swt.widgets.Monitor,com.github.rinde.rinsim.event.Listener)|",
    "called": "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.model.time.TickListener)|",
    "v1Body": [
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+constructor:///com/github/rinde/rinsim/core/Simulator/Simulator(org.apache.commons.math3.random.RandomGenerator,javax.measure.Measure)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample$1/FactoryExample$1(long,com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoPlay()|",
      "|java+method:///javax/measure/Measure/valueOf(long,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/SwarmDemo/measureString(java.lang.String,int,double,int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/AgvModel(org.apache.commons.math3.random.RandomGenerator,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/GraphRoadModelRenderer(int,boolean,boolean,boolean)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AGV/AGV(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel/BlockingGraphRoadModel(com.github.rinde.rinsim.geom.Graph,javax.measure.unit.Unit,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createGrid(int,int,int,int,double)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setAsync()|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setTitleAppendix(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setFullScreen()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/show()|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setSpeedUp(int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/BoxRenderer()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/google/common/math/DoubleMath/roundToInt(double,java.math.RoundingMode)|",
      "|java+method:///javax/measure/unit/SI/MILLI(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///java/lang/Math/max(double,double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/create(com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.ui.renderers.Renderer%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(com.github.rinde.rinsim.core.model.Model)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/displayOnMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.TickListener)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/RoadUserRenderer(com.github.rinde.rinsim.ui.renderers.UiSchema,boolean)|",
      "|java+constructor:///java/util/Random/Random(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/add(java.lang.Class,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/UiSchema/UiSchema(boolean)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setResolution(int,int)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/DefaultPDPModel()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/getBorderNodes(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/configure()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel$Builder/withDistanceUnit(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextInt(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer$Builder/withMargin(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel/blockingBuilder(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.model.time.TickListener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AGV/AGV(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAsync()|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withTitleAppendix(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createGraph(com.google.common.collect.ImmutableList)|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(long)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel$Builder/withSpeedUnit(javax.measure.unit.Unit)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/builder()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample$1/FactoryExample$1(long,com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withFullScreen()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setRandomGenerator(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel$Builder/withPoints(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withResolution(int,int)|",
      "|java+constructor:///java/util/Random/Random(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createPoints(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/getBorderNodes(com.github.rinde.rinsim.geom.Graph)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/AgvModel(org.apache.commons.math3.random.RandomGenerator,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
    "called": "|java+constructor:///com/github/rinde/rinsim/core/model/Model$AbstractModel/Model$AbstractModel()|",
    "v1Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/base/Optional/absent()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList()|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/Model$AbstractModel/Model$AbstractModel()|",
      "|java+method:///com/google/common/collect/Sets/newLinkedHashSet()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/GradientModel()|",
    "called": "|java+constructor:///com/github/rinde/rinsim/core/model/Model$AbstractModel/Model$AbstractModel()|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///com/github/rinde/rinsim/core/model/Model$AbstractModel/Model$AbstractModel()|",
      "|java+constructor:///java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/core/SimpleExample/run(boolean)|",
    "called": "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMinPoint(com.github.rinde.rinsim.geom.Point)|",
    "v1Body": [
      "|java+constructor:///com/github/rinde/rinsim/core/model/road/PlaneRoadModel/PlaneRoadModel(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,javax.measure.unit.Unit,javax.measure.Measure)|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/show()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///javax/measure/unit/SI/MILLI(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoPlay()|",
      "|java+method:///javax/measure/Measure/valueOf(long,javax.measure.unit.Unit)|",
      "|java+method:///javax/measure/Measure/valueOf(double,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/configure()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/SimpleExample$Driver/SimpleExample$Driver(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+constructor:///com/github/rinde/rinsim/core/Simulator/Simulator(org.apache.commons.math3.random.RandomGenerator,javax.measure.Measure)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/RoadUserRenderer()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/create(com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/stopSimulatorAtTime(long)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/PlaneRoadModelRenderer()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.ui.renderers.Renderer%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(com.github.rinde.rinsim.core.model.Model)|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMaxPoint(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setRandomSeed(long)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setTickLength(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSimulatorEndTime(long)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/SimpleExample$Driver/SimpleExample$Driver(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMaxSpeed(double)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMinPoint(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getRandomGenerator()|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders/plane()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/Box/Box(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,long,com.github.rinde.rinsim.examples.demo.factory.AgvModel$BoxHandle)|",
    "called": "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/serviceDuration(long)|",
    "v1Body": [
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/Parcel/Parcel(com.github.rinde.rinsim.geom.Point,long,com.github.rinde.rinsim.util.TimeWindow,long,com.github.rinde.rinsim.util.TimeWindow,double)|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/serviceDuration(long)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/buildDTO()|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/Parcel/Parcel(com.github.rinde.rinsim.core.model.pdp.ParcelDTO)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/neededCapacity(double)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/builder(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner/next()|",
    "called": "|java+method:///com/github/rinde/rinsim/core/Simulator/stop()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunnerControlPanel/update()|",
      "|java+method:///org/eclipse/swt/widgets/Display/asyncExec(java.lang.Runnable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$1/Demo$DemoRunner$1(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$2/Demo$DemoRunner$2(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/stop()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner/getState()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunnerControlPanel/update()|",
      "|java+method:///org/eclipse/swt/widgets/Display/asyncExec(java.lang.Runnable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$1/Demo$DemoRunner$1(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner$2/Demo$DemoRunner$2(com.github.rinde.rinsim.examples.demo.Demo$DemoRunner,com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/stop()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/Demo$DemoRunner/getState()|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///java/util/List/clear()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample/run(boolean,long,java.lang.String,org.eclipse.swt.widgets.Display,org.eclipse.swt.widgets.Monitor,com.github.rinde.rinsim.event.Listener)|",
    "called": "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/serviceDuration(long)|",
    "v1Body": [
      "|java+constructor:///com/github/rinde/rinsim/core/Simulator/Simulator(org.apache.commons.math3.random.RandomGenerator,javax.measure.Measure)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setSpeedUp(int)|",
      "|java+method:///javax/measure/Measure/valueOf(long,javax.measure.unit.Unit)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiRenderer/TaxiRenderer(com.github.rinde.rinsim.examples.core.taxi.TaxiRenderer$Language)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/add(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setResolution(int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setAsync()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setTitleAppendix(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/road/GraphRoadModel/GraphRoadModel(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextInt(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/show()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$TaxiBase/TaxiExample$TaxiBase(com.github.rinde.rinsim.geom.Point,double)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/Taxi/Taxi(com.github.rinde.rinsim.geom.Point,double)|",
      "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample/loadGraph(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///javax/measure/unit/SI/MILLI(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/create(com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/stopSimulatorAtTime(long)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/GraphRoadModelRenderer()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/UiSchema/UiSchema()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.ui.renderers.Renderer%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(com.github.rinde.rinsim.core.model.Model)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$Customer/TaxiExample$Customer(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,long,long,double)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/displayOnMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.TickListener)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/RoadUserRenderer(com.github.rinde.rinsim.ui.renderers.UiSchema,boolean)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModel/getRandomPosition(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$1/TaxiExample$1(long,com.github.rinde.rinsim.core.Simulator,org.apache.commons.math3.random.RandomGenerator,com.github.rinde.rinsim.core.model.road.RoadModel)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/DefaultPDPModel()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/configure()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/Taxi/Taxi(com.github.rinde.rinsim.geom.Point,int)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.model.time.TickListener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getRandomGenerator()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/neededCapacity(double)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$Customer/TaxiExample$Customer(com.github.rinde.rinsim.core.model.pdp.ParcelDTO)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/builder(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders/staticGraph(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/serviceDuration(long)|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextInt(int)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel$Builder/buildDTO()|",
      "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample/createGui(boolean,org.eclipse.swt.widgets.Display,org.eclipse.swt.widgets.Monitor,com.github.rinde.rinsim.event.Listener)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$TaxiBase/TaxiExample$TaxiBase(com.github.rinde.rinsim.geom.Point,double)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample/loadGraph(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModel/getRandomPosition(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample$1/TaxiExample$1(long,com.github.rinde.rinsim.core.Simulator,org.apache.commons.math3.random.RandomGenerator,com.github.rinde.rinsim.core.model.road.RoadModel)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample/main2(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
    "v1Body": [
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/simulate()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/DynamicPDPTWProblem(com.github.rinde.rinsim.scenario.Scenario,long,com.github.rinde.rinsim.core.model.Model%5B%5D)|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/addCreator(java.lang.Class,com.github.rinde.rinsim.pdptw.common.DynamicPDPTWProblem$Creator)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/enableUI()|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/getStatistics()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/AddParcelEvent/defaultHandler()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController$Builder/withEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/builder()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-core:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/core/taxi/TaxiExample/loadGraph(java.lang.String)|",
    "called": "|java+method:///com/github/rinde/rinsim/geom/io/DotGraphIO/getMultiAttributeGraphIO(com.google.common.base.Predicate)|",
    "v1Body": [
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+constructor:///com/github/rinde/rinsim/serializers/SelfCycleFilter/SelfCycleFilter()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///com/github/rinde/rinsim/serializers/DotGraphSerializer/getMultiAttributeGraphSerializer(com.github.rinde.rinsim.serializers.SerializerFilter%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/serializers/DotGraphSerializer/read(java.io.InputStream)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.Throwable)|",
      "|java+method:///com/github/rinde/rinsim/geom/io/Filters/selfCycleFilter()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/geom/io/DotGraphIO/read(java.io.InputStream)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/geom/io/DotGraphIO/getMultiAttributeGraphIO(com.google.common.base.Predicate)|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-geom:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getFields(com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|",
    "called": "|java+constructor:///com/github/rinde/rinsim/geom/Point/Point(double,double)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/Truck/getPosition()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/util/Map/size()|",
      "|java+constructor:///com/github/rinde/rinsim/geom/Point/Point(double,double)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getField(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map/keySet()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/Truck/getPosition()|",
      "|java+method:///java/util/Map/values()|",
      "|java+constructor:///com/github/rinde/rinsim/geom/Point/Point(double,double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getField(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-geom:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/getField(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.examples.pdptw.gradientfield.Truck)|",
    "called": "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getPosition()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDestination()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getStrength()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getPosition()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/geom/Point/distance(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/google/common/base/Verify/verifyNotNull(java.lang.Object)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/FieldEmitter/getStrength()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getDeliveryLocation()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-geom:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample/run(boolean)|",
    "called": "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.scenario.ScenarioController$UICreator)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldConfiguration/GradientFieldConfiguration()|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06ObjectiveFunction/instance()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/build(com.github.rinde.rinsim.pdptw.common.ObjectiveFunction)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample$1/GradientFieldExample$1(boolean)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration/pdptwBuilder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/RouteRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSimulatorEndTime(long)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/setName(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-experiment:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample/run(boolean)|",
    "called": "|java+method:///com/github/rinde/rinsim/pdptw/common/RouteRenderer/builder()|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.scenario.ScenarioController$UICreator)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldConfiguration/GradientFieldConfiguration()|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06ObjectiveFunction/instance()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/build(com.github.rinde.rinsim.pdptw.common.ObjectiveFunction)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample$1/GradientFieldExample$1(boolean)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration/pdptwBuilder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/RouteRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSimulatorEndTime(long)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/setName(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-pdptw:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample/main2(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
    "v1Body": [
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/simulate()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/DynamicPDPTWProblem(com.github.rinde.rinsim.scenario.Scenario,long,com.github.rinde.rinsim.core.model.Model%5B%5D)|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/addCreator(java.lang.Class,com.github.rinde.rinsim.pdptw.common.DynamicPDPTWProblem$Creator)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/enableUI()|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/getStatistics()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/AddParcelEvent/defaultHandler()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController$Builder/withEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/builder()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-pdptw:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample/run(boolean)|",
    "called": "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.scenario.ScenarioController$UICreator)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldConfiguration/GradientFieldConfiguration()|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06ObjectiveFunction/instance()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/build(com.github.rinde.rinsim.pdptw.common.ObjectiveFunction)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample$1/GradientFieldExample$1(boolean)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration/pdptwBuilder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/RouteRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSimulatorEndTime(long)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/setName(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-scenario-util:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample/main2(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
    "v1Body": [
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/simulate()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/DynamicPDPTWProblem(com.github.rinde.rinsim.scenario.Scenario,long,com.github.rinde.rinsim.core.model.Model%5B%5D)|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/addCreator(java.lang.Class,com.github.rinde.rinsim.pdptw.common.DynamicPDPTWProblem$Creator)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/enableUI()|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/getStatistics()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/AddParcelEvent/defaultHandler()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController$Builder/withEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/builder()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-scenario-util:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/run(long,org.eclipse.swt.widgets.Display,org.eclipse.swt.widgets.Monitor,com.github.rinde.rinsim.event.Listener)|",
    "called": "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withDisplay(org.eclipse.swt.widgets.Display)|",
    "v1Body": [
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+constructor:///com/github/rinde/rinsim/core/Simulator/Simulator(org.apache.commons.math3.random.RandomGenerator,javax.measure.Measure)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample$1/FactoryExample$1(long,com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoPlay()|",
      "|java+method:///javax/measure/Measure/valueOf(long,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/SwarmDemo/measureString(java.lang.String,int,double,int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/AgvModel(org.apache.commons.math3.random.RandomGenerator,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/GraphRoadModelRenderer(int,boolean,boolean,boolean)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AGV/AGV(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel/BlockingGraphRoadModel(com.github.rinde.rinsim.geom.Graph,javax.measure.unit.Unit,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createGrid(int,int,int,int,double)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setAsync()|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(int)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setTitleAppendix(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setFullScreen()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/show()|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setSpeedUp(int)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/BoxRenderer()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/google/common/math/DoubleMath/roundToInt(double,java.math.RoundingMode)|",
      "|java+method:///javax/measure/unit/SI/MILLI(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///java/lang/Math/max(double,double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/create(com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.ui.renderers.Renderer%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(com.github.rinde.rinsim.core.model.Model)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/displayOnMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.TickListener)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/RoadUserRenderer(com.github.rinde.rinsim.ui.renderers.UiSchema,boolean)|",
      "|java+constructor:///java/util/Random/Random(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/add(java.lang.Class,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
      "|java+method:///com/google/common/collect/ImmutableList/iterator()|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/UiSchema/UiSchema(boolean)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setResolution(int,int)|",
      "|java+constructor:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/DefaultPDPModel()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/getBorderNodes(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/configure()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel$Builder/withDistanceUnit(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/DefaultPDPModel/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList/builder()|",
      "|java+method:///org/apache/commons/math3/random/RandomGenerator/nextInt(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer$Builder/withMargin(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel/blockingBuilder(com.github.rinde.rinsim.geom.Graph)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/addTickListener(com.github.rinde.rinsim.core.model.time.TickListener)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/AGV/AGV(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///java/util/Collections/shuffle(java.util.List,java.util.Random)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withMonitor(org.eclipse.swt.widgets.Monitor)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAsync()|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getBounds()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withTitleAppendix(java.lang.String)|",
      "|java+method:///org/eclipse/swt/widgets/Monitor/getClientArea()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createGraph(com.google.common.collect.ImmutableList)|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(long)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BlockingGraphRoadModel$Builder/withSpeedUnit(javax.measure.unit.Unit)|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/GraphRoadModelRenderer/builder()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample$1/FactoryExample$1(long,com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/google/common/collect/ImmutableList/size()|",
      "|java+method:///org/eclipse/swt/widgets/Display/getPrimaryMonitor()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withDisplay(org.eclipse.swt.widgets.Display)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/addAll(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withFullScreen()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setRandomGenerator(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/AgvModel$Builder/withPoints(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList)|",
      "|java+method:///com/google/common/collect/ImmutableList$Builder/add(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withCallback(com.github.rinde.rinsim.event.Listener)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withResolution(int,int)|",
      "|java+constructor:///java/util/Random/Random(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/google/common/collect/ImmutableList/copyOf(java.util.Collection)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/createPoints(java.lang.Iterable)|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/FactoryExample/getBorderNodes(com.github.rinde.rinsim.geom.Graph)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-ui:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/core/SimpleExample/run(boolean)|",
    "called": "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
    "v1Body": [
      "|java+constructor:///com/github/rinde/rinsim/core/model/road/PlaneRoadModel/PlaneRoadModel(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point,javax.measure.unit.Unit,javax.measure.Measure)|",
      "|java+constructor:///org/apache/commons/math3/random/MersenneTwister/MersenneTwister(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/show()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/setSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///javax/measure/unit/SI/MILLI(javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoPlay()|",
      "|java+method:///javax/measure/Measure/valueOf(long,javax.measure.unit.Unit)|",
      "|java+method:///javax/measure/Measure/valueOf(double,javax.measure.unit.Unit)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/configure()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/SimpleExample$Driver/SimpleExample$Driver(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+constructor:///com/github/rinde/rinsim/core/Simulator/Simulator(org.apache.commons.math3.random.RandomGenerator,javax.measure.Measure)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/RoadUserRenderer()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/enableAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/ui/View/create(com.github.rinde.rinsim.core.Simulator)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/stopSimulatorAtTime(long)|",
      "|java+constructor:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/PlaneRoadModelRenderer()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.ui.renderers.Renderer%5B%5D)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(com.github.rinde.rinsim.core.model.Model)|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMaxPoint(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setRandomSeed(long)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/setTickLength(long)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSimulatorEndTime(long)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/core/SimpleExample$Driver/SimpleExample$Driver(org.apache.commons.math3.random.RandomGenerator)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMaxSpeed(double)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/register(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders$PlaneRMB/withMinPoint(com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getRandomGenerator()|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModelBuilders/plane()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-ui:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/renderDynamic(org.eclipse.swt.graphics.GC,com.github.rinde.rinsim.ui.renderers.ViewPort,long)|",
    "called": "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/initialize(org.eclipse.swt.graphics.Device)|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/geom/Point/diff(com.github.rinde.rinsim.geom.Point,com.github.rinde.rinsim.geom.Point)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/getImage(java.lang.Class)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getVehicle()|",
      "|java+constructor:///com/github/rinde/rinsim/geom/Point/Point(double,double)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/ViewPort/toCoordY(double)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/eclipse/swt/graphics/GC/getTransform(org.eclipse.swt.graphics.Transform)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/timeNeeded()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/eclipse/swt/graphics/GC/setBackground(org.eclipse.swt.graphics.Color)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getParcel()|",
      "|java+method:///org/eclipse/swt/graphics/Transform/rotate(float)|",
      "|java+method:///com/github/rinde/rinsim/core/model/road/RoadModel/getPosition(com.github.rinde.rinsim.core.model.road.RoadUser)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///org/eclipse/swt/graphics/Transform/dispose()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleState(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///org/eclipse/swt/graphics/GC/drawText(java.lang.String,int,int,boolean)|",
      "|java+method:///org/eclipse/swt/graphics/GC/drawImage(org.eclipse.swt.graphics.Image,int,int)|",
      "|java+method:///com/google/common/base/Optional/get()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicles()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getParcels(com.github.rinde.rinsim.core.model.pdp.PDPModel$ParcelState%5B%5D)|",
      "|java+method:///org/eclipse/swt/graphics/Transform/translate(float,float)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleActionInfo(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///org/eclipse/swt/graphics/GC/getDevice()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$ParcelState/isDelivered()|",
      "|java+method:///com/google/common/collect/Maps/newLinkedHashMap()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$ParcelState/values()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/Parcel/getPickupDuration()|",
      "|java+method:///org/eclipse/swt/graphics/GC/textExtent(java.lang.String)|",
      "|java+method:///org/eclipse/swt/graphics/GC/setTransform(org.eclipse.swt.graphics.Transform)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/ViewPort/toCoordX(double)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/eclipse/swt/graphics/Transform/Transform(org.eclipse.swt.graphics.Device)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getParcelState(com.github.rinde.rinsim.core.model.pdp.Parcel)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/initialize(org.eclipse.swt.graphics.Device)|",
      "|java+method:///org/eclipse/swt/graphics/Device/getSystemColor(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/eclipse/swt/graphics/Image/getBounds()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/base/Preconditions/checkState(boolean)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/getImage(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$ParcelState/values()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getVehicle()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getContents(com.github.rinde.rinsim.core.model.pdp.Container)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleState(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicles()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getParcels(com.github.rinde.rinsim.core.model.pdp.PDPModel$ParcelState%5B%5D)|",
      "|java+method:///org/eclipse/swt/graphics/GC/getDevice()|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel/getVehicleActionInfo(com.github.rinde.rinsim.core.model.pdp.Vehicle)|",
      "|java+method:///com/google/common/collect/ImmutableSet/iterator()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/UiSchema/initialize(org.eclipse.swt.graphics.Device)|",
      "|java+method:///com/github/rinde/rinsim/core/model/pdp/PDPModel$VehicleParcelActionInfo/getParcel()|",
      "|java+method:///com/github/rinde/rinsim/examples/demo/factory/BoxRenderer/drawBox(com.github.rinde.rinsim.core.model.pdp.Parcel,org.eclipse.swt.graphics.GC,com.github.rinde.rinsim.ui.renderers.ViewPort,long,org.eclipse.swt.graphics.Image,java.util.Map)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-ui:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample/run(boolean)|",
    "called": "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
    "v1Body": [
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.scenario.ScenarioController$UICreator)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldConfiguration/GradientFieldConfiguration()|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06ObjectiveFunction/instance()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/build(com.github.rinde.rinsim.pdptw.common.ObjectiveFunction)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldExample$1/GradientFieldExample$1(boolean)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getResourceAsStream(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addConfiguration(com.github.rinde.rinsim.experiment.MASConfiguration)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parse()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/allowDiversion()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoClose()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSpeedUp(int)|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientFieldRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/addEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment/builder()|",
      "|java+method:///com/github/rinde/rinsim/examples/pdptw/gradientfield/GradientModel/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/repeat(int)|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/parser()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer$Builder/withImageAssociation(java.lang.Class,java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/showGui(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/addScenario(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/gendreau06/Gendreau06Parser/addFile(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableList/get(int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration/pdptwBuilder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/RouteRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/perform()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withSimulatorEndTime(long)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withThreads(int)|",
      "|java+method:///com/github/rinde/rinsim/experiment/MASConfiguration$Builder/setName(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/experiment/Experiment$Builder/withRandomSeed(long)|"
    ],
    "affectedLib": "com.github.rinde:rinsim-ui:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample/main2(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
    "v1Body": [
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/simulate()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/DynamicPDPTWProblem(com.github.rinde.rinsim.scenario.Scenario,long,com.github.rinde.rinsim.core.model.Model%5B%5D)|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/addCreator(java.lang.Class,com.github.rinde.rinsim.pdptw.common.DynamicPDPTWProblem$Creator)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/enableUI()|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/getStatistics()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/AddParcelEvent/defaultHandler()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController$Builder/withEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/builder()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-ui:4.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "com.github.rinde:rinsim-example:3.0.0",
    "coordinatesV2": "com.github.rinde:rinsim-example:4.1.0",
    "caller": "|java+method:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample/main2(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
    "v1Body": [
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/simulate()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/DynamicPDPTWProblem(com.github.rinde.rinsim.scenario.Scenario,long,com.github.rinde.rinsim.core.model.Model%5B%5D)|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/addCreator(java.lang.Class,com.github.rinde.rinsim.pdptw.common.DynamicPDPTWProblem$Creator)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/enableUI()|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/DynamicPDPTWProblem/getStatistics()|"
    ],
    "v2Body": [
      "|java+method:///com/github/rinde/rinsim/core/model/ModelProvider/getModel(java.lang.Class)|",
      "|java+method:///com/github/rinde/rinsim/scenario/fabrirecht/FabriRechtParser/fromJson(java.lang.String,int,int)|",
      "|java+method:///com/github/rinde/rinsim/ui/View/builder()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/withAutoPlay()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/RoadUserRenderer/builder()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/build()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/getModelProvider()|",
      "|java+method:///com/google/common/io/Files/toString(java.io.File,java.nio.charset.Charset)|",
      "|java+method:///com/github/rinde/rinsim/ui/View$Builder/with(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/AddParcelEvent/defaultHandler()|",
      "|java+constructor:///com/github/rinde/rinsim/examples/fabrirecht/simple/FabriRechtExample$1/FabriRechtExample$1()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController$Builder/withEventHandler(java.lang.Class,com.github.rinde.rinsim.scenario.TimedEventHandler)|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator$Builder/addModel(com.github.rinde.rinsim.core.model.ModelBuilder)|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PlaneRoadModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/ui/renderers/PDPModelRenderer/builder()|",
      "|java+method:///com/github/rinde/rinsim/scenario/ScenarioController/builder(com.github.rinde.rinsim.scenario.Scenario)|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/getStatistics()|",
      "|java+method:///com/github/rinde/rinsim/core/Simulator/start()|",
      "|java+method:///com/github/rinde/rinsim/pdptw/common/StatsTracker/builder()|"
    ],
    "affectedLib": "com.github.rinde:rinsim-scenario:4.1.0",
    "change": "UPDATED"
  }
]