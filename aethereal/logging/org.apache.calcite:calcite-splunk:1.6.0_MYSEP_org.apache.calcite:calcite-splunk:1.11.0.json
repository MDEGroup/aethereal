[
  {
    "coordinatesV1": "org.apache.calcite:calcite-splunk:1.6.0",
    "coordinatesV2": "org.apache.calcite:calcite-splunk:1.11.0",
    "caller": "|java+method:///org/apache/calcite/adapter/splunk/util/StringUtils/getClassTracer(java.lang.Class)|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/logging/Logger/getLogger(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.13",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.calcite:calcite-splunk:1.6.0",
    "coordinatesV2": "org.apache.calcite:calcite-splunk:1.11.0",
    "caller": "|java+initializer:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/SplunkConnectionImpl$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///java/util/logging/Logger/getLogger(java.lang.String)|",
      "|java+method:///java/lang/Class/getName()|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.13",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.calcite:calcite-splunk:1.6.0",
    "coordinatesV2": "org.apache.calcite:calcite-splunk:1.11.0",
    "caller": "|java+method:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/getSearchResults_(java.lang.String,java.util.Map,java.util.List,org.apache.calcite.adapter.splunk.search.SearchResultListener)|",
    "called": "|java+method:///org/apache/calcite/runtime/HttpUtils/appendURLEncodedArgs(java.lang.StringBuilder,java.util.Map)|",
    "v1Body": [
      "|java+method:///org/apache/calcite/adapter/splunk/util/HttpUtils/appendURLEncodedArgs(java.lang.StringBuilder,java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Exception/printStackTrace(java.io.PrintWriter)|",
      "|java+method:///java/net/URL/getPort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/net/URL/getHost()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/calcite/adapter/splunk/util/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map,int,int)|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/parseResults(java.io.InputStream,org.apache.calcite.adapter.splunk.search.SearchResultListener)|",
      "|java+method:///java/util/logging/Logger/warning(java.lang.String)|",
      "|java+method:///java/net/URL/getProtocol()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.Writer)|",
      "|java+constructor:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl$SplunkResultEnumerator/SplunkConnectionImpl$SplunkResultEnumerator(java.io.InputStream,java.util.List)|",
      "|java+method:///org/apache/calcite/linq4j/Linq4j/emptyEnumerator()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/Exception/printStackTrace(java.io.PrintWriter)|",
      "|java+method:///org/apache/calcite/runtime/HttpUtils/appendURLEncodedArgs(java.lang.StringBuilder,java.util.Map)|",
      "|java+method:///java/net/URL/getPort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/StringWriter/StringWriter()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/net/URL/getHost()|",
      "|java+constructor:///java/util/LinkedHashMap/LinkedHashMap()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/parseResults(java.io.InputStream,org.apache.calcite.adapter.splunk.search.SearchResultListener)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/warn(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/calcite/runtime/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map,int,int)|",
      "|java+method:///java/net/URL/getProtocol()|",
      "|java+constructor:///java/io/PrintWriter/PrintWriter(java.io.Writer)|",
      "|java+constructor:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl$SplunkResultEnumerator/SplunkConnectionImpl$SplunkResultEnumerator(java.io.InputStream,java.util.List)|",
      "|java+method:///org/apache/calcite/linq4j/Linq4j/emptyEnumerator()|",
      "|java+method:///java/util/Map/putAll(java.util.Map)|"
    ],
    "affectedLib": "org.apache.calcite:calcite-core:1.11.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.calcite:calcite-splunk:1.6.0",
    "coordinatesV2": "org.apache.calcite:calcite-splunk:1.11.0",
    "caller": "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/appendSearchString(java.lang.String,org.apache.calcite.adapter.splunk.SplunkTableScan,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)|",
    "called": "|java+method:///org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/logging/Logger/fine(java.lang.String)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/calcite/rel/RelNode/getRowType()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getProjects()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getRowType()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getCluster()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/calcite/adapter/splunk/SplunkTableScan/SplunkTableScan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.splunk.SplunkTable,java.lang.String,java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///org/apache/calcite/rex/RexInputRef/getIndex()|",
      "|java+constructor:///org/apache/calcite/util/Pair/Pair(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getTable()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/calcite/rel/type/RelDataTypeField/getName()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getPermutation()|",
      "|java+method:///org/apache/calcite/rel/type/RelDataType/getFieldList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/calcite/rex/RexSlot/getIndex()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(java.lang.String)|",
      "|java+method:///org/apache/calcite/rel/type/RelDataType/getFieldNames()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getRowType()|",
      "|java+constructor:///org/apache/calcite/rel/type/RelRecordType/RelRecordType(java.util.List)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/calcite/rex/RexInputRef/getIndex()|",
      "|java+method:///org/apache/calcite/rel/RelNode/getRowType()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getRowType()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getCluster()|",
      "|java+method:///java/lang/String/isEmpty()|",
      "|java+constructor:///org/apache/calcite/adapter/splunk/SplunkTableScan/SplunkTableScan(org.apache.calcite.plan.RelOptCluster,org.apache.calcite.plan.RelOptTable,org.apache.calcite.adapter.splunk.SplunkTable,java.lang.String,java.lang.String,java.lang.String,java.util.List)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getTable()|",
      "|java+method:///java/lang/String/valueOf(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/calcite/rel/type/RelDataTypeField/getName()|",
      "|java+method:///org/apache/calcite/plan/RelOptCluster/getTypeFactory()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getProjects()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/calcite/rel/type/RelDataTypeFactory/createStructType(java.util.List)|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getPermutation()|",
      "|java+method:///org/apache/calcite/rel/type/RelDataType/getFieldList()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/calcite/rex/RexSlot/getIndex()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(java.lang.String)|",
      "|java+method:///org/apache/calcite/rel/type/RelDataType/getFieldNames()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getRowType()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/calcite/util/Pair/of(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "org.apache.calcite:calcite-core:1.11.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.calcite:calcite-splunk:1.6.0",
    "coordinatesV2": "org.apache.calcite:calcite-splunk:1.11.0",
    "caller": "|java+method:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/connect()|",
    "called": "|java+method:///org/apache/calcite/runtime/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/net/URL/getProtocol()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/close(java.io.Closeable)|",
      "|java+method:///org/apache/calcite/adapter/splunk/util/HttpUtils/appendURLEncodedArgs(java.lang.StringBuilder,java.lang.CharSequence%5B%5D)|",
      "|java+method:///java/net/URL/getHost()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/calcite/adapter/splunk/util/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map)|",
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/lang/Exception/printStackTrace()|",
      "|java+method:///java/net/URL/getPort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Matcher/group(int)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/net/URL/getProtocol()|",
      "|java+method:///org/apache/calcite/runtime/HttpUtils/post(java.lang.String,java.lang.CharSequence,java.util.Map)|",
      "|java+method:///org/apache/calcite/runtime/HttpUtils/appendURLEncodedArgs(java.lang.StringBuilder,java.lang.CharSequence%5B%5D)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/calcite/adapter/splunk/search/SplunkConnectionImpl/close(java.io.Closeable)|",
      "|java+method:///java/net/URL/getHost()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/printStackTrace()|",
      "|java+method:///java/net/URL/getPort()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///java/util/regex/Matcher/find()|",
      "|java+method:///java/lang/Integer/valueOf(int)|"
    ],
    "affectedLib": "org.apache.calcite:calcite-core:1.11.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.calcite:calcite-splunk:1.6.0",
    "coordinatesV2": "org.apache.calcite:calcite-splunk:1.11.0",
    "caller": "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/onMatch(org.apache.calcite.plan.RelOptRuleCall)|",
    "called": "|java+method:///org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)|",
    "v1Body": [
      "|java+method:///java/util/logging/Logger/fine(java.lang.String)|",
      "|java+method:///org/apache/calcite/rex/RexCall/getOperands()|",
      "|java+method:///org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/appendSearchString(java.lang.String,org.apache.calcite.adapter.splunk.SplunkTableScan,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/calcite/rel/type/RelDataType/getFieldNames()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getRowType()|",
      "|java+method:///org/apache/calcite/rex/RexCall/getOperator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getRowType()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalFilter/getCondition()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/getFilter(org.apache.calcite.sql.SqlOperator,java.util.List,java.lang.StringBuilder,java.util.List)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/getFieldsString(org.apache.calcite.rel.type.RelDataType)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/calcite/rex/RexCall/getOperands()|",
      "|java+method:///org/apache/calcite/plan/RelOptRuleCall/transformTo(org.apache.calcite.rel.RelNode)|",
      "|java+method:///org/apache/calcite/rel/type/RelDataType/getFieldNames()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalProject/getRowType()|",
      "|java+method:///org/apache/calcite/rex/RexCall/getOperator()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/appendSearchString(java.lang.String,org.apache.calcite.adapter.splunk.SplunkTableScan,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.logical.LogicalProject,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.type.RelDataType)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkTableScan/getRowType()|",
      "|java+method:///org/apache/calcite/rel/logical/LogicalFilter/getCondition()|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/getFilter(org.apache.calcite.sql.SqlOperator,java.util.List,java.lang.StringBuilder,java.util.List)|",
      "|java+method:///org/apache/calcite/adapter/splunk/SplunkPushDownRule/getFieldsString(org.apache.calcite.rel.type.RelDataType)|"
    ],
    "affectedLib": "org.apache.calcite:calcite-core:1.11.0",
    "change": "UPDATED"
  }
]