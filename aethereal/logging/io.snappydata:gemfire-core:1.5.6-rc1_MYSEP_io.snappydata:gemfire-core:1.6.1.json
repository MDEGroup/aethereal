[
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.6.1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.5.6-rc1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$13/include(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Profile)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/getInt(java.lang.Object)|",
    "v1Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$DataStoreBuckets/PRHARedundancyProvider$DataStoreBuckets(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$PartitionProfile/getDistributedMember()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/getInt(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$DataStoreBuckets/PRHARedundancyProvider$DataStoreBuckets(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$PartitionProfile/getDistributedMember()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/getLong(java.lang.Object)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.1.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.6.1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.5.6-rc1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilteredDataStores(java.util.Set)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/addTo(java.lang.Object,int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ProxyBucketRegion/getBucketAdvisor()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/addTo(java.lang.Object,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/basicGetPrimaryMember()|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/Object2IntOpenHashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilter(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Filter)|",
      "|java+method:///java/util/Set/size()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$13/RegionAdvisor$13(com.gemstone.gemfire.internal.cache.partitioned.RegionAdvisor,java.util.Set,it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap,java.util.ArrayList)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ProxyBucketRegion/getBucketAdvisor()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/put(java.lang.Object,long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/basicGetPrimaryMember()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$13/RegionAdvisor$13(com.gemstone.gemfire.internal.cache.partitioned.RegionAdvisor,java.util.Set,io.snappydata.collection.ObjectLongHashMap,java.util.ArrayList)|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/getLong(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/withExpectedSize(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilter(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Filter)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.1.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.6.1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.5.6-rc1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/createBucketAtomically(int,int,long,boolean,java.lang.String)|",
    "called": "|java+method:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/addAll(java.util.Collection)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRedundantCopies()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/checkSufficientStores(java.util.Set,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warningEnabled()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/wasCleared()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/computeTimeout()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isCacheAtShutdownAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/enforceUniqueZone()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/beginMonitoring()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/cancelInProgress()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/verifyBucketNodes(java.util.Collection,java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getBuddyMembersInZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.util.Set)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/PRHARedundancyProvider$ArrayListWithClearState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/removeUnInitializedMembers(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/earlySufficientStoresCheck(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/cache/CacheClosedException/CacheClosedException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/insufficientStores(java.util.Set,java.util.Collection,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/cleanUpBucket(int)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/stopMonitoring()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucketOwners(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/createBucketInstance(int,int,java.util.Set,java.util.Collection,com.gemstone.gemfire.internal.cache.PRHARedundancyProvider$ArrayListWithClearState,long,java.util.Set)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucket(int)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/size()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/addAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getAllStores(java.lang.String)|",
      "|java+method:///java/lang/RuntimeException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/Bucket/getBucketAdvisor()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/unlock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/PRHARedundancyProvider$BucketMembershipObserver(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,com.gemstone.gemfire.internal.cache.partitioned.Bucket)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/timedOut(com.gemstone.gemfire.internal.cache.PartitionedRegion,java.util.Set,java.util.Collection,java.lang.String,long)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/checkReadiness()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/ObjectOpenHashSet()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/bucketStringForLogs(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/waitForOwnersGetPrimary(int,java.util.Collection,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/endBucketCreation(int,java.util.Collection,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.lang.String)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/lock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getBucketPrimary(int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRedundantCopies()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getAllStores(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/checkSufficientStores(java.util.Set,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warningEnabled()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/computeTimeout()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isCacheAtShutdownAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/enforceUniqueZone()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/beginMonitoring()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/cancelInProgress()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/verifyBucketNodes(java.util.Collection,java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getBuddyMembersInZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.util.Set)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/PRHARedundancyProvider$ArrayListWithClearState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/removeUnInitializedMembers(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/earlySufficientStoresCheck(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/cache/CacheClosedException/CacheClosedException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/insufficientStores(java.util.Set,java.util.Collection,boolean)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/size()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/cleanUpBucket(int)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/stopMonitoring()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucketOwners(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/createBucketInstance(int,int,java.util.Set,java.util.Collection,com.gemstone.gemfire.internal.cache.PRHARedundancyProvider$ArrayListWithClearState,long,java.util.Set)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucket(int)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/lang/RuntimeException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/Bucket/getBucketAdvisor()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/unlock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/PRHARedundancyProvider$BucketMembershipObserver(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,com.gemstone.gemfire.internal.cache.partitioned.Bucket)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/timedOut(com.gemstone.gemfire.internal.cache.PartitionedRegion,java.util.Set,java.util.Collection,java.lang.String,long)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/checkReadiness()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/bucketStringForLogs(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/waitForOwnersGetPrimary(int,java.util.Collection,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/endBucketCreation(int,java.util.Collection,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.lang.String)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/lock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/wasCleared()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getBucketPrimary(int)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.1.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.6.1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.5.6-rc1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getPreferredDataStore(java.util.Collection,java.util.Collection)|",
    "called": "|java+constructor:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/ObjectOpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$DataStoreBuckets/PRHARedundancyProvider$DataStoreBuckets(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/fancyFormatBucketAllocation(java.lang.String,java.util.List,java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getMembersInSameZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///java/util/Comparator/compare(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getId()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getForceLocalPrimaries()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getNumberOfPrimaryBucketsManaged()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getLocalMaxMemory()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$2/PRHARedundancyProvider$2(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,java.util.HashSet,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///java/util/HashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getBucketsManaged()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilteredDataStores(java.util.Set)|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/ObjectOpenHashSet(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///java/util/ArrayList/get(int)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$DataStoreBuckets/PRHARedundancyProvider$DataStoreBuckets(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/fancyFormatBucketAllocation(java.lang.String,java.util.List,java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getMembersInSameZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///java/util/Comparator/compare(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getId()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getForceLocalPrimaries()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getNumberOfPrimaryBucketsManaged()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getLocalMaxMemory()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$2/PRHARedundancyProvider$2(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,java.util.HashSet,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///java/util/HashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getBucketsManaged()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilteredDataStores(java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///java/util/ArrayList/get(int)|"
    ],
    "affectedLib": "it.unimi.dsi:fastutil:7.1.0",
    "change": "REMOVED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getDepartedMembersSet()|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(int)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getSnapshotRVV()|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/waitForData()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock/readLock()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getVersionVector()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getFullPath()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/isDataStore()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/waitForData()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getVersionVector()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getSnapShotOfMemberVersion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getAllLocalBucketRegions()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getFullPath()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getPartitionAttributes()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock/unlock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getApplicationRegions()|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock/lock()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock/readLock()|",
      "|java+method:///java/util/Collection/forEach(java.util.function.Consumer)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/size()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock/unlock()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock/lock()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/retainAll(java.util.Collection)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Set/retainAll(java.util.Collection)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/retainAll(java.util.Collection)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getCloneForTransmission()|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(int,float,int)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/putAll(java.util.Map)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/createCopy(com.gemstone.gemfire.internal.cache.versions.VersionSource,java.util.concurrent.ConcurrentHashMap,long,java.util.concurrent.ConcurrentHashMap,long,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/clone()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(int,float,int)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/putAll(java.util.Map)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/createCopy(com.gemstone.gemfire.internal.cache.versions.VersionSource,java.util.concurrent.ConcurrentHashMap,long,java.util.concurrent.ConcurrentHashMap,long,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/clone()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$DiskRegionInfoWithList/Oplog$DiskRegionInfoWithList(com.gemstone.gemfire.internal.cache.persistence.DiskRegionView,boolean,boolean)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$OplogDiskEntry/Oplog$OplogDiskEntry()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$AbstractDiskRegionInfo/Oplog$AbstractDiskRegionInfo(com.gemstone.gemfire.internal.cache.persistence.DiskRegionView)|"
    ],
    "v2Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$OplogDiskEntry/Oplog$OplogDiskEntry()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$AbstractDiskRegionInfo/Oplog$AbstractDiskRegionInfo(com.gemstone.gemfire.internal.cache.persistence.DiskRegionView)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getAllLocalPrimaryBucketRegions()|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet()|",
      "|java+method:///com/gemstone/gnu/trove/THashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilteredDataStores(java.util.Set)|",
    "called": "|java+method:///io/snappydata/collection/ObjectLongHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ProxyBucketRegion/getBucketAdvisor()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/addTo(java.lang.Object,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/basicGetPrimaryMember()|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/Object2IntOpenHashMap/Object2IntOpenHashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilter(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Filter)|",
      "|java+method:///java/util/Set/size()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$13/RegionAdvisor$13(com.gemstone.gemfire.internal.cache.partitioned.RegionAdvisor,java.util.Set,it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap,java.util.ArrayList)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ProxyBucketRegion/getBucketAdvisor()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/put(java.lang.Object,long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/basicGetPrimaryMember()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor$13/RegionAdvisor$13(com.gemstone.gemfire.internal.cache.partitioned.RegionAdvisor,java.util.Set,io.snappydata.collection.ObjectLongHashMap,java.util.ArrayList)|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/getLong(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/withExpectedSize(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilter(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Filter)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/add(java.lang.Object)|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getAllLocalBucketRegions()|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/i18n/AbstractStringIdResourceBundle/readDataFile(java.io.InputStream)|",
    "called": "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/put(int,java.lang.Object)|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+constructor:///com/gemstone/gemfire/InternalGemFireException/InternalGemFireException(java.lang.Throwable)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+constructor:///com/gemstone/gnu/trove/TIntObjectHashMap/TIntObjectHashMap()|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|"
    ],
    "v2Body": [
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///java/lang/String/replaceAll(java.lang.String,java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/InternalGemFireException/InternalGemFireException(java.lang.Throwable)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)|",
      "|java+method:///java/lang/String/indexOf(int)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/justPut(int,java.lang.Object)|",
      "|java+method:///java/lang/String/trim()|",
      "|java+method:///java/io/InputStream/close()|",
      "|java+method:///java/lang/String/substring(int,int)|",
      "|java+method:///java/lang/String/substring(int)|",
      "|java+method:///java/lang/Integer/parseInt(java.lang.String)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/recoverValuesIfNeeded(java.util.Map,java.util.Map,java.lang.Object)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/shouldStopRecovery()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry$Helper/recoverValue(com.gemstone.gemfire.internal.cache.DiskEntry,long,com.gemstone.gemfire.internal.cache.persistence.DiskRecoveryStore)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskId/getOplogId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isClosing()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/persistence/DiskRecoveryStore/lruLimitExceeded()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getOplogId()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/infoEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/HashMap/values()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/CallbackFactoryProvider/getStoreCallbacks()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry/getDiskId()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskEntry()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/persistence/DiskRegionView/getId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskRegionView()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/isEmpty()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/toString()|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/util/HashMap/keySet()|",
      "|java+method:///java/util/HashMap/isEmpty()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/shouldStopRecovery()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry$Helper/recoverValue(com.gemstone.gemfire.internal.cache.DiskEntry,long,com.gemstone.gemfire.internal.cache.persistence.DiskRecoveryStore)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskId/getOplogId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isClosing()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/persistence/DiskRecoveryStore/lruLimitExceeded()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getOplogId()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/infoEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/CallbackFactoryProvider/getStoreCallbacks()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/values()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/keySet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry/getDiskId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskEntry()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/persistence/DiskRegionView/getId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskRegionView()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/isEmpty()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/toString()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/createKrf(boolean)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/writeIRF(java.util.List,java.util.HashSet,java.util.Set,java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/allowKrfCreation()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isPersistIndexes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/cacheTimeMillis()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheObserverHolder/getInstance()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/Object/notifyAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/krfClose(boolean,boolean)|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheObserver/afterKrfCreated()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/acquireCompactorReadLock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/flushAndSync(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/lockCompactor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/couldHaveKrf()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskInitFile()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/unlockCompactor()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheObserver/shouldCreateKRFIRF()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/releaseCompactorReadLock()|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$DiskRegionInfo/afterKrfCreated()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/writeOneKeyEntryForKRF(com.gemstone.gemfire.internal.cache.Oplog$KRFEntry,long)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCache()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/closeAndDeleteKrf()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/irfCreate(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/krfFileCreate()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/krfCreate(long)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/allowKrfCreation()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isPersistIndexes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/cacheTimeMillis()|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/get()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/releaseCompactorReadLock()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheObserverHolder/getInstance()|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/lang/Object/notifyAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/krfClose(boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheObserver/afterKrfCreated()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/acquireCompactorReadLock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/writeIRF(java.util.List,io.snappydata.collection.OpenHashSet,java.util.Set,java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/flushAndSync(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/lockCompactor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/couldHaveKrf()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskInitFile()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/unlockCompactor()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheObserver/shouldCreateKRFIRF()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/get()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/compareAndSet(boolean,boolean)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$DiskRegionInfo/afterKrfCreated()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/writeOneKeyEntryForKRF(com.gemstone.gemfire.internal.cache.Oplog$KRFEntry,long)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCache()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/closeAndDeleteKrf()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/irfCreate(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/krfFileCreate()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/krfCreate(long)|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
      "|java+method:///java/util/concurrent/atomic/AtomicBoolean/set(boolean)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/remove(java.lang.Object)|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/remove(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/remove(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getMemberToVersion()|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getOwnerId()|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/clone()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getOwnerId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/clone()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getTargetRegionsForIndexes(java.util.Set)|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/contains(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/concurrent/ConcurrentMap/values()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getRegionRecoveryMap()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/gemstone/gnu/trove/THashSet/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gnu/trove/THashSet/contains(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParentRegionID(com.gemstone.gemfire.internal.cache.persistence.DiskRegionView)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getRegionID()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$DiskRegionInfo/getDiskRegion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getBaseRegion()|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/ConcurrentMap/values()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getRegionRecoveryMap()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///java/util/concurrent/ConcurrentMap/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParentRegionID(com.gemstone.gemfire.internal.cache.persistence.DiskRegionView)|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getRegionID()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/contains(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$DiskRegionInfo/getDiskRegion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getBaseRegion()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getMemberToGCVersion()|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getOwnerId()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getOwnerId()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+initializer:///com/gemstone/gemfire/internal/DSFIDFactory/DSFIDFactory$initializer|",
    "called": "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+constructor:///com/gemstone/gnu/trove/TIntObjectHashMap/TIntObjectHashMap(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/isHadoopGfxdLonerMode()|",
      "|java+method:///com/gemstone/gemfire/internal/DSFIDFactory/registerTypes()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/isHadoopGfxdLonerMode()|",
      "|java+method:///com/gemstone/gemfire/internal/DSFIDFactory/registerTypes()|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getKeysWithInterest(int,java.lang.Object,boolean)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/containsTombstone(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/keySet(boolean)|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/containsKey(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|"
    ],
    "v2Body": [
      "|java+method:///java/util/regex/Pattern/compile(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/containsTombstone(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/keySet(boolean)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/containsKey(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/regex/Matcher/matches()|",
      "|java+method:///java/util/function/Predicate/test(java.lang.Object)|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/regex/Pattern/matcher(java.lang.CharSequence)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getTombstoneGCVector()|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/util/concurrent/CopyOnWriteHashMap/putAll(java.util.Map)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/Collections/unmodifiableMap(java.util.Map)|",
      "|java+method:///java/util/HashMap/putAll(java.util.Map)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Collections/unmodifiableMap(java.util.Map)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/putAll(java.util.Map)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/util/concurrent/CopyOnWriteHashMap/put(java.lang.Object,java.lang.Object)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/Collections/unmodifiableMap(java.util.Map)|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Collections/unmodifiableMap(java.util.Map)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/postPutAllFireEvents(com.gemstone.gemfire.internal.cache.DistributedPutAllOperation,com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList)|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/contains(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withStorage()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/isBridgeEvent()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///java/util/HashSet/HashSet(int)|",
      "|java+method:///com/gemstone/gemfire/cache/Operation/isCreate()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/isPossibleDuplicate()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/eventIterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/invokePutCallbacks(com.gemstone.gemfire.internal.cache.EnumListenerEvent,com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean)|",
      "|java+method:///java/util/Set/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/fillVersionedObjectList(com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/clear()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/getBaseEvent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getOperation()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/callbacksInvoked()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/getKeys()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withStorage()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/isBridgeEvent()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(int)|",
      "|java+method:///com/gemstone/gemfire/cache/Operation/isCreate()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/isPossibleDuplicate()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/eventIterator()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/invokePutCallbacks(com.gemstone.gemfire.internal.cache.EnumListenerEvent,com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/clear()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/getBaseEvent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getOperation()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/fillVersionedObjectList(com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/callbacksInvoked()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/getKeys()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/send(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember%5B%5D,com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.gemfire.distributed.internal.DistributionStats)|",
    "called": "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/directChannelSend(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember%5B%5D,com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.gemfire.distributed.internal.DistributionStats)|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/put(int,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/flushUnicast()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/endMsgSerialization(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/org/jgroups/Message/getLength()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/DistributedSystemDisconnectedException/DistributedSystemDisconnectedException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/containsKey(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isForceUDPCommunications()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/org/jgroups/Message/copy(boolean)|",
      "|java+method:///com/gemstone/org/jgroups/View/getMembers()|",
      "|java+method:///com/gemstone/org/jgroups/Message/setDest(com.gemstone.org.jgroups.Address)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/startMsgSerialization()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getView()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMember/getAddress()|",
      "|java+method:///java/lang/Throwable/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/Vector/size()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getLocalAddress()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/isConnected()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/send(com.gemstone.org.jgroups.Message)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/forAll()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/sendViaJGroups()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getDisableTcp()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/createJGMessage(com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.org.jgroups.Address,short)|",
      "|java+method:///java/lang/Object/wait(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Vector/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getNetMember()|",
      "|java+method:///com/gemstone/gemfire/internal/util/Breadcrumbs/setProblem(java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/ChannelClosedException/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/getView()|",
      "|java+method:///com/gemstone/org/jgroups/Event/getArg()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/incSentBytes(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finer(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/stack/IpAddress/getVersionOrdinal()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/getMulticast()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finerEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Vector/elementAt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setSender(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///com/gemstone/org/jgroups/protocols/UNICAST/getNumberOfUnackedMessages()|",
      "|java+method:///java/util/Collections/shuffle(java.util.List)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/get(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/DistributedMembershipListener/membershipFailure(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/gemstone/gnu/trove/TIntObjectHashMap/TIntObjectHashMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setBreadcrumbsInSender()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/directChannelSend(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember%5B%5D,com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.gemfire.distributed.internal.DistributionStats)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/flushUnicast()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/endMsgSerialization(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/org/jgroups/Message/getLength()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/DistributedSystemDisconnectedException/DistributedSystemDisconnectedException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isForceUDPCommunications()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/org/jgroups/Message/copy(boolean)|",
      "|java+method:///com/gemstone/org/jgroups/View/getMembers()|",
      "|java+method:///com/gemstone/org/jgroups/Message/setDest(com.gemstone.org.jgroups.Address)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/startMsgSerialization()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getView()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMember/getAddress()|",
      "|java+method:///java/lang/Throwable/initCause(java.lang.Throwable)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/justPut(int,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Vector/size()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getLocalAddress()|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/get(int)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/isConnected()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/send(com.gemstone.org.jgroups.Message)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/forAll()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/sendViaJGroups()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getDisableTcp()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/createJGMessage(com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.org.jgroups.Address,short)|",
      "|java+method:///java/lang/Object/wait(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Vector/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getNetMember()|",
      "|java+method:///com/gemstone/gemfire/internal/util/Breadcrumbs/setProblem(java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/ChannelClosedException/getCause()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/contains(int)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/getView()|",
      "|java+method:///com/gemstone/org/jgroups/Event/getArg()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/incSentBytes(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finer(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/stack/IpAddress/getVersionOrdinal()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/getMulticast()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finerEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Vector/elementAt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setSender(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///com/gemstone/org/jgroups/protocols/UNICAST/getNumberOfUnackedMessages()|",
      "|java+method:///java/util/Collections/shuffle(java.util.List)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/DistributedMembershipListener/membershipFailure(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setBreadcrumbsInSender()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/recoverIndexes(java.util.Map)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/accountMemoryForIndex(long,boolean)|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/addJob(com.gemstone.gemfire.internal.cache.SortedIndexKey,com.gemstone.gemfire.internal.cache.RegionEntry)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskId/getOplogId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isClosing()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/OplogIndex$IndexData/getIndex()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Token/isInvalidOrRemoved(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry$Helper/getValueOffHeapOrDiskWithoutFaultIn(com.gemstone.gemfire.internal.cache.DiskEntry,com.gemstone.gemfire.internal.cache.persistence.DiskRegionView,com.gemstone.gemfire.internal.cache.RegionEntryContext)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry/getDiskId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getIndexKey(java.lang.Object,com.gemstone.gemfire.internal.cache.RegionEntry)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/OplogIndex/getDiskIdToIndexDataMap(java.util.Set,java.util.Map,int,java.util.Map,java.util.List)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskEntry()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///java/util/HashMap/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/persistence/DiskRegionView/getId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskRegionView()|",
      "|java+constructor:///java/util/HashMap/HashMap(int)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapHelper/release(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/infoEnabled()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getBaseRegion()|",
      "|java+method:///java/util/HashMap/get(java.lang.Object)|",
      "|java+method:///java/util/HashMap/isEmpty()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/size()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/accountMemoryForIndex(long,boolean)|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/addJob(com.gemstone.gemfire.internal.cache.SortedIndexKey,com.gemstone.gemfire.internal.cache.RegionEntry)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskId/getOplogId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isClosing()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Token/isInvalidOrRemoved(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry$Helper/getValueOffHeapOrDiskWithoutFaultIn(com.gemstone.gemfire.internal.cache.DiskEntry,com.gemstone.gemfire.internal.cache.persistence.DiskRegionView,com.gemstone.gemfire.internal.cache.RegionEntryContext)|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskEntry/getDiskId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getIndexKey(java.lang.Object,com.gemstone.gemfire.internal.cache.RegionEntry)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/OplogIndex/getDiskIdToIndexDataMap(java.util.Set,java.util.Map,int,java.util.Map,java.util.List)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskEntry()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/persistence/DiskRegionView/getId()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog$KRFEntry/getDiskRegionView()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/OplogIndex$IndexData/getIndex()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/isEmpty()|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapHelper/release(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/infoEnabled()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getBaseRegion()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/concurrent/ConcurrentMap/size()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/mapBaseline(java.util.List,java.util.Set)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/util/TransformUtils/transformAndMap(java.util.Collection,com.gemstone.gemfire.internal.util.Transformer)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Map/containsKey(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/util/TransformUtils/transformAndMap(java.util.Collection,com.gemstone.gemfire.internal.util.Transformer)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/withExpectedSize(int)|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/contains(java.lang.Object)|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/contains(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/Set/contains(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///io/snappydata/collection/OpenHashSet/contains(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/util/concurrent/CopyOnWriteHashMap/remove(java.lang.Object)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+method:///java/util/Collections/unmodifiableMap(java.util.Map)|",
      "|java+method:///java/util/HashMap/remove(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Collections/unmodifiableMap(java.util.Map)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/remove(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/getCloneForTransmission(com.gemstone.gemfire.internal.cache.versions.VersionSource)|",
    "called": "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
    "v1Body": [
      "|java+constructor:///java/util/HashMap/HashMap(java.util.Map)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(int,float,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/clone()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/createCopy(com.gemstone.gemfire.internal.cache.versions.VersionSource,java.util.concurrent.ConcurrentHashMap,long,java.util.concurrent.ConcurrentHashMap,long,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/RegionVersionHolder(long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(int,float,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/clone()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/createCopy(com.gemstone.gemfire.internal.cache.versions.VersionSource,java.util.concurrent.ConcurrentHashMap,long,java.util.concurrent.ConcurrentHashMap,long,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)|",
      "|java+method:///io/snappydata/collection/ObjectObjectHashMap/from(java.util.Map)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/versions/RegionVersionHolder/RegionVersionHolder(long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/addAll(java.util.Collection)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/addAll(java.util.Collection)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/persistence/CanonicalIdHolder/CanonicalIdHolder()|",
    "called": "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
    "v1Body": [
      "|java+constructor:///com/gemstone/gnu/trove/TObjectIntHashMap/TObjectIntHashMap()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///com/gemstone/gnu/trove/TIntObjectHashMap/TIntObjectHashMap()|"
    ],
    "v2Body": [
      "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
      "|java+method:///io/snappydata/collection/ObjectLongHashMap/withExpectedSize(int)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/removeAll(java.util.Collection)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/removeAll(java.util.Collection)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/CacheServerLauncher(java.lang.String)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/SocketCreator/getLocalHost()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/getBaseName(java.lang.String)|",
      "|java+method:///java/net/InetAddress/getCanonicalHostName()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/isThriftDefault()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/shared/LauncherBase/LauncherBase(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/initKnownOptions()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/CopyOnWriteHashSet/CopyOnWriteHashSet(java.util.Set)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/adviseFilter(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Filter)|",
    "called": "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor$Profile/getDistributedMember()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/getDefaultDistributionMembers()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/initializationGate()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor$Filter/include(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Profile)|",
      "|java+method:///com/gemstone/gnu/trove/THashSet/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/getLogWriter()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor$Profile/getDistributedMember()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/getDefaultDistributionMembers()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/initializationGate()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor$Filter/include(com.gemstone.gemfire.distributed.internal.DistributionAdvisor$Profile)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/getLogWriter()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getAllLocalPrimaryBucketIds()|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet()|",
      "|java+method:///com/gemstone/gnu/trove/THashSet/add(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getId()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getApplicationRegions()|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isSecret()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isUsedForPartitionedRegionAdmin()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/basicSubregions(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isInternalRegion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isUsedForMetaRegion()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///java/util/HashMap/values()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/HashMap/values()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/basicSubregions(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isInternalRegion()|",
      "|java+method:///io/snappydata/collection/OpenHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Collection/iterator()|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getPreferredDataStore(java.util.Collection,java.util.Collection)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
    "v1Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$DataStoreBuckets/PRHARedundancyProvider$DataStoreBuckets(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/fancyFormatBucketAllocation(java.lang.String,java.util.List,java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getMembersInSameZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///java/util/Comparator/compare(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getId()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getForceLocalPrimaries()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getNumberOfPrimaryBucketsManaged()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getLocalMaxMemory()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$2/PRHARedundancyProvider$2(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,java.util.HashSet,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///java/util/HashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getBucketsManaged()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilteredDataStores(java.util.Set)|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/ObjectOpenHashSet(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///java/util/ArrayList/get(int)|"
    ],
    "v2Body": [
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet(java.util.Collection)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$DataStoreBuckets/PRHARedundancyProvider$DataStoreBuckets(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,int,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/fancyFormatBucketAllocation(java.lang.String,java.util.List,java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getMembersInSameZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+method:///java/util/Comparator/compare(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getId()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getForceLocalPrimaries()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getNumberOfPrimaryBucketsManaged()|",
      "|java+method:///java/util/Random/nextInt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getLocalMaxMemory()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$2/PRHARedundancyProvider$2(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,java.util.HashSet,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///java/util/HashSet/addAll(java.util.Collection)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getBucketsManaged()|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/adviseFilteredDataStores(java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///java/util/ArrayList/get(int)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/createBucketAtomically(int,int,long,boolean,java.lang.String)|",
    "called": "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRedundantCopies()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/checkSufficientStores(java.util.Set,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warningEnabled()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/wasCleared()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/computeTimeout()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isCacheAtShutdownAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/enforceUniqueZone()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/beginMonitoring()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/cancelInProgress()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/verifyBucketNodes(java.util.Collection,java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getBuddyMembersInZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.util.Set)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/PRHARedundancyProvider$ArrayListWithClearState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/removeUnInitializedMembers(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/earlySufficientStoresCheck(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/cache/CacheClosedException/CacheClosedException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/insufficientStores(java.util.Set,java.util.Collection,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/cleanUpBucket(int)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/stopMonitoring()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucketOwners(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/createBucketInstance(int,int,java.util.Set,java.util.Collection,com.gemstone.gemfire.internal.cache.PRHARedundancyProvider$ArrayListWithClearState,long,java.util.Set)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucket(int)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId)|",
      "|java+method:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/size()|",
      "|java+method:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/addAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getAllStores(java.lang.String)|",
      "|java+method:///java/lang/RuntimeException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/Bucket/getBucketAdvisor()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/unlock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/PRHARedundancyProvider$BucketMembershipObserver(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,com.gemstone.gemfire.internal.cache.partitioned.Bucket)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/timedOut(com.gemstone.gemfire.internal.cache.PartitionedRegion,java.util.Set,java.util.Collection,java.lang.String,long)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/checkReadiness()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///it/unimi/dsi/fastutil/objects/ObjectOpenHashSet/ObjectOpenHashSet()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/bucketStringForLogs(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/waitForOwnersGetPrimary(int,java.util.Collection,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/endBucketCreation(int,java.util.Collection,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.lang.String)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/lock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getBucketPrimary(int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRedundantCopies()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getAllStores(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/checkSufficientStores(java.util.Set,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warningEnabled()|",
      "|java+method:///java/util/Collection/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/computeTimeout()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isCacheAtShutdownAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getLogger()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/enforceUniqueZone()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/beginMonitoring()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/cancelInProgress()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/verifyBucketNodes(java.util.Collection,java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/getBuddyMembersInZone(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.util.Set)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/PRHARedundancyProvider$ArrayListWithClearState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/removeUnInitializedMembers(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/earlySufficientStoresCheck(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/cache/CacheClosedException/CacheClosedException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/insufficientStores(java.util.Set,java.util.Collection,boolean)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/size()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/cleanUpBucket(int)|",
      "|java+method:///io/snappydata/collection/OpenHashSet/addAll(java.util.Collection)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getRegionAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/stopMonitoring()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucketOwners(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/createBucketInstance(int,int,java.util.Set,java.util.Collection,com.gemstone.gemfire.internal.cache.PRHARedundancyProvider$ArrayListWithClearState,long,java.util.Set)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/RegionAdvisor/getBucket(int)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/lang/RuntimeException/getMessage()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/Bucket/getBucketAdvisor()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/unlock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/PRHARedundancyProvider$BucketMembershipObserver(com.gemstone.gemfire.internal.cache.PRHARedundancyProvider,com.gemstone.gemfire.internal.cache.partitioned.Bucket)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/timedOut(com.gemstone.gemfire.internal.cache.PartitionedRegion,java.util.Set,java.util.Collection,java.lang.String,long)|",
      "|java+method:///java/util/Set/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/checkReadiness()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/bucketStringForLogs(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$BucketMembershipObserver/waitForOwnersGetPrimary(int,java.util.Collection,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider/endBucketCreation(int,java.util.Collection,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,java.lang.String)|",
      "|java+method:///java/util/concurrent/locks/ReentrantLock/lock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getMyId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PRHARedundancyProvider$ArrayListWithClearState/wasCleared()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getBucketPrimary(int)|"
    ],
    "affectedLib": "io.snappydata:snappydata-util:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$RequestImageMessage/chunkTXEntries(com.gemstone.gemfire.internal.cache.DistributedRegion,com.gemstone.gemfire.distributed.internal.DistributionManager,int,com.gemstone.gemfire.internal.cache.InitialImageFlowControl,int,int,int)|",
    "called": "|java+method:///com/gemstone/gnu/trove/THashMap/put(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/util/ArrayList/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/lock()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTXRegionStatesSnap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXBatchMessage/getOffset()|",
      "|java+method:///com/gemstone/gemfire/internal/HeapDataOutputStream/clearForReuse()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$ImageReplyMessage/send(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,com.gemstone.gemfire.distributed.internal.ReplyException,com.gemstone.gemfire.distributed.internal.DistributionManager,java.lang.Object,java.util.ArrayList,int,int,int,boolean,int,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/unlock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCacheTransactionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/isInProgress()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$RequestImageMessage/replyWithData(com.gemstone.gemfire.distributed.internal.DistributionManager,java.lang.Object,java.util.ArrayList,int,int,int,boolean,int,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/InternalDataSerializer/invokeToData(com.gemstone.gemfire.internal.DataSerializableFixedID,java.io.DataOutput)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TXBatchMessage/TXBatchMessage()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTransactionId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/isDestroyed()|",
      "|java+method:///com/gemstone/gnu/trove/THashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/HeapDataOutputStream/HeapDataOutputStream(int,com.gemstone.gemfire.internal.shared.Version)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageFlowControl/acquirePermit()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXBatchMessage/initTXState(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/getLocalTXState()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/getHostedTransactionsInProgress()|",
      "|java+method:///java/util/ArrayList/clear()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getTXState()|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/lockTXState()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getVersionObject()|",
      "|java+method:///java/util/ArrayList/addAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$RequestImageMessage/getSender()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getInternalEntryMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getLockingPolicy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/unlockTXState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXBatchMessage/init(java.util.List,int,int,java.util.ArrayList,com.gemstone.gemfire.internal.cache.LocalRegion,java.util.List,boolean)|"
    ],
    "v2Body": [
      "|java+method:///java/util/ArrayList/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/lock()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXBatchMessage/getOffset()|",
      "|java+method:///com/gemstone/gemfire/internal/HeapDataOutputStream/clearForReuse()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$ImageReplyMessage/send(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,com.gemstone.gemfire.distributed.internal.ReplyException,com.gemstone.gemfire.distributed.internal.DistributionManager,java.lang.Object,java.util.ArrayList,int,int,int,boolean,int,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/unlock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCacheTransactionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/isInProgress()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$RequestImageMessage/replyWithData(com.gemstone.gemfire.distributed.internal.DistributionManager,java.lang.Object,java.util.ArrayList,int,int,int,boolean,int,boolean,com.gemstone.gemfire.internal.cache.versions.RegionVersionHolder)|",
      "|java+method:///java/util/ArrayList/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/InternalDataSerializer/invokeToData(com.gemstone.gemfire.internal.DataSerializableFixedID,java.io.DataOutput)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TXBatchMessage/TXBatchMessage()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTransactionId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/isDestroyed()|",
      "|java+method:///com/gemstone/gnu/trove/THashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTXRegionStatesSnap()|",
      "|java+method:///java/util/Arrays/sort(java.lang.Object%5B%5D,java.util.Comparator)|",
      "|java+constructor:///com/gemstone/gemfire/internal/HeapDataOutputStream/HeapDataOutputStream(int,com.gemstone.gemfire.internal.shared.Version)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageFlowControl/acquirePermit()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXBatchMessage/initTXState(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/getLocalTXState()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/getHostedTransactionsInProgress()|",
      "|java+method:///java/util/ArrayList/clear()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getTXState()|",
      "|java+method:///java/util/Collection/toArray(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/ArrayList/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/lockTXState()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getVersionObject()|",
      "|java+method:///java/util/ArrayList/addAll(java.util.Collection)|",
      "|java+method:///java/util/Comparator/comparing(java.util.function.Function)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InitialImageOperation$RequestImageMessage/getSender()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getInternalEntryMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getLockingPolicy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/unlockTXState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXBatchMessage/init(java.util.List,int,int,java.util.ArrayList,com.gemstone.gemfire.internal.cache.LocalRegion,java.util.List,boolean)|"
    ],
    "affectedLib": "io.snappydata:gemfire-trove:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/doLocalPutAll(com.gemstone.gemfire.internal.cache.PartitionedRegion,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,long)|",
    "called": "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap(int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getAttributes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/hasFailure()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPossibleDuplicate(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setTXState(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/getLockingPolicy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/getEventFromEntry(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.BucketRegion,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,java.lang.Object,com.gemstone.gemfire.internal.cache.DistributedPutAllOperation$PutAllEntryData%5B%5D,boolean,com.gemstone.gemfire.internal.cache.tier.sockets.ClientProxyMembershipID,boolean,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/LogWriter/fine(java.lang.String)|",
      "|java+method:///java/lang/Exception/getCause()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/setBatchUUID(java.util.UUID)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InternalDataView/postPutAll(com.gemstone.gemfire.internal.cache.DistributedPutAllOperation,com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList,com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/UMMMemoryTracker/getFirstAllocationObject()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateInterface/getTXStateForWrite()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/saveFailedKey(java.lang.Object,java.lang.Exception)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/DistributedPutAllOperation(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.EntryEventImpl,int,boolean,com.gemstone.gemfire.internal.cache.DistributedPutAllOperation$PutAllEntryData%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getDataView(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setContext(com.gemstone.gemfire.internal.cache.tier.sockets.ClientProxyMembershipID)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/getValue()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/keyRequiresRegionContext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ForceReattemptException/setHash(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/release()|",
      "|java+method:///com/gemstone/gemfire/cache/client/internal/ServerRegionProxy/getPool()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceReattemptException/ForceReattemptException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/CallbackFactoryProvider/getStoreCallbacks()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceReattemptException/ForceReattemptException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/freeOffHeapResources()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/VersionedObjectList(int,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InternalDataView/putEntryOnRemote(com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean,java.lang.Object,boolean,boolean,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/hasServerProxy()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/getEventID()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gnu/trove/THashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getOperation()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/isInitialized()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getSharedDataView()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/doUnlockForPrimary()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPutDML(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/createAndInsertColumnBatch(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getServerProxy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setLockingPolicy(com.gemstone.gemfire.internal.cache.locks.LockingPolicy)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/KeyWithRegionContext/setRegionContext(com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///com/gemstone/gemfire/cache/Operation/isCreate()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/doLockForPrimary(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getConcurrencyChecksEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setEntryLastModified(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/checkRegionDestroyedOnBucket(com.gemstone.gemfire.internal.cache.BucketRegion,boolean,com.gemstone.gemfire.cache.RegionDestroyedException)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getEventTime(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/removeAndNotifyKeys(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setEventId(com.gemstone.gemfire.internal.cache.EventID)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataView(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/KeyWithRegionContext/afterDeserializationWithValue(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/addKeysAndVersions(com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/operationStart()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/create(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.cache.Operation,java.lang.Object,java.lang.Object,java.lang.Object,boolean,com.gemstone.gemfire.distributed.DistributedMember,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/waitUntilLocked(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPutAllOperation(com.gemstone.gemfire.internal.cache.DistributedPutAllOperation)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/isInternalRegion()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ha/ThreadIdentifier/ThreadIdentifier(byte%5B%5D,long)|",
      "|java+method:///com/gemstone/gemfire/LogWriter/info(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/gemstone/gemfire/internal/snappy/UMMMemoryTracker/UMMMemoryTracker(long,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getTailKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/getKey()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getConcurrencyChecksEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/getTXState(com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///java/lang/Object/hashCode()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EventID/getThreadID()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setOriginRemote(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/LogWriter/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/invokePutCallbacks(com.gemstone.gemfire.internal.cache.EnumListenerEvent,com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/isSnapshot()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException/PutAllPartialResultException(com.gemstone.gemfire.internal.cache.PutAllPartialResultException$PutAllPartialResult)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/checkForColumnBatchCreation()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/UMMMemoryTracker/freeMemory()|",
      "|java+method:///com/gemstone/gemfire/cache/client/internal/InternalPool/getReadTimeout()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/releaseStorageMemory(java.lang.String,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/recordPutAllStart(com.gemstone.gemfire.internal.cache.ha.ThreadIdentifier)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/addKeyAndVersion(java.lang.Object,com.gemstone.gemfire.internal.cache.versions.VersionTag)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getVersionTag()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setBufferedMemoryTracker(com.gemstone.gemfire.internal.snappy.UMMMemoryTracker)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/putEntryOnRemote(com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean,java.lang.Object,boolean,boolean,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/checkReadiness()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLogger()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getBatchUUID()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/operationCompleted()|",
      "|java+method:///java/lang/Thread/getId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setFetchFromHDFS(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getInitializedBucketForId(java.lang.Object,java.lang.Integer)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/setTailKey(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/setUseFakeEventId(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/makeSerializedNewValue()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/findVersionTagForClientPutAll(com.gemstone.gemfire.internal.cache.EventID)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/PutAllPartialResultException$PutAllPartialResult(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getSharedDataView()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/isSnappyStore()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getDistributionManagerId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EventID/getMembershipID()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/hasFailure()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPossibleDuplicate(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setTXState(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/getLockingPolicy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/getEventFromEntry(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.BucketRegion,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,int,java.lang.Object,com.gemstone.gemfire.internal.cache.DistributedPutAllOperation$PutAllEntryData%5B%5D,boolean,com.gemstone.gemfire.internal.cache.tier.sockets.ClientProxyMembershipID,boolean,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/LogWriter/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getAttributes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/checkForColumnBatchCreation(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///java/lang/Exception/getCause()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InternalDataView/postPutAll(com.gemstone.gemfire.internal.cache.DistributedPutAllOperation,com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList,com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/UMMMemoryTracker/getFirstAllocationObject()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/createAndInsertColumnBatch(com.gemstone.gemfire.internal.cache.TXStateInterface,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateInterface/getTXStateForWrite()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/saveFailedKey(java.lang.Object,java.lang.Exception)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/DistributedPutAllOperation(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.EntryEventImpl,int,boolean,com.gemstone.gemfire.internal.cache.DistributedPutAllOperation$PutAllEntryData%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/invokeColumnStorePutCallbacks(com.gemstone.gemfire.internal.cache.BucketRegion,com.gemstone.gemfire.internal.cache.EntryEventImpl%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getDataView(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setContext(com.gemstone.gemfire.internal.cache.tier.sockets.ClientProxyMembershipID)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/getValue()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/keyRequiresRegionContext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ForceReattemptException/setHash(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/release()|",
      "|java+method:///com/gemstone/gemfire/cache/client/internal/ServerRegionProxy/getPool()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceReattemptException/ForceReattemptException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/CallbackFactoryProvider/getStoreCallbacks()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceReattemptException/ForceReattemptException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/freeOffHeapResources()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/VersionedObjectList(int,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/InternalDataView/putEntryOnRemote(com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean,java.lang.Object,boolean,boolean,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/hasServerProxy()|",
      "|java+method:///java/util/Arrays/toString(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/getEventID()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gnu/trove/THashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getOperation()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/isInitialized()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getSharedDataView()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/doUnlockForPrimary()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPutDML(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getServerProxy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setLockingPolicy(com.gemstone.gemfire.internal.cache.locks.LockingPolicy)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/KeyWithRegionContext/setRegionContext(com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///com/gemstone/gemfire/cache/Operation/isCreate()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/doLockForPrimary(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getConcurrencyChecksEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setEntryLastModified(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/checkRegionDestroyedOnBucket(com.gemstone.gemfire.internal.cache.BucketRegion,boolean,com.gemstone.gemfire.cache.RegionDestroyedException)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getEventTime(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/removeAndNotifyKeys(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setEventId(com.gemstone.gemfire.internal.cache.EventID)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataView(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/KeyWithRegionContext/afterDeserializationWithValue(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/addKeysAndVersions(com.gemstone.gemfire.internal.cache.tier.sockets.VersionedObjectList)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/isInternalColumnTable()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/operationStart()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/create(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.cache.Operation,java.lang.Object,java.lang.Object,java.lang.Object,boolean,com.gemstone.gemfire.distributed.DistributedMember,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/waitUntilLocked(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPutAllOperation(com.gemstone.gemfire.internal.cache.DistributedPutAllOperation)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/isInternalRegion()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ha/ThreadIdentifier/ThreadIdentifier(byte%5B%5D,long)|",
      "|java+method:///com/gemstone/gemfire/LogWriter/info(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/gemstone/gemfire/internal/snappy/UMMMemoryTracker/UMMMemoryTracker(long,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getTailKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/getKey()|",
      "|java+method:///com/gemstone/gemfire/cache/RegionAttributes/getConcurrencyChecksEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/partitioned/PutAllPRMessage/getTXState(com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///java/lang/Object/hashCode()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EventID/getThreadID()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setOriginRemote(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/LogWriter/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/invokePutCallbacks(com.gemstone.gemfire.internal.cache.EnumListenerEvent,com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/isSnapshot()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException/PutAllPartialResultException(com.gemstone.gemfire.internal.cache.PutAllPartialResultException$PutAllPartialResult)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/UMMMemoryTracker/freeMemory()|",
      "|java+method:///com/gemstone/gemfire/cache/client/internal/InternalPool/getReadTimeout()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/releaseStorageMemory(java.lang.String,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/recordPutAllStart(com.gemstone.gemfire.internal.cache.ha.ThreadIdentifier)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/tier/sockets/VersionedObjectList/addKeyAndVersion(java.lang.Object,com.gemstone.gemfire.internal.cache.versions.VersionTag)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/getVersionTag()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getDataStore()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setBufferedMemoryTracker(com.gemstone.gemfire.internal.snappy.UMMMemoryTracker)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/putEntryOnRemote(com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,boolean,java.lang.Object,boolean,boolean,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLogger()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/checkReadiness()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/operationCompleted()|",
      "|java+method:///java/lang/Thread/getId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setFetchFromHDFS(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegionDataStore/getInitializedBucketForId(java.lang.Object,java.lang.Integer)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation$PutAllEntryData/setTailKey(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedPutAllOperation/setUseFakeEventId(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/makeSerializedNewValue()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/findVersionTagForClientPutAll(com.gemstone.gemfire.internal.cache.EventID)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PutAllPartialResultException$PutAllPartialResult/PutAllPartialResultException$PutAllPartialResult(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getSharedDataView()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/isSnappyStore()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getDistributionManagerId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EventID/getMembershipID()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "io.snappydata:gemfire-trove:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/TXRegionState/TXRegionState(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.TXState)|",
    "called": "|java+constructor:///com/gemstone/gnu/trove/TIntArrayList/TIntArrayList()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withPersistence()|",
      "|java+method:///com/gemstone/gemfire/cache/Scope/isGlobal()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ImageState/addPendingTXRegionState(com.gemstone.gemfire.internal.cache.TXRegionState)|",
      "|java+constructor:///com/gemstone/gnu/trove/TIntArrayList/TIntArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getScope()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/EvictionAction/isOverflowToDisk()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getTxEntryExpirationReadLock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/THashMapWithCreate(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getFullPath()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isInitialized()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getEvictionAttributes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getImageState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isEntryExpiryPossible()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isDestroyed()|",
      "|java+method:///com/gemstone/gemfire/cache/EvictionAttributes/getAction()|",
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withReplication()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getPersistBackup()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getDataPolicy()|",
      "|java+constructor:///com/gemstone/gemfire/cache/TransactionDataRebalancedException/TransactionDataRebalancedException(java.lang.String,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isEntryEvictionPossible()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withPersistence()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ImageState/addPendingTXRegionState(com.gemstone.gemfire.internal.cache.TXRegionState)|",
      "|java+constructor:///com/gemstone/gnu/trove/TIntArrayList/TIntArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getScope()|",
      "|java+constructor:///java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/cache/EvictionAction/isOverflowToDisk()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getTxEntryExpirationReadLock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/THashMapWithCreate(int)|",
      "|java+method:///com/gemstone/gemfire/cache/Scope/isGlobal()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ImageState/unlockPendingTXRegionStates(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getFullPath()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isInitialized()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getEvictionAttributes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getImageState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isEntryExpiryPossible()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isDestroyed()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ImageState/lockPendingTXRegionStates(boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/EvictionAttributes/getAction()|",
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withReplication()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getPersistBackup()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getDataPolicy()|",
      "|java+constructor:///com/gemstone/gemfire/cache/TransactionDataRebalancedException/TransactionDataRebalancedException(java.lang.String,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isEntryEvictionPossible()|"
    ],
    "affectedLib": "io.snappydata:gemfire-trove:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/applyPendingTXOps()|",
    "called": "|java+method:///com/gemstone/gnu/trove/TIntArrayList/clear()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/release()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/lock()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/create(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.cache.Operation,java.lang.Object,java.lang.Object,java.lang.Object,boolean,com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/applyPendingOperation(java.lang.Object,int,com.gemstone.gemfire.internal.cache.TXRegionState,com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,java.lang.Boolean,com.gemstone.gemfire.internal.cache.AbstractOperationMessage)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setTXState(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/clear()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getCache()|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getEntryString(java.lang.Object,boolean)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/util/ArrayList/get(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/unlock()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/getQuick(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isUsedForPartitionedRegionBucket()|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/clear()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getPartitionedRegion()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/release()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/lock()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/create(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.cache.Operation,java.lang.Object,java.lang.Object,java.lang.Object,boolean,com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/applyPendingOperation(java.lang.Object,int,com.gemstone.gemfire.internal.cache.TXRegionState,com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.EntryEventImpl,boolean,java.lang.Boolean,com.gemstone.gemfire.internal.cache.AbstractOperationMessage)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setPutDML(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EntryEventImpl/setTXState(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/ArrayList/clear()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getCache()|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getEntryString(java.lang.Object,boolean)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/util/ArrayList/get(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/unlock()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/getQuick(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isUsedForPartitionedRegionBucket()|",
      "|java+method:///com/gemstone/gnu/trove/TIntArrayList/clear()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getPartitionedRegion()|"
    ],
    "affectedLib": "io.snappydata:gemfire-trove:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$IndexRecoveryTask/run()|",
    "called": "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/checkFailure()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getOplogIndex()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/isJVMFailureError(java.lang.Error)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/getAllLocalIndexes(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/writeIndexCreate(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/clearInitRecoveryMap()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/recoverIndexes(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/accountMemoryForIndex(long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$2600(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$2500(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/writeIRF(java.util.List,java.util.HashSet,java.util.Set,java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$2400(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/markIndexRecoveryDone()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getTargetRegionsForIndexes(java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/waitForJobs(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskInitFile()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/compareAndSet(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/getIndexContainer()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/waitForAsyncIndexRecovery(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/set(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/initiateFailure(java.lang.Error)|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getIndexFileIfValid(boolean)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/SortedIndexRecoveryJob(com.gemstone.gemfire.internal.cache.GemFireCacheImpl,com.gemstone.gemfire.internal.cache.DiskStoreImpl,com.gemstone.gemfire.CancelCriterion,com.gemstone.gemfire.internal.cache.SortedIndexContainer)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getUUID()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/needsKrf()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/submitLastJob()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/irfCreate(long)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/OplogIndex/recoverIndexes(java.util.Map)|",
      "|java+constructor:///com/gemstone/gemfire/cache/DiskAccessException/DiskAccessException(java.lang.Throwable)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/checkFailure()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getOplogIndex()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/isJVMFailureError(java.lang.Error)|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/getAllLocalIndexes(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/writeIndexCreate(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/clearInitRecoveryMap()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/recoverIndexes(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/accountMemoryForIndex(long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$2500(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/util/HashSet/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/writeIRF(java.util.List,io.snappydata.collection.OpenHashSet,java.util.Set,java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$2400(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getSortedLiveEntries(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/markIndexRecoveryDone()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$2300(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getTargetRegionsForIndexes(java.util.Set)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/waitForJobs(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskInitFile()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/compareAndSet(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/getIndexContainer()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/waitForAsyncIndexRecovery(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/set(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/initiateFailure(java.lang.Error)|",
      "|java+constructor:///com/gemstone/gnu/trove/THashSet/THashSet(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getIndexFileIfValid(boolean)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/SortedIndexRecoveryJob(com.gemstone.gemfire.internal.cache.GemFireCacheImpl,com.gemstone.gemfire.internal.cache.DiskStoreImpl,com.gemstone.gemfire.CancelCriterion,com.gemstone.gemfire.internal.cache.SortedIndexContainer)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexContainer/getUUID()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/needsKrf()|",
      "|java+constructor:///com/gemstone/gnu/trove/THashMap/THashMap()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/SortedIndexRecoveryJob/submitLastJob()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/irfCreate(long)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/OplogIndex/recoverIndexes(java.util.Map)|",
      "|java+constructor:///com/gemstone/gemfire/cache/DiskAccessException/DiskAccessException(java.lang.Throwable)|"
    ],
    "affectedLib": "io.snappydata:gemfire-trove:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/UnsharedImageState/addPendingTXRegionState(com.gemstone.gemfire.internal.cache.TXRegionState)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/putIfAbsent(java.lang.Object,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/putIfAbsent(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTransactionId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getTXState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isProfileExchanged()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/UnsharedImageState/unlockPendingTXRegionStates(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/UnsharedImageState/lockPendingTXRegionStates(boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getLogWriterI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/fail(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/putIfAbsent(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTransactionId()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getTXState()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isProfileExchanged()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getLogWriterI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/fail(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:gemfire-trove:1.6.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/destroyMember(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,boolean,java.lang.String)|",
    "called": "|java+constructor:///com/gemstone/org/jgroups/stack/IpAddress/IpAddress(java.net.InetAddress,int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/getViewNumber()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getIpAddress()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/addShunnedMember(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+constructor:///com/gemstone/org/jgroups/stack/IpAddress/IpAddress(java.net.InetAddress,int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/contains(java.lang.Object)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager$3/JGroupMembershipManager$3(com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,com.gemstone.gemfire.distributed.internal.direct.DirectChannel,java.lang.String)|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isShunned(com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getPort()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/NetView/NetView(com.gemstone.gemfire.distributed.internal.membership.NetView,long)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/remove(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/getViewNumber()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getIpAddress()|",
      "|java+method:///java/lang/Thread/start()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/lang/Thread/setName(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/addShunnedMember(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+constructor:///com/gemstone/org/jgroups/stack/IpAddress/IpAddress(java.net.InetAddress,int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager$3/JGroupMembershipManager$3(com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,com.gemstone.gemfire.distributed.internal.direct.DirectChannel,java.lang.String)|",
      "|java+method:///java/lang/Thread/setDaemon(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isShunned(com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getPort()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/NetView/NetView(com.gemstone.gemfire.distributed.internal.membership.NetView,long)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/contains(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:gemfire-jgroups:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/createChannel(com.gemstone.gemfire.i18n.LogWriterI18n,com.gemstone.gemfire.i18n.LogWriterI18n,com.gemstone.gemfire.internal.admin.remote.RemoteTransportConfig,com.gemstone.gemfire.distributed.internal.DistributionConfig)|",
    "called": "|java+constructor:///com/gemstone/org/jgroups/JChannel/JChannel(java.lang.String,com.gemstone.org.jgroups.spi.GFBasicAdapter,com.gemstone.org.jgroups.spi.GFPeerAdapter,boolean,boolean)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/connect(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/View/getMembers()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/isMcastDiscovery()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/locatorsString()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/GFJGBasicAdapter/GFJGBasicAdapter()|",
      "|java+constructor:///com/gemstone/org/jgroups/JChannel/JChannel(java.lang.String,com.gemstone.org.jgroups.spi.GFBasicAdapter,com.gemstone.org.jgroups.spi.GFPeerAdapter,boolean,boolean)|",
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///java/lang/Exception/getCause()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/replaceStrings(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/GemFireTracer/setSecurityLogWriter(com.gemstone.org.jgroups.util.GFLogWriter)|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/DistributionLocatorId/getPort()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/getMcastId()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getProtocolStack()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/viewToMemberView(com.gemstone.org.jgroups.View)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getEnableNetworkPartitionDetection()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMembershipPortRange()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMemberTimeout()|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean,java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/ViewId/getId()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/close()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager$Puller/JGroupMembershipManager$Puller(com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUdpRecvBufferSize()|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/gemstone/org/jgroups/util/GemFireTracer/setLogWriter(com.gemstone.org.jgroups.util.GFLogWriter,boolean)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUdpSendBufferSize()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getView()|",
      "|java+method:///java/util/Vector/size()|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/getResourceAsStream(java.lang.Class,java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/GFJGPeerAdapter/GFJGPeerAdapter(com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager,com.gemstone.gemfire.distributed.internal.DMStats)|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/DistributionLocatorId/getHost()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/setOpt(int,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getStartLocator()|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/direct/DirectChannel/setMembershipSize(int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUdpFragmentSize()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastRecvBufferSize()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/isMcastEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/printProtocolSpec(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/FlowControlParams/getRechargeThreshold()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastSendBufferSize()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/setReceiver(com.gemstone.org.jgroups.Receiver)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/DistributionException/DistributionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/setDebugJGroups(boolean)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getLocators()|",
      "|java+method:///com/gemstone/org/jgroups/stack/ProtocolStack/findProtocol(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/GemFireConfigException/GemFireConfigException(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/InternalGemFireError/InternalGemFireError(java.lang.String)|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+constructor:///com/gemstone/gemfire/GemFireConfigException/GemFireConfigException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///com/gemstone/org/jgroups/util/GemFireTracer/getLog(java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/distributed/Locator/hasLocators()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/isTcpDisabled()|",
      "|java+method:///com/gemstone/org/jgroups/View/getVid()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastTtl()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/infoEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionManager/printView(com.gemstone.gemfire.distributed.internal.membership.NetView)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/FlowControlParams/getRechargeBlockMs()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastFlowControl()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/getLatest()|",
      "|java+method:///java/lang/StringBuilder/append(float)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/FlowControlParams/getByteAllowance()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/connect(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/View/getMembers()|",
      "|java+method:///java/net/InetAddress/getHostAddress()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/isMcastDiscovery()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/locatorsString()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/GFJGBasicAdapter/GFJGBasicAdapter()|",
      "|java+constructor:///com/gemstone/org/jgroups/JChannel/JChannel(java.lang.String,com.gemstone.org.jgroups.spi.GFBasicAdapter,com.gemstone.org.jgroups.spi.GFPeerAdapter,boolean,boolean)|",
      "|java+method:///java/io/BufferedReader/close()|",
      "|java+method:///java/lang/Exception/getCause()|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/replaceStrings(java.lang.String,java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/GemFireTracer/setSecurityLogWriter(com.gemstone.org.jgroups.util.GFLogWriter)|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/DistributionLocatorId/getPort()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/getMcastId()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getProtocolStack()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/viewToMemberView(com.gemstone.org.jgroups.View)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getEnableNetworkPartitionDetection()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMembershipPortRange()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMemberTimeout()|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean,java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/ViewId/getId()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/close()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager$Puller/JGroupMembershipManager$Puller(com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUdpRecvBufferSize()|",
      "|java+method:///java/lang/String/valueOf(boolean)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/gemstone/org/jgroups/util/GemFireTracer/setLogWriter(com.gemstone.org.jgroups.util.GFLogWriter,boolean)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUdpSendBufferSize()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getView()|",
      "|java+method:///java/util/Vector/size()|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/getResourceAsStream(java.lang.Class,java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/membership/jgroup/GFJGPeerAdapter/GFJGPeerAdapter(com.gemstone.gemfire.distributed.internal.membership.jgroup.JGroupMembershipManager,com.gemstone.gemfire.distributed.internal.DMStats)|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/DistributionLocatorId/getHost()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/setOpt(int,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getStartLocator()|",
      "|java+method:///java/lang/Integer/toString(int)|",
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/direct/DirectChannel/setMembershipSize(int)|",
      "|java+method:///java/io/File/exists()|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUdpFragmentSize()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastRecvBufferSize()|",
      "|java+method:///java/lang/StringBuilder/append(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/isMcastEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/printProtocolSpec(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/FlowControlParams/getRechargeThreshold()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastSendBufferSize()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/setReceiver(com.gemstone.org.jgroups.Receiver)|",
      "|java+constructor:///java/io/InputStreamReader/InputStreamReader(java.io.InputStream)|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/DistributionException/DistributionException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/setDebugJGroups(boolean)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getLocators()|",
      "|java+method:///com/gemstone/org/jgroups/stack/ProtocolStack/findProtocol(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/GemFireConfigException/GemFireConfigException(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/InternalGemFireError/InternalGemFireError(java.lang.String)|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+constructor:///com/gemstone/gemfire/GemFireConfigException/GemFireConfigException(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///java/io/BufferedReader/BufferedReader(java.io.Reader)|",
      "|java+method:///java/io/BufferedReader/readLine()|",
      "|java+method:///com/gemstone/org/jgroups/util/GemFireTracer/getLog(java.lang.Class)|",
      "|java+method:///com/gemstone/gemfire/distributed/Locator/hasLocators()|",
      "|java+method:///com/gemstone/gemfire/internal/admin/remote/RemoteTransportConfig/isTcpDisabled()|",
      "|java+method:///com/gemstone/org/jgroups/View/getVid()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastTtl()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/infoEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionManager/printView(com.gemstone.gemfire.distributed.internal.membership.NetView)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/FlowControlParams/getRechargeBlockMs()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMcastFlowControl()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/io/FileInputStream/FileInputStream(java.io.File)|",
      "|java+method:///java/lang/String/valueOf(long)|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/getLatest()|",
      "|java+method:///java/lang/StringBuilder/append(float)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/FlowControlParams/getByteAllowance()|",
      "|java+method:///java/lang/String/valueOf(int)|"
    ],
    "affectedLib": "io.snappydata:gemfire-jgroups:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/addShunnedMember(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
    "called": "|java+constructor:///com/gemstone/org/jgroups/stack/IpAddress/IpAddress(java.net.InetAddress,int)|",
    "v1Body": [
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/HashSet/iterator()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getIpAddress()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///com/gemstone/org/jgroups/stack/IpAddress/IpAddress(java.net.InetAddress,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/endShun(com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isShunned(com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/destroyMember(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,boolean,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getPort()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/contains(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///java/util/Map/remove(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/util/concurrent/ConcurrentHashMap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/HashSet/iterator()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getIpAddress()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///java/util/HashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+constructor:///com/gemstone/org/jgroups/stack/IpAddress/IpAddress(java.net.InetAddress,int)|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/endShun(com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isShunned(com.gemstone.gemfire.distributed.DistributedMember)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/destroyMember(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,boolean,java.lang.String)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getPort()|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/entrySet()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/remove(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/NetView/contains(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:gemfire-jgroups:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/getChannelStates(com.gemstone.gemfire.distributed.DistributedMember,boolean)|",
    "called": "|java+method:///com/gemstone/org/jgroups/JChannel/getMulticastState()|",
    "v1Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/direct/DirectChannel/getChannelStates(com.gemstone.gemfire.internal.tcp.Stub,java.util.HashMap)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getMulticastState()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/direct/DirectChannel/getChannelStates(com.gemstone.gemfire.internal.tcp.Stub,java.util.HashMap)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getMulticastState()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///java/util/HashMap/put(java.lang.Object,java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:gemfire-jgroups:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/send(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember%5B%5D,com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.gemfire.distributed.internal.DistributionStats)|",
    "called": "|java+method:///com/gemstone/org/jgroups/protocols/UNICAST/getNumberOfUnackedMessages()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/directChannelSend(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember%5B%5D,com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.gemfire.distributed.internal.DistributionStats)|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/put(int,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/flushUnicast()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/endMsgSerialization(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/org/jgroups/Message/getLength()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/DistributedSystemDisconnectedException/DistributedSystemDisconnectedException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/containsKey(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isForceUDPCommunications()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/org/jgroups/Message/copy(boolean)|",
      "|java+method:///com/gemstone/org/jgroups/View/getMembers()|",
      "|java+method:///com/gemstone/org/jgroups/Message/setDest(com.gemstone.org.jgroups.Address)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/startMsgSerialization()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getView()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMember/getAddress()|",
      "|java+method:///java/lang/Throwable/initCause(java.lang.Throwable)|",
      "|java+method:///java/util/Vector/size()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getLocalAddress()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/isConnected()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/send(com.gemstone.org.jgroups.Message)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/forAll()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/sendViaJGroups()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getDisableTcp()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/createJGMessage(com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.org.jgroups.Address,short)|",
      "|java+method:///java/lang/Object/wait(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Vector/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getNetMember()|",
      "|java+method:///com/gemstone/gemfire/internal/util/Breadcrumbs/setProblem(java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/ChannelClosedException/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/getView()|",
      "|java+method:///com/gemstone/org/jgroups/Event/getArg()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/incSentBytes(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finer(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/stack/IpAddress/getVersionOrdinal()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/getMulticast()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finerEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Vector/elementAt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setSender(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///com/gemstone/org/jgroups/protocols/UNICAST/getNumberOfUnackedMessages()|",
      "|java+method:///java/util/Collections/shuffle(java.util.List)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gnu/trove/TIntObjectHashMap/get(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/DistributedMembershipListener/membershipFailure(java.lang.String,java.lang.Throwable)|",
      "|java+constructor:///com/gemstone/gnu/trove/TIntObjectHashMap/TIntObjectHashMap()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setBreadcrumbsInSender()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/directChannelSend(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember%5B%5D,com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.gemfire.distributed.internal.DistributionStats)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/flushUnicast()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/endMsgSerialization(long)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/org/jgroups/Message/getLength()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/DistributedSystemDisconnectedException/DistributedSystemDisconnectedException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/isForceUDPCommunications()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/org/jgroups/Message/copy(boolean)|",
      "|java+method:///com/gemstone/org/jgroups/View/getMembers()|",
      "|java+method:///com/gemstone/org/jgroups/Message/setDest(com.gemstone.org.jgroups.Address)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/startMsgSerialization()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getView()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMember/getAddress()|",
      "|java+method:///java/lang/Throwable/initCause(java.lang.Throwable)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/justPut(int,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Vector/size()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/getLocalAddress()|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/get(int)|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/isConnected()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/send(com.gemstone.org.jgroups.Message)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/forAll()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/sendViaJGroups()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/lang/Throwable/getCause()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getDisableTcp()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/createJGMessage(com.gemstone.gemfire.distributed.internal.DistributionMessage,com.gemstone.org.jgroups.Address,short)|",
      "|java+method:///java/lang/Object/wait(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/Vector/contains(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getNetMember()|",
      "|java+method:///com/gemstone/gemfire/internal/util/Breadcrumbs/setProblem(java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/ChannelClosedException/getCause()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/contains(int)|",
      "|java+method:///io/snappydata/collection/IntObjectHashMap/withExpectedSize(int)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/getView()|",
      "|java+method:///com/gemstone/org/jgroups/Event/getArg()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionStats/incSentBytes(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finer(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/stack/IpAddress/getVersionOrdinal()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/getMulticast()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/finerEnabled()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Vector/elementAt(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setSender(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember)|",
      "|java+method:///com/gemstone/org/jgroups/protocols/UNICAST/getNumberOfUnackedMessages()|",
      "|java+method:///java/util/Collections/shuffle(java.util.List)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/DistributedMembershipListener/membershipFailure(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionMessage/setBreadcrumbsInSender()|"
    ],
    "affectedLib": "io.snappydata:gemfire-jgroups:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMembershipManager/waitForChannelState(com.gemstone.gemfire.distributed.DistributedMember,java.util.HashMap)|",
    "called": "|java+method:///com/gemstone/org/jgroups/JChannel/waitForMulticastState(com.gemstone.org.jgroups.Address,long)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMember/getAddress()|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/waitForMulticastState(com.gemstone.org.jgroups.Address,long)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getNetMember()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/direct/DirectChannel/waitForChannelState(com.gemstone.gemfire.internal.tcp.Stub,java.util.HashMap)|",
      "|java+constructor:///java/lang/InterruptedException/InterruptedException()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/HashMap/remove(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/jgroup/JGroupMember/getAddress()|",
      "|java+method:///java/lang/Thread/interrupted()|",
      "|java+method:///java/util/HashMap/remove(java.lang.Object)|",
      "|java+method:///java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///com/gemstone/org/jgroups/JChannel/waitForMulticastState(com.gemstone.org.jgroups.Address,long)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getNetMember()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/direct/DirectChannel/waitForChannelState(com.gemstone.gemfire.internal.tcp.Stub,java.util.HashMap)|",
      "|java+constructor:///java/lang/InterruptedException/InterruptedException()|"
    ],
    "affectedLib": "io.snappydata:gemfire-jgroups:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/DiskStoreImpl(com.gemstone.gemfire.cache.Cache,java.lang.String,com.gemstone.gemfire.internal.cache.DiskStoreAttributes,boolean,com.gemstone.gemfire.internal.cache.InternalRegionArguments,boolean,boolean,boolean,boolean,boolean,boolean)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/getDeletedIndexIds()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getSyncWrites()|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue(int)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getAllowForceCompaction()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskDirs()|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOffline()|",
      "|java+method:///java/util/HashSet/removeAll(java.util.Collection)|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor/ThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getWriteBufferSize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$OplogCompactor/access$000(com.gemstone.gemfire.internal.cache.DiskStoreImpl$OplogCompactor)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getAllowForceCompaction()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock/readLock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskInitFile()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getTimeInterval()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/loadFiles(boolean)|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/getDistributedSystem()|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor/ThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/persistIndexes(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getCompactionThreshold()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getMaxOplogSizeInBytes()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceableLinkedBlockingQueue/ForceableLinkedBlockingQueue()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getName()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getQueueSize()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/InternalResourceManager/addResourceListener(com.gemstone.gemfire.internal.cache.control.InternalResourceManager$ResourceType,com.gemstone.gemfire.internal.cache.control.ResourceListener)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isValidating()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getAutoCompact()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getResourceManager()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreStats/DiskStoreStats(com.gemstone.gemfire.StatisticsFactory,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/validateAndAdjust()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///com/gemstone/gemfire/internal/LogWriterImpl/createThreadGroup(java.lang.String,com.gemstone.gemfire.i18n.LogWriterI18n)|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isCompactionPossible()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/getCreatedIndexIds()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentHashSet/ConcurrentHashSet()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$OplogCompactor/DiskStoreImpl$OplogCompactor(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/OverflowOplogSet/OverflowOplogSet(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PersistentOplogSet/PersistentOplogSet(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemfireCacheHelper/CreateThreadFactory(java.lang.ThreadGroup,java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getQueueSize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getDiskDirSizes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getAutoCompact()|",
      "|java+method:///java/util/concurrent/ThreadPoolExecutor/allowCoreThreadTimeOut(boolean)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DirectoryHolder/DirectoryHolder(java.lang.String,com.gemstone.gemfire.StatisticsFactory,java.io.File,long,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getDiskDirs()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy/ThreadPoolExecutor$CallerRunsPolicy()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$Stopper/DiskStoreImpl$Stopper(com.gemstone.gemfire.internal.cache.DiskStoreImpl,com.gemstone.gemfire.internal.cache.DiskStoreImpl$1)|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock/writeLock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceableLinkedBlockingQueue/ForceableLinkedBlockingQueue(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/startAsyncFlusher()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskDirSizes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/calcCompactionThreshold(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOfflineCompacting()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/getDeletedIndexIds()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getSyncWrites()|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/getDistributedSystem()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getAllowForceCompaction()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskDirs()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOffline()|",
      "|java+method:///java/util/HashSet/removeAll(java.util.Collection)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getWriteBufferSize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$OplogCompactor/access$000(com.gemstone.gemfire.internal.cache.DiskStoreImpl$OplogCompactor)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getAllowForceCompaction()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock/readLock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskInitFile()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getTimeInterval()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/loadFiles(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/persistIndexes(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getCompactionThreshold()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskBlockSortManager/DiskBlockSortManager()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getMaxOplogSizeInBytes()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceableLinkedBlockingQueue/ForceableLinkedBlockingQueue()|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getName()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getQueueSize()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/InternalResourceManager/addResourceListener(com.gemstone.gemfire.internal.cache.control.InternalResourceManager$ResourceType,com.gemstone.gemfire.internal.cache.control.ResourceListener)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isValidating()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getAutoCompact()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getResourceManager()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreStats/DiskStoreStats(com.gemstone.gemfire.StatisticsFactory,java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/validateAndAdjust()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///com/gemstone/gemfire/cache/Cache/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isCompactionPossible()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskInitFile/getCreatedIndexIds()|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentHashSet/ConcurrentHashSet()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$OplogCompactor/DiskStoreImpl$OplogCompactor(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/OverflowOplogSet/OverflowOplogSet(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PersistentOplogSet/PersistentOplogSet(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getQueueSize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getDiskDirSizes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getAutoCompact()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DirectoryHolder/DirectoryHolder(java.lang.String,com.gemstone.gemfire.StatisticsFactory,java.io.File,long,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreAttributes/getDiskDirs()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$Stopper/DiskStoreImpl$Stopper(com.gemstone.gemfire.internal.cache.DiskStoreImpl,com.gemstone.gemfire.internal.cache.DiskStoreImpl$1)|",
      "|java+method:///java/util/concurrent/locks/ReentrantReadWriteLock/writeLock()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ForceableLinkedBlockingQueue/ForceableLinkedBlockingQueue(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/startAsyncFlusher()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getDiskDirSizes()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/calcCompactionThreshold(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOfflineCompacting()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/TombstoneService$TombstoneSweeper(com.gemstone.gemfire.internal.cache.GemFireCacheImpl,java.util.Queue,long,boolean,java.util.concurrent.atomic.AtomicLong)|",
    "called": "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+constructor:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/StoppableReentrantLock(com.gemstone.gemfire.CancelCriterion)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+constructor:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/StoppableReentrantLock(com.gemstone.gemfire.CancelCriterion)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$FactoryStatics/init()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/isUsingGemFireXDEntryPoint()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$FactoryStatics/initGFXDCallbacks(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXEntryState/getFactory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/getFactory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/access$100()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion$RawValueFactory/getFactory()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/getLatest()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/forName(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/isUsingGemFireXDEntryPoint()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/TXEntryState/getFactory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/getFactory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/access$200()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion$RawValueFactory/getFactory()|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/getLatest()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$FactoryStatics/initGFXDCallbacks(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/access$202(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/ClassPathLoader/forName(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/isUsingGemFireXDEntryPoint()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/status(java.lang.String%5B%5D)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/cache/Status/shortStatus()|",
    "v1Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/getStopOptions(java.lang.String%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/getStatus()|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher$Status/shortStatus()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/equalsIgnoreCase(java.lang.String)|",
      "|java+method:///java/io/PrintStream/println(java.lang.String)|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/getStopOptions(java.lang.String%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/getStatus()|",
      "|java+method:///java/lang/System/exit(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Status/shortStatus()|",
      "|java+method:///java/io/PrintStream/println(java.lang.Object)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/admin/jmx/internal/AgentLauncher/nativeReadStatus()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/cache/Status/isExistingProcess(int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/admin/jmx/internal/AgentLauncher/readStatus()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/isExistingProcess(int)|",
      "|java+method:///com/gemstone/gemfire/admin/jmx/internal/AgentLauncher/createStatus(com.gemstone.gemfire.admin.jmx.internal.AgentLauncher$Status,int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/admin/jmx/internal/AgentLauncher/readStatus()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Status/isExistingProcess(int)|",
      "|java+method:///com/gemstone/gemfire/admin/jmx/internal/AgentLauncher/createStatus(com.gemstone.gemfire.admin.jmx.internal.AgentLauncher$Status,int)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/preblow(com.gemstone.gemfire.internal.cache.Oplog$OplogFile,long)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/NativeCalls/preBlow(java.lang.String,long,boolean)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/isSnappyStore()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DirectoryHolder/getAvailableSpace()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/closeAndDeleteAfterEx(java.io.IOException,com.gemstone.gemfire.internal.cache.Oplog$OplogFile)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/NativeCalls/getInstance()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getName()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/isAccessor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/gemstone/gemfire/internal/InsufficientDiskSpaceException/InsufficientDiskSpaceException(java.lang.String,java.lang.Throwable,com.gemstone.gemfire.cache.DiskStore)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/NativeCalls/preBlow(java.lang.String,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getDefaultDiskStoreName()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/isSnappyStore()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DirectoryHolder/getAvailableSpace()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/closeAndDeleteAfterEx(java.io.IOException,com.gemstone.gemfire.internal.cache.Oplog$OplogFile)|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/NativeCalls/getInstance()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getName()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/isAccessor()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/gemstone/gemfire/internal/InsufficientDiskSpaceException/InsufficientDiskSpaceException(java.lang.String,java.lang.Throwable,com.gemstone.gemfire.cache.DiskStore)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/NativeCalls/preBlow(java.lang.String,long,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getDefaultDiskStoreName()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOfflineCompacting()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+initializer:///com/gemstone/gemfire/internal/cache/TXManagerImpl/TXManagerImpl$initializer|",
    "called": "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int,int)|",
    "v1Body": [
      "|java+constructor:///java/util/WeakHashMap/WeakHashMap()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///java/util/EnumSet/of(java.lang.Enum)|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+constructor:///java/lang/ThreadLocal/ThreadLocal()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/WeakHashMap/WeakHashMap()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+method:///java/util/EnumSet/of(java.lang.Enum)|",
      "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int,int)|",
      "|java+method:///java/lang/Runtime/availableProcessors()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+constructor:///java/lang/ThreadLocal/ThreadLocal()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+initializer:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/DiskStoreImpl$initializer|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
    "v1Body": [
      "|java+constructor:///java/lang/ThreadLocal/ThreadLocal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getServerInstance()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/persistence/BytesAndBits/BytesAndBits(java.nio.ByteBuffer,byte)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getSystemPropertyNamePrefix()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/ThreadLocal/ThreadLocal()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/persistence/BytesAndBits/BytesAndBits(java.nio.ByteBuffer,byte)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getSystemPropertyNamePrefix()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/parseOffHeapMemorySize(java.lang.String)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
    "v1Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/parseLongWithUnits(java.lang.String,long,int)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/String/length()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+initializer:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/GemFireCacheImpl$initializer|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+constructor:///java/lang/ThreadLocal/ThreadLocal()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/System/setProperty(java.lang.String,java.lang.String)|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "v2Body": [
      "|java+constructor:///java/lang/ThreadLocal/ThreadLocal()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getServerInstance()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///java/lang/System/setProperty(java.lang.String,java.lang.String)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/expireBatch()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/drainTo(java.lang.Object%5B%5D)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withPersistence()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getWaitingThreadPool()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/pruneOldExceptions()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getDistributionManager()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper$1/TombstoneService$TombstoneSweeper$1(com.gemstone.gemfire.internal.cache.TombstoneService$TombstoneSweeper,java.util.Set,java.util.Map)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getRegionVersion()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getVersionVector()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getDiskRegion()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getRegionMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getTombstoneService()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService/getGCBlockCount()|",
      "|java+method:///java/util/concurrent/CountDownLatch/countDown()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getDataPolicy()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getMemberID()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskRegion/writeRVVGC(com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionEntry/getKeyCopy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionMap/removeTombstone(com.gemstone.gemfire.internal.cache.RegionEntry,com.gemstone.gemfire.internal.cache.versions.VersionHolder,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/recordGCVersion(com.gemstone.gemfire.internal.cache.versions.VersionSource,long,com.gemstone.gemfire.internal.cache.EntryEventImpl)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getVersionVector()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isUsedForPartitionedRegionBucket()|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getSize()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/cache/DataPolicy/withPersistence()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/getWaitingThreadPool()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/pruneOldExceptions()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getDistributionManager()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper$1/TombstoneService$TombstoneSweeper$1(com.gemstone.gemfire.internal.cache.TombstoneService$TombstoneSweeper,java.util.Set,java.util.Map)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getRegionVersion()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getVersionVector()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getDiskRegion()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getRegionMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getTombstoneService()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService/getGCBlockCount()|",
      "|java+method:///java/util/concurrent/CountDownLatch/countDown()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DistributedRegion/getDataPolicy()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getMemberID()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskRegion/writeRVVGC(com.gemstone.gemfire.internal.cache.LocalRegion)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionEntry/getKeyCopy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionMap/removeTombstone(com.gemstone.gemfire.internal.cache.RegionEntry,com.gemstone.gemfire.internal.cache.versions.VersionHolder,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/RegionVersionVector/recordGCVersion(com.gemstone.gemfire.internal.cache.versions.VersionSource,long,com.gemstone.gemfire.internal.cache.EntryEventImpl)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getVersionVector()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/isUsedForPartitionedRegionBucket()|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/drainTo(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getSize()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/createOffHeapStorage(com.gemstone.gemfire.LogWriter,com.gemstone.gemfire.StatisticsFactory,long,com.gemstone.gemfire.distributed.DistributedSystem)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
    "v1Body": [
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/calcMaxSlabSize(long)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/parseLongWithUnits(java.lang.String,long,int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/OffHeapStorage(com.gemstone.gemfire.StatisticsFactory)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/SimpleMemoryAllocatorImpl/create(com.gemstone.gemfire.internal.offheap.OutOfOffHeapMemoryListener,com.gemstone.gemfire.internal.offheap.OffHeapMemoryStats,com.gemstone.gemfire.LogWriter,int,long,long)|",
      "|java+constructor:///com/gemstone/gemfire/internal/offheap/OffHeapStorage$DisconnectingOutOfOffHeapMemoryListener/OffHeapStorage$DisconnectingOutOfOffHeapMemoryListener(com.gemstone.gemfire.distributed.internal.InternalDistributedSystem)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/calcSlabCount(long,long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/validateVmCompatibility()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/calcMaxSlabSize(long)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/OffHeapStorage(com.gemstone.gemfire.StatisticsFactory)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/SimpleMemoryAllocatorImpl/create(com.gemstone.gemfire.internal.offheap.OutOfOffHeapMemoryListener,com.gemstone.gemfire.internal.offheap.OffHeapMemoryStats,com.gemstone.gemfire.LogWriter,int,long,long)|",
      "|java+constructor:///com/gemstone/gemfire/internal/offheap/OffHeapStorage$DisconnectingOutOfOffHeapMemoryListener/OffHeapStorage$DisconnectingOutOfOffHeapMemoryListener(com.gemstone.gemfire.distributed.internal.InternalDistributedSystem)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/calcSlabCount(long,long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/validateVmCompatibility()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/GemFireCacheImpl(boolean,com.gemstone.gemfire.cache.client.PoolFactory,com.gemstone.gemfire.distributed.DistributedSystem,com.gemstone.gemfire.internal.cache.CacheConfig)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/addResourceListener(com.gemstone.gemfire.distributed.internal.ResourceEventsListener)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isHadoopGfxdLonerMode()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getVMIdAdvisor()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+method:///java/util/Collections/synchronizedMap(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$FactoryStatics/init()|",
      "|java+method:///java/util/Properties/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/getExecutionPoolSize(boolean)|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$Stopper/GemFireCacheImpl$Stopper(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+constructor:///java/util/concurrent/CopyOnWriteArraySet/CopyOnWriteArraySet()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/xmlcache/CacheXmlPropertyResolver/CacheXmlPropertyResolver(boolean,int,java.util.Properties)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getLogWriterI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getVmKind()|",
      "|java+method:///com/gemstone/gemfire/internal/jndi/JNDIInvoker/mapTransactions()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheLifecycleListener/cacheCreated(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/CallbackFactoryProvider/getStoreCallbacks()|",
      "|java+method:///com/gemstone/gemfire/cache/client/PoolManager/getAll()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/ResourceAdvisor/createResourceAdvisor(com.gemstone.gemfire.distributed.internal.DistributionAdvisee)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/VMIdAdvisor/handshake()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/PooledExecutorWithDMStats/PooledExecutorWithDMStats(java.util.concurrent.BlockingQueue,int,com.gemstone.gemfire.distributed.internal.PoolStatHelper,java.util.concurrent.ThreadFactory,int,java.util.concurrent.RejectedExecutionHandler)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference()|",
      "|java+constructor:///com/gemstone/gemfire/management/internal/beans/ManagementListener/ManagementListener()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/persistence/PersistentMemberManager/PersistentMemberManager(com.gemstone.gemfire.i18n.LogWriterI18n)|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getConfig()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/clearTXState()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getServerInstance()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUserDefinedProps()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/CFactory/createAI()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getEnableTimeStatistics()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService/initialize(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/InternalResourceManager/addResourceListener(com.gemstone.gemfire.internal.cache.control.InternalResourceManager$ResourceType,com.gemstone.gemfire.internal.cache.control.ResourceListener)|",
      "|java+constructor:///com/gemstone/gemfire/cache/hdfs/internal/hoplog/HDFSFlushQueueFunction/HDFSFlushQueueFunction()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/pdx/internal/TypeRegistry/open()|",
      "|java+constructor:///com/gemstone/gemfire/cache/hdfs/internal/hoplog/HDFSForceCompactionFunction/HDFSForceCompactionFunction()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getDistributedMember()|",
      "|java+constructor:///com/gemstone/gemfire/cache/hdfs/internal/hoplog/HDFSLastCompactionTimeFunction/HDFSLastCompactionTimeFunction()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/CFactory/createCM()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$3/GemFireCacheImpl$3(com.gemstone.gemfire.internal.cache.GemFireCacheImpl,java.lang.ThreadGroup)|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getResourceManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getHeapEvictor()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/HeapBufferAllocator/instance()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getOffHeapStore()|",
      "|java+method:///com/gemstone/gemfire/internal/GemFireVersion/isEnterpriseEdition()|",
      "|java+method:///com/gemstone/gemfire/internal/LogWriterImpl/createThreadGroup(java.lang.String,com.gemstone.gemfire.i18n.LogWriterI18n)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ExpirationScheduler/ExpirationScheduler(com.gemstone.gemfire.distributed.internal.InternalDistributedSystem)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/snapshotEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheConfig/getPdxSerializer()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/InternalResourceManager/createResourceManager(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TXManagerImpl/TXManagerImpl(com.gemstone.gemfire.internal.cache.CachePerfStats,com.gemstone.gemfire.i18n.LogWriterI18n,com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/FunctionService/registerFunction(com.gemstone.gemfire.cache.execute.Function)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EventTracker/startTrackerServices(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/pdx/internal/TypeRegistry/init()|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/addMembershipListener(com.gemstone.gemfire.distributed.internal.MembershipListener)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/CachePerfStats/CachePerfStats(com.gemstone.gemfire.StatisticsFactory)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/createSerialNumber()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getSystem()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/initReliableMessageQueueFactory()|",
      "|java+constructor:///java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/locks/ExclusiveSharedSynchronizer/initProperties()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getOffHeapEvictor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isClient()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRContainsValueFunction/PRContainsValueFunction()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMemorySize()|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy/ThreadPoolExecutor$CallerRunsPolicy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CachePerfStats/getEventPoolHelper()|",
      "|java+constructor:///com/gemstone/gemfire/management/internal/JmxManagerAdvisee/JmxManagerAdvisee(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/management/internal/JmxManagerAdvisor/createJmxManagerAdvisor(com.gemstone.gemfire.distributed.internal.DistributionAdvisee)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/basicSetPdxSerializer(com.gemstone.gemfire.pdx.PdxSerializer)|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionManager/getDMType()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/startOldEntryCleanerService()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/isOperationNode()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/getStoragePoolSize(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/parseOffHeapMemorySize(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ha/HARegionQueue/setMessageSyncInterval(int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isHadoopGfxdLonerMode()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getVMIdAdvisor()|",
      "|java+method:///java/lang/Class/forName(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+method:///java/util/Collections/synchronizedMap(java.util.Map)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$FactoryStatics/init()|",
      "|java+method:///java/util/Properties/isEmpty()|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor/ThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/getExecutionPoolSize(boolean)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$Stopper/GemFireCacheImpl$Stopper(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+constructor:///java/util/concurrent/CopyOnWriteArraySet/CopyOnWriteArraySet()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/xmlcache/CacheXmlPropertyResolver/CacheXmlPropertyResolver(boolean,int,java.util.Properties)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)|",
      "|java+method:///java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class%5B%5D)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getLogWriterI18n()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getInternalProductCallbacks()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/membership/InternalDistributedMember/getVmKind()|",
      "|java+method:///com/gemstone/gemfire/internal/jndi/JNDIInvoker/mapTransactions()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheLifecycleListener/cacheCreated(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue(int)|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/CallbackFactoryProvider/getStoreCallbacks()|",
      "|java+method:///com/gemstone/gemfire/cache/client/PoolManager/getAll()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/ResourceAdvisor/createResourceAdvisor(com.gemstone.gemfire.distributed.internal.DistributionAdvisee)|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor/ThreadPoolExecutor(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler)|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/addResourceListener(com.gemstone.gemfire.distributed.internal.ResourceEventsListener)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/VMIdAdvisor/handshake()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+constructor:///com/gemstone/gemfire/distributed/internal/PooledExecutorWithDMStats/PooledExecutorWithDMStats(java.util.concurrent.BlockingQueue,int,com.gemstone.gemfire.distributed.internal.PoolStatHelper,java.util.concurrent.ThreadFactory,int,java.util.concurrent.RejectedExecutionHandler)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicReference/AtomicReference()|",
      "|java+method:///java/lang/Math/max(int,int)|",
      "|java+constructor:///com/gemstone/gemfire/management/internal/beans/ManagementListener/ManagementListener()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/persistence/PersistentMemberManager/PersistentMemberManager(com.gemstone.gemfire.i18n.LogWriterI18n)|",
      "|java+method:///java/util/Collections/emptySet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getConfig()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/clearTXState()|",
      "|java+constructor:///java/util/LinkedHashSet/LinkedHashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getUserDefinedProps()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getEnableTimeStatistics()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService/initialize(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/InternalResourceManager/addResourceListener(com.gemstone.gemfire.internal.cache.control.InternalResourceManager$ResourceType,com.gemstone.gemfire.internal.cache.control.ResourceListener)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
      "|java+constructor:///com/gemstone/gemfire/cache/hdfs/internal/hoplog/HDFSFlushQueueFunction/HDFSFlushQueueFunction()|",
      "|java+method:///java/util/Map/isEmpty()|",
      "|java+method:///com/gemstone/gemfire/pdx/internal/TypeRegistry/open()|",
      "|java+constructor:///com/gemstone/gemfire/cache/hdfs/internal/hoplog/HDFSForceCompactionFunction/HDFSForceCompactionFunction()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getDistributedMember()|",
      "|java+constructor:///com/gemstone/gemfire/cache/hdfs/internal/hoplog/HDFSLastCompactionTimeFunction/HDFSLastCompactionTimeFunction()|",
      "|java+method:///java/util/Collections/emptyList()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$3/GemFireCacheImpl$3(com.gemstone.gemfire.internal.cache.GemFireCacheImpl,java.lang.ThreadGroup)|",
      "|java+constructor:///java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getResourceManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getHeapEvictor()|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/HeapBufferAllocator/instance()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getOffHeapStore()|",
      "|java+method:///com/gemstone/gemfire/internal/GemFireVersion/isEnterpriseEdition()|",
      "|java+method:///com/gemstone/gemfire/internal/LogWriterImpl/createThreadGroup(java.lang.String,com.gemstone.gemfire.i18n.LogWriterI18n)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/ExpirationScheduler/ExpirationScheduler(com.gemstone.gemfire.distributed.internal.InternalDistributedSystem)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/snapshotEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheConfig/getPdxSerializer()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/control/InternalResourceManager/createResourceManager(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TXManagerImpl/TXManagerImpl(com.gemstone.gemfire.internal.cache.CachePerfStats,com.gemstone.gemfire.i18n.LogWriterI18n,com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/cache/execute/FunctionService/registerFunction(com.gemstone.gemfire.cache.execute.Function)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/EventTracker/startTrackerServices(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/pdx/internal/TypeRegistry/init()|",
      "|java+constructor:///java/util/Date/Date()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DM/addMembershipListener(com.gemstone.gemfire.distributed.internal.MembershipListener)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemfireCacheHelper/createThreadFactory(java.lang.ThreadGroup,java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/CachePerfStats/CachePerfStats(com.gemstone.gemfire.StatisticsFactory)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionAdvisor/createSerialNumber()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getSystem()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/InternalDistributedSystem/getDistributionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/initReliableMessageQueueFactory()|",
      "|java+constructor:///java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/locks/ExclusiveSharedSynchronizer/initProperties()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getOffHeapEvictor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/isClient()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/PRContainsValueFunction/PRContainsValueFunction()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionConfig/getMemorySize()|",
      "|java+constructor:///java/util/concurrent/ThreadPoolExecutor$CallerRunsPolicy/ThreadPoolExecutor$CallerRunsPolicy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CachePerfStats/getEventPoolHelper()|",
      "|java+constructor:///com/gemstone/gemfire/management/internal/JmxManagerAdvisee/JmxManagerAdvisee(com.gemstone.gemfire.internal.cache.GemFireCacheImpl)|",
      "|java+method:///com/gemstone/gemfire/management/internal/JmxManagerAdvisor/createJmxManagerAdvisor(com.gemstone.gemfire.distributed.internal.DistributionAdvisee)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/basicSetPdxSerializer(com.gemstone.gemfire.pdx.PdxSerializer)|",
      "|java+method:///java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/gemstone/gemfire/distributed/internal/DistributionManager/getDMType()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/startOldEntryCleanerService()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl$StaticSystemCallbacks/isOperationNode()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/snappy/StoreCallbacks/getStoragePoolSize(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/ha/HARegionQueue/setMessageSyncInterval(int)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/hasExpiredTombstone(com.gemstone.gemfire.internal.cache.LocalRegion,com.gemstone.gemfire.internal.cache.RegionEntry,com.gemstone.gemfire.internal.cache.versions.VersionTag)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/iterator()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getEntryVersion()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionEntry/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/VersionTag/getEntryVersion()|",
      "|java+method:///java/util/Set/iterator()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getEntryVersion()|",
      "|java+method:///java/lang/Object/equals(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/iterator()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/versions/VersionTag/getEntryVersion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionEntry/getKey()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/CacheServerLauncher(java.lang.String)|",
    "called": "|java+constructor:///com/gemstone/gemfire/internal/shared/LauncherBase/LauncherBase(java.lang.String,java.lang.String)|",
    "v1Body": [
      "|java+method:///java/net/InetAddress/getLocalHost()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/SocketCreator/getLocalHost()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/getBaseName(java.lang.String)|",
      "|java+method:///java/net/InetAddress/getCanonicalHostName()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/isThriftDefault()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "v2Body": [
      "|java+constructor:///com/gemstone/gemfire/internal/shared/LauncherBase/LauncherBase(java.lang.String,java.lang.String)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CacheServerLauncher/initKnownOptions()|",
      "|java+constructor:///io/snappydata/collection/OpenHashSet/OpenHashSet()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/run()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/add(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/CachePerfStats/setReplicatedTombstonesSize(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/freeMemory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionMap/removeTombstone(com.gemstone.gemfire.internal.cache.RegionEntry,com.gemstone.gemfire.internal.cache.versions.VersionHolder,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/unlock()|",
      "|java+method:///java/util/Queue/size()|",
      "|java+method:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/lock()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getEntryVersion()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/cancelInProgress()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getRegionMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionMap/isTombstoneNotNeeded(com.gemstone.gemfire.internal.cache.RegionEntry,int)|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/checkFailure()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/cacheTimeMillis()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/initiateFailure(java.lang.Error)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/severe(com.gemstone.org.jgroups.util.StringId,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/Object/wait(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/Runtime/totalMemory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CachePerfStats/setNonReplicatedTombstonesSize(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/processBatch()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getVersionTimeStamp()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///java/util/Queue/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCachePerfStats()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getSize()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CachePerfStats/setReplicatedTombstonesSize(long)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Throwable)|",
      "|java+method:///java/lang/Runtime/freeMemory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionMap/removeTombstone(com.gemstone.gemfire.internal.cache.RegionEntry,com.gemstone.gemfire.internal.cache.versions.VersionHolder,boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/size()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getSize()|",
      "|java+method:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/lock()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getEntryVersion()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/addAndGet(long)|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/iterator()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/cancelInProgress()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getRegionMap()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionMap/isTombstoneNotNeeded(com.gemstone.gemfire.internal.cache.RegionEntry,int)|",
      "|java+method:///java/util/Queue/iterator()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/checkFailure()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/cacheTimeMillis()|",
      "|java+method:///java/lang/Runtime/getRuntime()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/add(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/SystemFailure/initiateFailure(java.lang.Error)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/severe(com.gemstone.org.jgroups.util.StringId,java.lang.Throwable)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/lang/Object/wait(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/get()|",
      "|java+method:///java/lang/Runtime/totalMemory()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/CachePerfStats/setNonReplicatedTombstonesSize(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/processBatch()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///java/lang/Runtime/maxMemory()|",
      "|java+method:///java/util/Queue/poll()|",
      "|java+method:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/unlock()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$Tombstone/getVersionTimeStamp()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/info(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCachePerfStats()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/release()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/iterator()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTXRegionStatesSnap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/getLocalTXState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getInternalEntryMap()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXEntryState/release()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/getHostedTransactionsInProgress()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/getOrCreateTXContext()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/THashMapWithCreate/values()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXState/getTXRegionStatesSnap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/getLocalTXState()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/rollback(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl$TXContext/clearTXStateAll()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXStateProxy/isClosed()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXRegionState/getInternalEntryMap()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXEntryState/release()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/setTXState(com.gemstone.gemfire.internal.cache.TXStateInterface,com.gemstone.gemfire.internal.cache.TXManagerImpl$TXContext)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/getHostedTransactionsInProgress()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/calcMaxSlabSize(long)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/offheap/OffHeapStorage/parseLongWithUnits(java.lang.String,long,int)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parseMemorySize(java.lang.String,long,int)|",
      "|java+method:///java/lang/String/equals(java.lang.Object)|",
      "|java+method:///java/lang/System/getProperty(java.lang.String)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/DiskStoreImpl$OplogCompactor/DiskStoreImpl$OplogCompactor(com.gemstone.gemfire.internal.cache.DiskStoreImpl)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/access$1900()|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog/Oplog(long,com.gemstone.gemfire.internal.cache.DirectoryHolder,com.gemstone.gemfire.internal.cache.Oplog)|",
    "called": "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCancelCriterion()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/createCrf(com.gemstone.gemfire.internal.cache.Oplog)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DirectoryHolder/getAvailableSpace()|",
      "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/OplogIndex/OplogIndex(com.gemstone.gemfire.internal.cache.Oplog)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PersistentOplogSet/getPrefix()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warningEnabled()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$OpState/Oplog$OpState(com.gemstone.gemfire.internal.cache.Oplog,com.gemstone.gemfire.internal.cache.Oplog$1)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$KRFile/Oplog$KRFile(com.gemstone.gemfire.internal.cache.Oplog$1)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$OplogFile/Oplog$OplogFile()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getName()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/createDrf(com.gemstone.gemfire.internal.cache.Oplog)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DirectoryHolder/getDir()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/setMaxCrfDrfSize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getDataVersionIfOld()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/krfFileCreate()|",
      "|java+constructor:///com/gemstone/gemfire/cache/DiskAccessException/DiskAccessException(java.lang.String,com.gemstone.gemfire.cache.DiskStore)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOfflineCompacting()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getMaxOplogSizeInBytes()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getCancelCriterion()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean()|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/createCrf(com.gemstone.gemfire.internal.cache.Oplog)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+constructor:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/ConcurrentTHashSet(int)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/OplogIndex/OplogIndex(com.gemstone.gemfire.internal.cache.Oplog)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PersistentOplogSet/getPrefix()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warningEnabled()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$OpState/Oplog$OpState(com.gemstone.gemfire.internal.cache.Oplog,com.gemstone.gemfire.internal.cache.Oplog$1)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/locks/ReentrantLock/ReentrantLock()|",
      "|java+constructor:///java/io/File/File(java.io.File,java.lang.String)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$KRFile/Oplog$KRFile(com.gemstone.gemfire.internal.cache.Oplog$1)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getParent()|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/Oplog$OplogFile/Oplog$OplogFile()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///java/util/concurrent/ConcurrentHashMap/ConcurrentHashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getName()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/createDrf(com.gemstone.gemfire.internal.cache.Oplog)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DirectoryHolder/getAvailableSpace()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DirectoryHolder/getDir()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/setMaxCrfDrfSize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/getDataVersionIfOld()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/krfFileCreate()|",
      "|java+constructor:///com/gemstone/gemfire/cache/DiskAccessException/DiskAccessException(java.lang.String,com.gemstone.gemfire.cache.DiskStore)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/Oplog/close()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/isOfflineCompacting()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/DiskStoreImpl/getMaxOplogSizeInBytes()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/store/WrappedBytes/toString()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/toString(java.nio.ByteBuffer)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/store/WrappedBytes/getBufferRetain()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/toString(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/toString(java.nio.ByteBuffer)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/store/WrappedBytes/getBuffer()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/lruUpdateCallback()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/unsafe/UnsafeHolder/monitorExit(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_isOwnerALocalRegion()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUStatistics/incEvictions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUEntry/getKeyCopy()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/centralizedLruUpdateCallback(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getCache()|",
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/EnableLRU/getEvictionAlgorithm()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/EnableLRU/mustEvict(com.gemstone.gemfire.internal.cache.lru.LRUStatistics,com.gemstone.gemfire.cache.Region,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/resume(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/sizeInVM()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/evictEntry(com.gemstone.gemfire.internal.cache.lru.LRUEntry,com.gemstone.gemfire.internal.cache.lru.LRUStatistics)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_getLruList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUEntry/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getCallbackDisabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUStatistics/getCounter()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getDelta()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/getLRUEntry()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getPartitionedRegion()|",
      "|java+method:///com/gemstone/gemfire/cache/EvictionAlgorithm/isLRUHeap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/EnableLRU/afterEviction()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getLimit()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_getCCHelper()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/internalSuspend()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_getOwner()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getSortedBuckets()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/getExpensiveListCount()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/debugLogging(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/stats()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/resetThreadLocals()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/changeTotalEntrySize(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getTombstoneCount()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getTotalEntrySize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object%5B%5D,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/incEvictions(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionClearedException/getCause()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCacheTransactionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUStatistics/getEvictions()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/centralizedLruUpdateCallback(boolean,boolean)|",
      "|java+method:///com/gemstone/gemfire/CancelCriterion/checkCancelInProgress(java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_isOwnerALocalRegion()|",
      "|java+method:///java/util/ArrayList/size()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUStatistics/incEvictions()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUEntry/getKeyCopy()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/unsafe/UnsafeHolder/monitorExit(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getCache()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/appendEntry(com.gemstone.gemfire.internal.cache.lru.LRUClockNode)|",
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/EnableLRU/getEvictionAlgorithm()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/EnableLRU/mustEvict(com.gemstone.gemfire.internal.cache.lru.LRUStatistics,com.gemstone.gemfire.cache.Region,int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/resume(com.gemstone.gemfire.internal.cache.TXStateInterface)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/sizeInVM()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getBucketAdvisor()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/evictEntry(com.gemstone.gemfire.internal.cache.lru.LRUEntry,com.gemstone.gemfire.internal.cache.lru.LRUStatistics)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_getLruList()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUEntry/getKey()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getCallbackDisabled()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUStatistics/getCounter()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getDelta()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/getPartitionedRegion()|",
      "|java+method:///com/gemstone/gemfire/cache/EvictionAlgorithm/isLRUHeap()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/EnableLRU/afterEviction()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getLimit()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_getCCHelper()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/internalSuspend()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/_getOwner()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/getLRUEntry(java.util.List)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/PartitionedRegion/getSortedBuckets()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/getExpensiveListCount()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/debugLogging(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/NewLRUClockHand/stats()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketAdvisor/isPrimary()|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/resetThreadLocals()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/changeTotalEntrySize(int)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/LocalRegion/getTombstoneCount()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/AbstractLRURegionMap/getTotalEntrySize()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCancelCriterion()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getLoggerI18n()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/warning(com.gemstone.org.jgroups.util.StringId,java.lang.Object%5B%5D,java.lang.Throwable)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/BucketRegion/incEvictions(long)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/RegionClearedException/getCause()|",
      "|java+method:///java/util/ArrayList/get(int)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/GemFireCacheImpl/getCacheTransactionManager()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/lru/LRUStatistics/getEvictions()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/processBatch()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/size()|",
    "v1Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/expireBatch()|",
      "|java+method:///java/util/Set/size()|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService$TombstoneSweeper/expireBatch()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/size()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/store/SerializedDiskBuffer/write(com.gemstone.gemfire.internal.shared.OutputStreamChannel,java.nio.ByteBuffer)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parkThreadForAsyncOperationIfRequired(com.gemstone.gemfire.internal.shared.StreamChannel,long,int)|",
    "v1Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/util/concurrent/locks/LockSupport/parkNanos(long)|",
      "|java+method:///java/nio/ByteBuffer/rewind()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/OutputStreamChannel/write(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///java/nio/ByteBuffer/position(int)|"
    ],
    "v2Body": [
      "|java+method:///java/nio/ByteBuffer/position()|",
      "|java+method:///java/nio/ByteBuffer/rewind()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/parkThreadForAsyncOperationIfRequired(com.gemstone.gemfire.internal.shared.StreamChannel,long,int)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/OutputStreamChannel/write(java.nio.ByteBuffer)|",
      "|java+method:///java/nio/ByteBuffer/hasRemaining()|",
      "|java+method:///java/nio/ByteBuffer/position(int)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl$TXContext/newContext()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/add(java.lang.Object)|",
    "v1Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TXManagerImpl$TXContext/TXManagerImpl$TXContext()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/access$100()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/ThreadLocal/set(java.lang.Object)|",
      "|java+constructor:///com/gemstone/gemfire/internal/cache/TXManagerImpl$TXContext/TXManagerImpl$TXContext()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/add(java.lang.Object)|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/access$100()|",
      "|java+method:///com/gemstone/gemfire/internal/cache/TXManagerImpl/access$200()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+method:///com/gemstone/gemfire/internal/cache/TombstoneService/toString()|",
    "called": "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/size()|",
    "v1Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/ConcurrentTHashSet/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/toString()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+constructor:///com/gemstone/gemfire/internal/tcp/Connection/Connection(com.gemstone.gemfire.distributed.internal.membership.MembershipManager,com.gemstone.gemfire.internal.tcp.ConnectionTable,boolean,com.gemstone.gemfire.internal.tcp.Stub,com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,boolean,boolean)|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/setKeepAliveOptionsServer(java.net.Socket,java.io.InputStream)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///com/gemstone/gemfire/internal/SocketCreator/connectForServer(java.net.InetAddress,int,com.gemstone.org.jgroups.util.GFLogWriter,int)|",
      "|java+method:///com/gemstone/gemfire/internal/concurrent/AL/getAndIncrement()|",
      "|java+method:///java/net/Socket/connect(java.net.SocketAddress,int)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean)|",
      "|java+method:///java/nio/channels/SocketChannel/socket()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/removeConnectingSocket(java.net.Socket)|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getId()|",
      "|java+method:///java/net/Socket/connect(java.net.SocketAddress)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/concurrent/locks/LockSupport/parkNanos(long)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/getConduit()|",
      "|java+method:///java/nio/channels/SocketChannel/connect(java.net.SocketAddress)|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///java/net/ConnectException/ConnectException(java.lang.String)|",
      "|java+method:///com/gemstone/gemfire/internal/SocketCreator/getDefaultInstance()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/useNIO()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setRemoteAddr(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,com.gemstone.gemfire.internal.tcp.Stub)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/useNIOStream()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setReceiveBufferSize(java.net.Socket,int)|",
      "|java+method:///java/net/ConnectException/initCause(java.lang.Throwable)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/getP2PConnectTimeout()|",
      "|java+constructor:///java/net/Socket/Socket()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setSocketBufferSize(java.net.Socket,boolean,int,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getCancelCriterion()|",
      "|java+constructor:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/StoppableReentrantLock(com.gemstone.gemfire.CancelCriterion)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setSendBufferSize(java.net.Socket)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/getLogger()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/nio/channels/SocketChannel/open()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/setKeepAliveOptionsServer(java.net.Socket,java.io.InputStream)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Stub/getPort()|",
      "|java+constructor:///com/gemstone/gemfire/internal/util/concurrent/ReentrantSemaphore/ReentrantSemaphore(int)|",
      "|java+method:///java/net/InetSocketAddress/getAddress()|",
      "|java+method:///java/net/Socket/setTcpNoDelay(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Stub/getInetAddress()|",
      "|java+method:///java/nio/channels/SocketChannel/configureBlocking(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/getSocket()|",
      "|java+method:///java/nio/channels/SocketChannel/finishConnect()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Stub/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/addConnectingSocket(java.net.Socket,java.net.InetAddress)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/SocketCreator/connectForServer(java.net.InetAddress,int,com.gemstone.org.jgroups.util.GFLogWriter,int)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong()|",
      "|java+constructor:///java/net/InetSocketAddress/InetSocketAddress(java.net.InetAddress,int)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString()|",
      "|java+constructor:///java/util/LinkedList/LinkedList()|",
      "|java+method:///java/net/Socket/connect(java.net.SocketAddress,int)|",
      "|java+method:///com/gemstone/gemfire/internal/Assert/assertTrue(boolean)|",
      "|java+method:///java/nio/channels/SocketChannel/socket()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/removeConnectingSocket(java.net.Socket)|",
      "|java+method:///java/lang/Thread/sleep(long)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getId()|",
      "|java+method:///java/net/Socket/connect(java.net.SocketAddress)|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fine(java.lang.String)|",
      "|java+method:///java/util/concurrent/locks/LockSupport/parkNanos(long)|",
      "|java+method:///java/lang/System/nanoTime()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicLong/AtomicLong(long)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/getConduit()|",
      "|java+method:///java/lang/Thread/currentThread()|",
      "|java+method:///java/lang/Thread/interrupt()|",
      "|java+constructor:///java/net/ConnectException/ConnectException(java.lang.String)|",
      "|java+method:///java/nio/channels/SocketChannel/connect(java.net.SocketAddress)|",
      "|java+method:///java/util/concurrent/atomic/AtomicLong/getAndIncrement()|",
      "|java+method:///com/gemstone/gemfire/internal/SocketCreator/getDefaultInstance()|",
      "|java+method:///com/gemstone/gemfire/i18n/LogWriterI18n/fineEnabled()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/useNIO()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setRemoteAddr(com.gemstone.gemfire.distributed.internal.membership.InternalDistributedMember,com.gemstone.gemfire.internal.tcp.Stub)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/useNIOStream()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setReceiveBufferSize(java.net.Socket,int)|",
      "|java+method:///java/net/ConnectException/initCause(java.lang.Throwable)|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/getP2PConnectTimeout()|",
      "|java+constructor:///java/net/Socket/Socket()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setSocketBufferSize(java.net.Socket,boolean,int,boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/TCPConduit/getCancelCriterion()|",
      "|java+constructor:///com/gemstone/gemfire/internal/util/concurrent/StoppableReentrantLock/StoppableReentrantLock(com.gemstone.gemfire.CancelCriterion)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/setSendBufferSize(java.net.Socket)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/getLogger()|",
      "|java+constructor:///java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)|",
      "|java+method:///com/gemstone/org/jgroups/util/StringId/toLocalizedString(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/nio/channels/SocketChannel/open()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/ClientSharedUtils/setKeepAliveOptionsServer(java.net.Socket,java.io.InputStream)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Stub/getPort()|",
      "|java+constructor:///com/gemstone/gemfire/internal/util/concurrent/ReentrantSemaphore/ReentrantSemaphore(int)|",
      "|java+method:///java/net/InetSocketAddress/getAddress()|",
      "|java+method:///java/net/Socket/setTcpNoDelay(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Stub/getInetAddress()|",
      "|java+method:///java/nio/channels/SocketChannel/configureBlocking(boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Connection/getSocket()|",
      "|java+method:///java/nio/channels/SocketChannel/finishConnect()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/Stub/toString()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///com/gemstone/gemfire/internal/tcp/ConnectionTable/addConnectingSocket(java.net.Socket,java.net.InetAddress)|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "io.snappydata:gemfire-core:1.5.6-rc1",
    "coordinatesV2": "io.snappydata:gemfire-core:1.6.1",
    "caller": "|java+initializer:///com/gemstone/gemfire/internal/cache/TombstoneService/TombstoneService$initializer|",
    "called": "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
    "v1Body": [
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+method:///java/lang/Boolean/getBoolean(java.lang.String)|",
      "|java+method:///java/lang/Long/longValue()|",
      "|java+method:///java/lang/Long/getLong(java.lang.String,long)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/Integer/getInteger(java.lang.String,int)|"
    ],
    "v2Body": [
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getServerInstance()|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getBoolean(java.lang.String,boolean)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getLong(java.lang.String,long)|",
      "|java+method:///com/gemstone/gemfire/internal/shared/SystemProperties/getInteger(java.lang.String,int)|",
      "|java+constructor:///java/lang/Object/Object()|"
    ],
    "affectedLib": "io.snappydata:gemfire-shared:1.6.1",
    "change": "UPDATED"
  }
]