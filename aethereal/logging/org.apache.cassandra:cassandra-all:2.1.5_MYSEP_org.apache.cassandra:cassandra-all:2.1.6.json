[
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/ColumnFamilyStore$Flush/run()|",
    "called": "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
    "v1Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/access$400()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/yammer/metrics/core/Counter/inc()|",
      "|java+method:///org/apache/cassandra/db/Memtable/isClean()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$Flush$1/ColumnFamilyStore$Flush$1(org.apache.cassandra.db.ColumnFamilyStore$Flush,org.apache.cassandra.utils.concurrent.OpOrder$Barrier,org.apache.cassandra.db.Memtable)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///com/google/common/util/concurrent/ListeningExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/replaceFlushed(org.apache.cassandra.db.Memtable,org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/OpOrder$Barrier/await()|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/OpOrder$Barrier/markBlocking()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/OpOrder$Barrier/issue()|",
      "|java+method:///java/util/concurrent/CountDownLatch/countDown()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/access$000(org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/markFlushing(org.apache.cassandra.db.Memtable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/OpOrder/newBarrier()|",
      "|java+method:///org/apache/cassandra/db/Memtable/flushRunnable()|",
      "|java+method:///org/apache/cassandra/db/Memtable/setDiscarded()|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/util/concurrent/CountDownLatch/countDown()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///com/yammer/metrics/core/Counter/inc()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/db/Memtable/isClean()|",
      "|java+method:///org/apache/cassandra/db/Memtable/flushRunnable()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore$Flush/reclaim(org.apache.cassandra.db.Memtable)|",
      "|java+method:///com/google/common/util/concurrent/ListeningExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/replaceFlushed(org.apache.cassandra.db.Memtable,org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/OpOrder$Barrier/await()|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/OpOrder$Barrier/markBlocking()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/access$000(org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/markFlushing(org.apache.cassandra.db.Memtable)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/compaction/Scrubber/scrub()|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/saveOutOfOrderRow(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.io.sstable.SSTableIdentityIterator)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(long)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry$Serializer/deserialize(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getFilePointer()|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/util/SortedSet/isEmpty()|",
      "|java+method:///org/apache/cassandra/utils/JVMStabilityInspector/inspectThrowable(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionController/close()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/length()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/abort()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableWriter/closeAndOpenReader(long)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/markCompactedSSTablesReplaced(java.util.Collection,java.util.Collection,org.apache.cassandra.db.compaction.OperationType)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/getCompactionInfo()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/util/SortedSet/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfFatal(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/db/compaction/LazilyCompactedRow/LazilyCompactedRow(org.apache.cassandra.db.compaction.CompactionController,java.util.List)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/debug(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/switchWriter(org.apache.cassandra.io.sstable.SSTableWriter)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/isEOF()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/readWithShortLength(java.io.DataInput)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/io/IOError/IOError(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getSSTableMetadata()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfCommutative(org.apache.cassandra.db.DecoratedKey,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getDataTracker()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/tryAppend(org.apache.cassandra.db.compaction.AbstractCompactedRow)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/decorateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/rowIndexEntrySerializer()|",
      "|java+method:///org/apache/cassandra/db/DataTracker/addSSTables(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/compareTo(org.apache.cassandra.db.RowPosition)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/createWriter(org.apache.cassandra.db.ColumnFamilyStore,java.io.File,int,long,org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/util/SortedSet/iterator()|",
      "|java+constructor:///org/apache/cassandra/db/compaction/CompactionInterruptedException/CompactionInterruptedException(org.apache.cassandra.db.compaction.CompactionInfo)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableRewriter/SSTableRewriter(org.apache.cassandra.db.ColumnFamilyStore,java.util.Set,long,boolean)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/getKey()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/finish(long)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/output(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableWriter/append(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableIdentityIterator/SSTableIdentityIterator(org.apache.cassandra.io.sstable.SSTableReader,org.apache.cassandra.io.util.RandomAccessReader,org.apache.cassandra.db.DecoratedKey,long,boolean)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/seek(long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/isStopRequested()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/saveOutOfOrderRow(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.io.sstable.SSTableIdentityIterator)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(long)|",
      "|java+method:///org/apache/cassandra/db/RowIndexEntry$Serializer/deserialize(java.io.DataInput,org.apache.cassandra.io.sstable.Descriptor$Version)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/nio/ByteBuffer/remaining()|",
      "|java+method:///java/util/SortedSet/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/seekToNextRow()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionController/close()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/length()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/abort()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableWriter/closeAndOpenReader(long)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/markCompactedSSTablesReplaced(java.util.Collection,java.util.Collection,org.apache.cassandra.db.compaction.OperationType)|",
      "|java+method:///java/nio/ByteBuffer/equals(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/getCompactionInfo()|",
      "|java+constructor:///java/io/IOException/IOException(java.lang.String)|",
      "|java+method:///java/util/SortedSet/size()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfFatal(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/db/compaction/LazilyCompactedRow/LazilyCompactedRow(org.apache.cassandra.db.compaction.CompactionController,java.util.List)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/debug(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/switchWriter(org.apache.cassandra.io.sstable.SSTableWriter)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getFilePointer()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/updateIndexKey()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/isEOF()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/readWithShortLength(java.io.DataInput)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+constructor:///java/io/IOError/IOError(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getSSTableMetadata()|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber/throwIfCommutative(org.apache.cassandra.db.DecoratedKey,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getDataTracker()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/tryAppend(org.apache.cassandra.db.compaction.AbstractCompactedRow)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/dht/IPartitioner/decorateKey(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/rowIndexEntrySerializer()|",
      "|java+method:///org/apache/cassandra/db/DataTracker/addSSTables(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/compareTo(org.apache.cassandra.db.RowPosition)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/createWriter(org.apache.cassandra.db.ColumnFamilyStore,java.io.File,int,long,org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///java/lang/StringBuilder/append(long)|",
      "|java+method:///java/util/SortedSet/iterator()|",
      "|java+constructor:///org/apache/cassandra/db/compaction/CompactionInterruptedException/CompactionInterruptedException(org.apache.cassandra.db.compaction.CompactionInfo)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableRewriter/SSTableRewriter(org.apache.cassandra.db.ColumnFamilyStore,java.util.Set,long,boolean)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/getKey()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/Collections/singletonList(java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableRewriter/finish(long)|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/output(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableWriter/append(org.apache.cassandra.db.DecoratedKey,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Collections/singleton(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/SSTableIdentityIterator/SSTableIdentityIterator(org.apache.cassandra.io.sstable.SSTableReader,org.apache.cassandra.io.util.RandomAccessReader,org.apache.cassandra.db.DecoratedKey,long,boolean)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/seek(long)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/compaction/Scrubber$ScrubInfo/isStopRequested()|",
      "|java+method:///org/apache/cassandra/utils/OutputHandler/warn(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/service/StorageService$4/runMayThrow()|",
    "called": "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/getNeighbors(java.lang.String,org.apache.cassandra.dht.Range,java.util.Collection,java.util.Collection)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/finishParentSession(java.util.UUID,java.util.Set,boolean)|",
      "|java+method:///org/apache/cassandra/repair/RepairSession/getId()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Iterables/addAll(java.util.Collection,java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService$Status/ordinal()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getValidColumnFamilies(boolean,boolean,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/cassandra/service/StorageService/access$200()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///org/apache/cassandra/repair/RepairSession/getRange()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/prepareForRepair(java.util.Set,java.util.Collection,java.util.List)|",
      "|java+method:///org/apache/cassandra/dht/Range/toString()|",
      "|java+method:///org/apache/cassandra/repair/RepairFuture/get()|",
      "|java+method:///org/apache/cassandra/service/StorageService/sendNotification(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/submitRepairSession(java.util.UUID,org.apache.cassandra.dht.Range,java.lang.String,org.apache.cassandra.repair.RepairParallelism,java.util.Set,java.lang.String%5B%5D)|",
      "|java+method:///java/util/concurrent/locks/Condition/await()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getValidColumnFamilies(boolean,boolean,java.lang.String,java.lang.String%5B%5D)|",
      "|java+method:///org/apache/cassandra/service/StorageService/access$300()|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/getNeighbors(java.lang.String,org.apache.cassandra.dht.Range,java.util.Collection,java.util.Collection)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/finishParentSession(java.util.UUID,java.util.Set,boolean)|",
      "|java+method:///org/apache/cassandra/repair/RepairSession/getId()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
      "|java+method:///java/util/Set/addAll(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Iterables/addAll(java.util.Collection,java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService$Status/ordinal()|",
      "|java+method:///java/lang/IllegalArgumentException/getMessage()|",
      "|java+method:///org/apache/cassandra/repair/RepairSession/getRange()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/util/concurrent/ExecutionException/getCause()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///java/lang/Throwable/getMessage()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/prepareForRepair(java.util.Set,java.util.Collection,java.util.List)|",
      "|java+method:///org/apache/cassandra/dht/Range/toString()|",
      "|java+method:///org/apache/cassandra/repair/RepairFuture/get()|",
      "|java+method:///org/apache/cassandra/service/StorageService/sendNotification(java.lang.String,java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+constructor:///org/apache/cassandra/service/StorageService$4$1/StorageService$4$1(org.apache.cassandra.service.StorageService$4)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/addListener(java.lang.Runnable,java.util.concurrent.Executor)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/submitRepairSession(java.util.UUID,org.apache.cassandra.dht.Range,java.lang.String,org.apache.cassandra.repair.RepairParallelism,java.util.Set,java.lang.String%5B%5D)|",
      "|java+method:///java/util/concurrent/locks/Condition/await()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///java/lang/Exception/getMessage()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/service/StorageService$RangeRelocator/calculateToFromStreams(java.util.Collection,java.util.List)|",
    "called": "|java+method:///com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Sets$SetView/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getPendingAddressRanges(org.apache.cassandra.locator.TokenMetadata,org.apache.cassandra.dht.Token,java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/dht/RangeStreamer/getWorkMap(com.google.common.collect.Multimap,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/dht/Range/contains(org.apache.cassandra.dht.Range)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///org/apache/cassandra/service/StorageService/access$700(org.apache.cassandra.service.StorageService)|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/cloneOnlyTokenMap()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getReplicationFactor()|",
      "|java+method:///org/apache/cassandra/streaming/StreamPlan/transferRanges(java.net.InetAddress,java.net.InetAddress,java.lang.String,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/service/StorageService/access$200()|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/collect/Multimap/keySet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/isAlive()|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/google/common/collect/Multimap/putAll(java.lang.Object,java.lang.Iterable)|",
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/cloneAfterAllSettled()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getPreferredIP(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getSortedListByProximity(java.net.InetAddress,java.util.Collection)|",
      "|java+method:///com/google/common/collect/Multimap/get(java.lang.Object)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRangesForEndpoint(java.lang.String,java.net.InetAddress)|",
      "|java+method:///com/google/common/collect/HashMultimap/create()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/calculateNaturalEndpoints(org.apache.cassandra.dht.Token,org.apache.cassandra.locator.TokenMetadata)|",
      "|java+method:///com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getReplicationStrategy()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getRangeAddresses(org.apache.cassandra.locator.TokenMetadata)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+method:///org/apache/cassandra/streaming/StreamPlan/requestRanges(java.net.InetAddress,java.net.InetAddress,java.lang.String,java.util.Collection)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/calculateStreamAndFetchRanges(java.util.Collection,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/getEndpointStateForEndpoint(java.net.InetAddress)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/isEnabled()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Sets$SetView/iterator()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///com/google/common/collect/Lists/newArrayList(java.lang.Object%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+constructor:///java/lang/IllegalStateException/IllegalStateException(java.lang.String)|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getPendingAddressRanges(org.apache.cassandra.locator.TokenMetadata,org.apache.cassandra.dht.Token,java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/dht/RangeStreamer/getWorkMap(com.google.common.collect.Multimap,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/dht/Range/contains(org.apache.cassandra.dht.Range)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/StorageService/access$800(org.apache.cassandra.service.StorageService)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/getBroadcastAddress()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Sets/newHashSet(java.lang.Iterable)|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/cloneOnlyTokenMap()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getReplicationFactor()|",
      "|java+method:///org/apache/cassandra/streaming/StreamPlan/transferRanges(java.net.InetAddress,java.net.InetAddress,java.lang.String,java.util.Collection)|",
      "|java+method:///java/lang/StringBuilder/append(int)|",
      "|java+method:///com/google/common/collect/Multimap/keySet()|",
      "|java+method:///org/apache/cassandra/service/StorageService/access$300()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/gms/EndpointState/isAlive()|",
      "|java+method:///com/google/common/collect/ArrayListMultimap/create()|",
      "|java+method:///java/util/Collection/isEmpty()|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///com/google/common/collect/Multimap/putAll(java.lang.Object,java.lang.Iterable)|",
      "|java+method:///java/util/Set/removeAll(java.util.Collection)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/locator/TokenMetadata/cloneAfterAllSettled()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getPreferredIP(java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/locator/IEndpointSnitch/getSortedListByProximity(java.net.InetAddress,java.util.Collection)|",
      "|java+method:///com/google/common/collect/Multimap/get(java.lang.Object)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/apache/cassandra/service/StorageService/getRangesForEndpoint(java.lang.String,java.net.InetAddress)|",
      "|java+method:///com/google/common/collect/HashMultimap/create()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/calculateNaturalEndpoints(org.apache.cassandra.dht.Token,org.apache.cassandra.locator.TokenMetadata)|",
      "|java+method:///com/google/common/collect/ImmutableSet/copyOf(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/difference(java.util.Set,java.util.Set)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getReplicationStrategy()|",
      "|java+method:///org/apache/cassandra/locator/AbstractReplicationStrategy/getRangeAddresses(org.apache.cassandra.locator.TokenMetadata)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getEndpointSnitch()|",
      "|java+method:///org/apache/cassandra/streaming/StreamPlan/requestRanges(java.net.InetAddress,java.net.InetAddress,java.lang.String,java.util.Collection)|",
      "|java+method:///com/google/common/collect/Multimap/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/StorageService/calculateStreamAndFetchRanges(java.util.Collection,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/getEndpointStateForEndpoint(java.net.InetAddress)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/cassandra/gms/Gossiper/isEnabled()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/service/ActiveRepairService/doAntiCompaction(java.util.UUID)|",
    "called": "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitAntiCompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,long)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService$ParentRepairSession/getAndReferenceSSTables(java.util.UUID)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/getParentRepairSession(java.util.UUID)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitAntiCompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,long)|",
      "|java+method:///com/google/common/util/concurrent/Futures/successfulAsList(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService$ParentRepairSession/getAndReferenceSSTables(java.util.UUID)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/getParentRepairSession(java.util.UUID)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///java/util/Map$Entry/getValue()|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/addListener(java.lang.Runnable,java.util.concurrent.Executor)|",
      "|java+method:///java/util/Map/entrySet()|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+constructor:///org/apache/cassandra/service/ActiveRepairService$2/ActiveRepairService$2(org.apache.cassandra.service.ActiveRepairService,java.util.UUID)|",
      "|java+method:///java/util/Map$Entry/getKey()|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/service/ActiveRepairService/finishParentSession(java.util.UUID,java.util.Set,boolean)|",
    "called": "|java+method:///com/google/common/util/concurrent/Futures/successfulAsList(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/repair/messages/AnticompactionRequest/createMessage()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+constructor:///org/apache/cassandra/repair/messages/AnticompactionRequest/AnticompactionRequest(java.util.UUID)|",
      "|java+method:///java/util/concurrent/ConcurrentMap/remove(java.lang.Object)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/waitOnFutures(java.lang.Iterable)|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/doAntiCompaction(java.util.UUID)|",
      "|java+method:///org/apache/cassandra/net/MessagingService/instance()|",
      "|java+method:///org/apache/cassandra/net/MessagingService/sendOneWay(org.apache.cassandra.net.MessageOut,java.net.InetAddress)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///com/google/common/util/concurrent/Futures/successfulAsList(java.lang.Iterable)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/repair/AnticompactionTask/run()|",
      "|java+method:///java/util/Set/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/removeParentRepairSession(java.util.UUID)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/doAntiCompaction(java.util.UUID)|",
      "|java+constructor:///org/apache/cassandra/repair/AnticompactionTask/AnticompactionTask(java.util.UUID,java.net.InetAddress,boolean)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/streaming/ConnectionHandler$MessageHandler/signalCloseDone()|",
    "called": "|java+method:///com/google/common/util/concurrent/SettableFuture/set(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/util/concurrent/SettableFuture/set(java.lang.Object)|",
      "|java+method:///java/net/Socket/close()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Throwable)|",
      "|java+method:///com/google/common/util/concurrent/SettableFuture/set(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/streaming/ConnectionHandler/access$000()|",
      "|java+method:///java/net/Socket/close()|",
      "|java+method:///java/util/concurrent/atomic/AtomicReference/get()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/cas(java.nio.ByteBuffer,java.lang.String,java.util.List,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/db/ColumnFamilyStore/ColumnFamilyStore$initializer|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///javax/management/openmbean/TabularType/TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getFlushWriters()|",
      "|java+constructor:///javax/management/openmbean/CompositeType/CompositeType(java.lang.String,java.lang.String,java.lang.String%5B%5D,java.lang.String%5B%5D,javax.management.openmbean.OpenType%5B%5D)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$14/ColumnFamilyStore$14()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$13/ColumnFamilyStore$13()|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///javax/management/openmbean/TabularType/TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getFlushWriters()|",
      "|java+constructor:///javax/management/openmbean/CompositeType/CompositeType(java.lang.String,java.lang.String,java.lang.String%5B%5D,java.lang.String%5B%5D,javax.management.openmbean.OpenType%5B%5D)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$11/ColumnFamilyStore$11()|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$12/ColumnFamilyStore$12()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/performAnticompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,long)|",
    "called": "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/io/sstable/metadata/IMetadataSerializer/mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)|",
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Refs/release(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/doAntiCompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,java.util.Collection,long)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/notifySSTableRepairedStatusChanged(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
      "|java+method:///org/apache/cassandra/dht/Range/contains(org.apache.cassandra.dht.Range)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getName()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getDataTracker()|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/unmarkCompacting(java.lang.Iterable)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Refs/release()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Refs/size()|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/getToken()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/reloadSSTableMetadata()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/dht/Range/normalize(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/dht/Range/intersects(org.apache.cassandra.dht.Range)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getSSTables()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getColumnFamilyName()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/io/sstable/Descriptor/getMetadataSerializer()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/io/sstable/metadata/IMetadataSerializer/mutateRepairedAt(org.apache.cassandra.io.sstable.Descriptor,long)|",
      "|java+method:///java/util/Iterator/remove()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Refs/release(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/doAntiCompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,java.util.Collection,long)|",
      "|java+constructor:///java/util/HashSet/HashSet()|",
      "|java+method:///java/util/Set/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/notifySSTableRepairedStatusChanged(java.util.Collection)|",
      "|java+method:///com/google/common/collect/Sets/union(java.util.Set,java.util.Set)|",
      "|java+method:///org/apache/cassandra/dht/Range/contains(org.apache.cassandra.dht.Range)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getName()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getDataTracker()|",
      "|java+constructor:///org/apache/cassandra/dht/Range/Range(org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.RingPosition,org.apache.cassandra.dht.IPartitioner)|",
      "|java+method:///org/apache/cassandra/db/DataTracker/unmarkCompacting(java.lang.Iterable)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Refs/release()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Refs/size()|",
      "|java+method:///org/apache/cassandra/db/DecoratedKey/getToken()|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/reloadSSTableMetadata()|",
      "|java+method:///java/util/Set/iterator()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/dht/Range/normalize(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/dht/Range/intersects(org.apache.cassandra.dht.Range)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getSSTables()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getColumnFamilyName()|",
      "|java+constructor:///java/util/HashSet/HashSet(java.util.Collection)|",
      "|java+method:///org/apache/cassandra/io/sstable/Descriptor/getMetadataSerializer()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics/ColumnFamilyMetrics(org.apache.cassandra.db.ColumnFamilyStore)|",
    "called": "|java+method:///com/google/common/collect/Maps/newHashMap()|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics$Sampler/values()|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$2/ColumnFamilyMetrics$2(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///com/yammer/metrics/Metrics/newGauge(com.yammer.metrics.core.MetricName,com.yammer.metrics.core.Gauge)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$4/ColumnFamilyMetrics$4(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$6/ColumnFamilyMetrics$6(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/metrics/MetricNameFactory/createMetricName(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$7/ColumnFamilyMetrics$7(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/utils/TopKSampler/TopKSampler()|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$9/ColumnFamilyMetrics$9(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyGauge(java.lang.String,com.yammer.metrics.core.Gauge,com.yammer.metrics.core.Gauge)|",
      "|java+constructor:///org/apache/cassandra/metrics/LatencyMetrics/LatencyMetrics(org.apache.cassandra.metrics.MetricNameFactory,java.lang.String,org.apache.cassandra.metrics.LatencyMetrics%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$17/ColumnFamilyMetrics$17(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$23/ColumnFamilyMetrics$23(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$19/ColumnFamilyMetrics$19(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$15/ColumnFamilyMetrics$15(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$11/ColumnFamilyMetrics$11(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$25/ColumnFamilyMetrics$25(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyCounter(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$1/ColumnFamilyMetrics$1(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$3/ColumnFamilyMetrics$3(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/utils/EstimatedHistogram/EstimatedHistogram(int)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$5/ColumnFamilyMetrics$5(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$ColumnFamilyMetricNameFactory/ColumnFamilyMetrics$ColumnFamilyMetricNameFactory(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyHistogram(java.lang.String,com.yammer.metrics.core.Histogram)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyGauge(java.lang.String,com.yammer.metrics.core.Gauge)|",
      "|java+method:///com/yammer/metrics/Metrics/newTimer(com.yammer.metrics.core.MetricName,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$8/ColumnFamilyMetrics$8(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$12/ColumnFamilyMetrics$12(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$30/ColumnFamilyMetrics$30(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$26/ColumnFamilyMetrics$26(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$22/ColumnFamilyMetrics$22(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$14/ColumnFamilyMetrics$14(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$28/ColumnFamilyMetrics$28(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$24/ColumnFamilyMetrics$24(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$13/ColumnFamilyMetrics$13(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$20/ColumnFamilyMetrics$20(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$31/ColumnFamilyMetrics$31(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$16/ColumnFamilyMetrics$16(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$27/ColumnFamilyMetrics$27(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$18/ColumnFamilyMetrics$18(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$29/ColumnFamilyMetrics$29(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$21/ColumnFamilyMetrics$21(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$10/ColumnFamilyMetrics$10(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Maps/newHashMap()|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics$Sampler/values()|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$2/ColumnFamilyMetrics$2(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///com/yammer/metrics/Metrics/newGauge(com.yammer.metrics.core.MetricName,com.yammer.metrics.core.Gauge)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$4/ColumnFamilyMetrics$4(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$6/ColumnFamilyMetrics$6(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/metrics/MetricNameFactory/createMetricName(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$7/ColumnFamilyMetrics$7(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/utils/TopKSampler/TopKSampler()|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$9/ColumnFamilyMetrics$9(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyGauge(java.lang.String,com.yammer.metrics.core.Gauge,com.yammer.metrics.core.Gauge)|",
      "|java+constructor:///org/apache/cassandra/metrics/LatencyMetrics/LatencyMetrics(org.apache.cassandra.metrics.MetricNameFactory,java.lang.String,org.apache.cassandra.metrics.LatencyMetrics%5B%5D)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$24/ColumnFamilyMetrics$24(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$20/ColumnFamilyMetrics$20(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$16/ColumnFamilyMetrics$16(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$12/ColumnFamilyMetrics$12(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$26/ColumnFamilyMetrics$26(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$18/ColumnFamilyMetrics$18(org.apache.cassandra.metrics.ColumnFamilyMetrics)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyCounter(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$1/ColumnFamilyMetrics$1(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$3/ColumnFamilyMetrics$3(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/utils/EstimatedHistogram/EstimatedHistogram(int)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$5/ColumnFamilyMetrics$5(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$ColumnFamilyMetricNameFactory/ColumnFamilyMetrics$ColumnFamilyMetricNameFactory(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyHistogram(java.lang.String,com.yammer.metrics.core.Histogram)|",
      "|java+method:///org/apache/cassandra/metrics/ColumnFamilyMetrics/createColumnFamilyGauge(java.lang.String,com.yammer.metrics.core.Gauge)|",
      "|java+method:///com/yammer/metrics/Metrics/newTimer(com.yammer.metrics.core.MetricName,java.util.concurrent.TimeUnit,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$8/ColumnFamilyMetrics$8(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$13/ColumnFamilyMetrics$13(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$31/ColumnFamilyMetrics$31(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$27/ColumnFamilyMetrics$27(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$23/ColumnFamilyMetrics$23(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$19/ColumnFamilyMetrics$19(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$30/ColumnFamilyMetrics$30(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$15/ColumnFamilyMetrics$15(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$29/ColumnFamilyMetrics$29(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$22/ColumnFamilyMetrics$22(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$11/ColumnFamilyMetrics$11(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$14/ColumnFamilyMetrics$14(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$25/ColumnFamilyMetrics$25(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$21/ColumnFamilyMetrics$21(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$10/ColumnFamilyMetrics$10(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$32/ColumnFamilyMetrics$32(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$17/ColumnFamilyMetrics$17(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/metrics/ColumnFamilyMetrics$28/ColumnFamilyMetrics$28(org.apache.cassandra.metrics.ColumnFamilyMetrics,org.apache.cassandra.db.ColumnFamilyStore)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/io/compress/CompressionParameters/CompressionParameters$initializer|",
    "called": "|java+method:///com/google/common/collect/ImmutableSet/of(java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/ImmutableSet/of(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/io/compress/CompressionParameters$Serializer/CompressionParameters$Serializer()|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/ImmutableSet/of(java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/io/compress/CompressionParameters$Serializer/CompressionParameters$Serializer()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/repair/RepairMessageVerbHandler/doVerb(org.apache.cassandra.net.MessageIn,int)|",
    "called": "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
    "v1Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/repair/StreamingRepairTask/run()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitValidation(org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.repair.Validator)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/handleMessage(java.net.InetAddress,org.apache.cassandra.repair.messages.RepairMessage)|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/waitOnFutures(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/removeParentRepairSession(java.util.UUID)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCF(java.util.UUID)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/cassandra/repair/Validator/Validator(org.apache.cassandra.repair.RepairJobDesc,java.net.InetAddress,int)|",
      "|java+method:///org/apache/cassandra/net/MessagingService/instance()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/repair/messages/RepairMessage$Type/ordinal()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/cassandra/repair/RepairMessageVerbHandler$1/RepairMessageVerbHandler$1(org.apache.cassandra.repair.RepairMessageVerbHandler,org.apache.cassandra.dht.Range)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/cassandra/repair/StreamingRepairTask/StreamingRepairTask(org.apache.cassandra.repair.RepairJobDesc,org.apache.cassandra.repair.messages.SyncRequest)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/snapshot(java.lang.String,com.google.common.base.Predicate)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/registerParentRepairSession(java.util.UUID,java.util.List,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/net/MessagingService/sendReply(org.apache.cassandra.net.MessageOut,int,java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/doAntiCompaction(java.util.UUID)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/net/MessageOut/MessageOut(org.apache.cassandra.net.MessagingService$Verb)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/repair/StreamingRepairTask/run()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/handleMessage(java.net.InetAddress,org.apache.cassandra.repair.messages.RepairMessage)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/removeParentRepairSession(java.util.UUID)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCF(java.util.UUID)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/cassandra/repair/Validator/Validator(org.apache.cassandra.repair.RepairJobDesc,java.net.InetAddress,int)|",
      "|java+method:///org/apache/cassandra/net/MessagingService/instance()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/repair/messages/RepairMessage$Type/ordinal()|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///com/google/common/util/concurrent/MoreExecutors/sameThreadExecutor()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitValidation(org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.repair.Validator)|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///org/apache/cassandra/repair/RepairMessageVerbHandler$1/RepairMessageVerbHandler$1(org.apache.cassandra.repair.RepairMessageVerbHandler,org.apache.cassandra.dht.Range)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///org/apache/cassandra/repair/StreamingRepairTask/StreamingRepairTask(org.apache.cassandra.repair.RepairJobDesc,org.apache.cassandra.repair.messages.SyncRequest)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/snapshot(java.lang.String,com.google.common.base.Predicate)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/repair/RepairMessageVerbHandler$2/RepairMessageVerbHandler$2(org.apache.cassandra.repair.RepairMessageVerbHandler,int,org.apache.cassandra.net.MessageIn)|",
      "|java+method:///org/apache/cassandra/db/Keyspace/open(java.lang.String)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/registerParentRepairSession(java.util.UUID,java.util.List,java.util.Collection)|",
      "|java+method:///org/apache/cassandra/net/MessagingService/sendReply(org.apache.cassandra.net.MessageOut,int,java.net.InetAddress)|",
      "|java+method:///org/apache/cassandra/service/ActiveRepairService/doAntiCompaction(java.util.UUID)|",
      "|java+method:///java/util/UUID/toString()|",
      "|java+method:///org/apache/cassandra/db/Keyspace/getColumnFamilyStore(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/net/MessageOut/MessageOut(org.apache.cassandra.net.MessagingService$Verb)|",
      "|java+method:///com/google/common/util/concurrent/ListenableFuture/addListener(java.lang.Runnable,java.util.concurrent.Executor)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+constructor:///org/apache/cassandra/net/MessagingService$SocketThread/MessagingService$SocketThread(java.net.ServerSocket,java.lang.String)|",
    "called": "|java+method:///com/google/common/collect/Sets/newConcurrentHashSet()|",
    "v1Body": [
      "|java+constructor:///java/lang/Thread/Thread(java.lang.String)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Sets/newConcurrentHashSet()|",
      "|java+constructor:///java/lang/Thread/Thread(java.lang.String)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/truncateBlocking()|",
    "called": "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/ExecutorService/submit(java.lang.Runnable)|",
      "|java+method:///java/util/concurrent/Executors/callable(java.lang.Runnable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/runWithCompactionsDisabled(java.util.concurrent.Callable,boolean)|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/forceBlockingFlush()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$10/ColumnFamilyStore$10(org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$Flush/ColumnFamilyStore$Flush(org.apache.cassandra.db.ColumnFamilyStore,boolean,org.apache.cassandra.db.ColumnFamilyStore$1)|",
      "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/isAutoSnapshot()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$Flush/ColumnFamilyStore$Flush(org.apache.cassandra.db.ColumnFamilyStore,boolean,org.apache.cassandra.db.ColumnFamilyStore$1)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/util/concurrent/ExecutorService/submit(java.lang.Runnable)|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$9/ColumnFamilyStore$9(org.apache.cassandra.db.ColumnFamilyStore)|",
      "|java+method:///java/util/concurrent/Executors/callable(java.lang.Runnable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/runWithCompactionsDisabled(java.util.concurrent.Callable,boolean)|",
      "|java+method:///java/util/concurrent/ExecutorService/execute(java.lang.Runnable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/forceBlockingFlush()|",
      "|java+method:///com/google/common/util/concurrent/Uninterruptibles/sleepUninterruptibly(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/isAutoSnapshot()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+constructor:///org/apache/cassandra/db/commitlog/CommitLogReplayer/CommitLogReplayer()|",
    "called": "|java+method:///com/google/common/collect/Ordering/max(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/all()|",
      "|java+constructor:///org/apache/cassandra/utils/PureJavaCrc32/PureJavaCrc32()|",
      "|java+method:///com/google/common/collect/Ordering/from(java.util.Comparator)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///org/apache/cassandra/db/commitlog/ReplayPosition/getReplayPosition(java.lang.Iterable)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getSSTables()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/toString(java.util.Map)|",
      "|java+method:///com/google/common/collect/Ordering/min(java.lang.Iterable)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getTruncatedPosition(java.util.UUID)|",
      "|java+constructor:///org/cliffc/high_scale_lib/NonBlockingHashSet/NonBlockingHashSet()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/collect/Ordering/max(java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/removeTruncationRecord(java.util.UUID)|",
      "|java+constructor:///org/apache/cassandra/utils/PureJavaCrc32/PureJavaCrc32()|",
      "|java+method:///com/google/common/collect/Ordering/from(java.util.Comparator)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger()|",
      "|java+method:///org/apache/cassandra/db/commitlog/ReplayPosition/getReplayPosition(java.lang.Iterable)|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/getSSTables()|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer$ReplayFilter/includes(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/all()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getTruncatedAt(java.util.UUID)|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/toString(java.util.Map)|",
      "|java+method:///com/google/common/collect/Ordering/min(java.lang.Iterable)|",
      "|java+method:///java/util/Arrays/asList(java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer$ReplayFilter/create()|",
      "|java+method:///java/util/Map/values()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+constructor:///java/util/HashMap/HashMap()|",
      "|java+method:///org/apache/cassandra/db/SystemKeyspace/getTruncatedPosition(java.util.UUID)|",
      "|java+constructor:///org/cliffc/high_scale_lib/NonBlockingHashSet/NonBlockingHashSet()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///com/google/common/collect/Ordering/max(java.lang.Iterable)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/cql3/statements/BatchStatement/executeWithoutConditions(java.util.Collection,org.apache.cassandra.db.ConsistencyLevel)|",
    "called": "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable)|",
    "v1Body": [
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/cql3/statements/BatchStatement/verifyBatchSize(java.lang.Iterable)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/BatchStatement$1/BatchStatement$1(org.apache.cassandra.cql3.statements.BatchStatement)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutateWithTriggers(java.util.Collection,org.apache.cassandra.db.ConsistencyLevel,boolean)|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable)|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/cql3/statements/BatchStatement/verifyBatchSize(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/cql3/statements/BatchStatement/verifyBatchType(java.util.Collection)|",
      "|java+method:///java/util/Collection/size()|",
      "|java+constructor:///org/apache/cassandra/cql3/statements/BatchStatement$1/BatchStatement$1(org.apache.cassandra.cql3.statements.BatchStatement)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/mutateWithTriggers(java.util.Collection,org.apache.cassandra.db.ConsistencyLevel,boolean)|",
      "|java+method:///com/google/common/collect/Iterables/concat(java.lang.Iterable)|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/CollationController/collectAllData(boolean)|",
    "called": "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData,boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/cassandra/db/CollationController$2/CollationController$2(org.apache.cassandra.db.CollationController,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/getIterator(org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/trace(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/delete(org.apache.cassandra.db.DeletionInfo,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/trace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/shouldInclude(org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/size(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/db/filter/IDiskAtomFilter/isReversed()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getMinTimestamp()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/Memtable/getColumnFamily(org.apache.cassandra.db.DecoratedKey)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/collateOnDiskAtom(org.apache.cassandra.db.ColumnFamily,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getSSTableMetadata()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo/getTopLevelDeletion()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/incrementReadCount()|",
      "|java+method:///org/apache/cassandra/db/columniterator/OnDiskAtomIterator/getColumnFamily()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/apache/cassandra/io/util/FileUtils/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/viewFilter(org.apache.cassandra.db.DecoratedKey)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/getSSTableColumnIterator(org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/isMarkedForDelete()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getMaxTimestamp()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/deletionInfo()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.DeletionTime)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/select(com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/isTracing()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Iterable/iterator()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData,boolean)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+constructor:///org/apache/cassandra/db/CollationController$2/CollationController$2(org.apache.cassandra.db.CollationController,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/getIterator(org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///java/lang/Math/min(long,long)|",
      "|java+method:///com/google/common/collect/Iterators/transform(java.util.Iterator,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/trace(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/delete(org.apache.cassandra.db.DeletionInfo,org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/trace(java.lang.String)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/shouldInclude(org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/trace(java.lang.String,java.lang.Object)|",
      "|java+method:///com/google/common/collect/Iterables/size(java.lang.Iterable)|",
      "|java+method:///org/apache/cassandra/db/filter/IDiskAtomFilter/isReversed()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getMinTimestamp()|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/Memtable/getColumnFamily(org.apache.cassandra.db.DecoratedKey)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/collateOnDiskAtom(org.apache.cassandra.db.ColumnFamily,java.util.List,int)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getSSTableMetadata()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///org/apache/cassandra/db/DeletionInfo/getTopLevelDeletion()|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/incrementReadCount()|",
      "|java+method:///org/apache/cassandra/db/columniterator/OnDiskAtomIterator/getColumnFamily()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Collections/sort(java.util.List,java.util.Comparator)|",
      "|java+method:///org/apache/cassandra/io/util/FileUtils/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/viewFilter(org.apache.cassandra.db.DecoratedKey)|",
      "|java+method:///org/apache/cassandra/db/filter/QueryFilter/getSSTableColumnIterator(org.apache.cassandra.io.sstable.SSTableReader)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/sstable/SSTableReader/getMaxTimestamp()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/deletionInfo()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.DeletionTime)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamilyStore/select(com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/delete(org.apache.cassandra.db.ColumnFamily)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/isTracing()|",
      "|java+method:///java/util/List/iterator()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/streaming/StreamTransferTask/abort()|",
    "called": "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
    "v1Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/concurrent/Ref/release()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/concurrent/ScheduledFuture/cancel(boolean)|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/util/Map/values()|"
    ],
    "v2Body": [
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Throwable/addSuppressed(java.lang.Throwable)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/concurrent/ScheduledFuture/cancel(boolean)|",
      "|java+method:///java/util/Map/clear()|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/streaming/messages/OutgoingFileMessage/complete()|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+method:///java/util/Map/values()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitAntiCompaction(org.apache.cassandra.db.ColumnFamilyStore,java.util.Collection,org.apache.cassandra.utils.concurrent.Refs,long)|",
    "called": "|java+method:///com/google/common/util/concurrent/ListenableFutureTask/create(java.lang.Runnable,java.lang.Object)|",
    "v1Body": [
      "|java+method:///com/google/common/util/concurrent/Futures/immediateCancelledFuture()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager$CompactionExecutor/submit(java.lang.Runnable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/compaction/CompactionManager$6/CompactionManager$6(org.apache.cassandra.db.compaction.CompactionManager,org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.utils.concurrent.Refs,java.util.Collection,long)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager$CompactionExecutor/isShutdown()|"
    ],
    "v2Body": [
      "|java+method:///com/google/common/util/concurrent/ListenableFutureTask/create(java.lang.Runnable,java.lang.Object)|",
      "|java+method:///com/google/common/util/concurrent/Futures/immediateCancelledFuture()|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager$CompactionExecutor/submit(java.lang.Runnable)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/compaction/CompactionManager$6/CompactionManager$6(org.apache.cassandra.db.compaction.CompactionManager,org.apache.cassandra.db.ColumnFamilyStore,org.apache.cassandra.utils.concurrent.Refs,java.util.Collection,long)|",
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager$CompactionExecutor/isShutdown()|"
    ],
    "affectedLib": "com.google.guava:guava:16.0.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer/recover(java.io.File)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/join(java.util.Iterator,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/Cell/name()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/iterator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogDescriptor/getMessagingVersion()|",
      "|java+method:///java/io/DataOutputStream/write(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/update(int)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/incrementAndGet()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/length()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getComparator()|",
      "|java+method:///org/apache/cassandra/concurrent/TracingAwareExecutorService/submit(java.lang.Runnable)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/update(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/db/Mutation/key()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.util.Iterator,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/getValue()|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/updateInt(int)|",
      "|java+method:///org/apache/cassandra/db/Mutation$MutationSerializer/deserialize(java.io.DataInput,int,org.apache.cassandra.db.ColumnSerializer$Flag)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getFilePointer()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/isEOF()|",
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer$ReplayFilter/create()|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogDescriptor/fromFileName(java.lang.String)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/open(java.io.File)|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/validate(org.apache.cassandra.db.composites.Composite)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/readLong()|",
      "|java+method:///org/apache/cassandra/io/util/FileUtils/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/cassandra/db/Mutation/getKeyspaceName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/readInt()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/commitlog/CommitLogReplayer$1/CommitLogReplayer$1(org.apache.cassandra.db.commitlog.CommitLogReplayer,org.apache.cassandra.db.Mutation,org.apache.cassandra.db.commitlog.CommitLogReplayer$ReplayFilter,long,long)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/waitOnFutures(java.lang.Iterable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer/readSyncMarker(org.apache.cassandra.db.commitlog.CommitLogDescriptor,int,org.apache.cassandra.io.util.RandomAccessReader)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/cassandra/db/Mutation/getColumnFamilies()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/JVMStabilityInspector/inspectThrowable(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getPosition()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/reset()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/concurrent/StageManager/getStage(org.apache.cassandra.concurrent.Stage)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/seek(long)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/readFully(byte%5B%5D,int,int)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer/getStartOffset(long,int)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/io/File/getPath()|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/io/util/FastByteArrayInputStream/FastByteArrayInputStream(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/Cell/name()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/iterator()|",
      "|java+method:///java/util/Map/get(java.lang.Object)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogDescriptor/fromFileName(java.lang.String)|",
      "|java+constructor:///java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)|",
      "|java+method:///java/io/DataOutputStream/write(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/update(int)|",
      "|java+method:///java/util/concurrent/atomic/AtomicInteger/incrementAndGet()|",
      "|java+method:///java/util/Map/put(java.lang.Object,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/length()|",
      "|java+method:///java/io/File/getName()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getComparator()|",
      "|java+method:///org/apache/cassandra/concurrent/TracingAwareExecutorService/submit(java.lang.Runnable)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/update(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/db/Mutation/key()|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.util.Iterator,java.lang.String)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String,java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/getValue()|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/updateInt(int)|",
      "|java+method:///org/apache/cassandra/db/Mutation$MutationSerializer/deserialize(java.io.DataInput,int,org.apache.cassandra.db.ColumnSerializer$Flag)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getFilePointer()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/isEOF()|",
      "|java+method:///java/io/DataOutputStream/close()|",
      "|java+method:///java/util/List/size()|",
      "|java+constructor:///java/io/DataInputStream/DataInputStream(java.io.InputStream)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/open(java.io.File)|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/validate(org.apache.cassandra.db.composites.Composite)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/readLong()|",
      "|java+method:///org/apache/cassandra/io/util/FileUtils/closeQuietly(java.io.Closeable)|",
      "|java+method:///org/apache/cassandra/db/Mutation/getKeyspaceName()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/readInt()|",
      "|java+constructor:///java/io/File/File(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/waitOnFutures(java.lang.Iterable)|",
      "|java+method:///org/slf4j/Logger/error(java.lang.String,java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer/readSyncMarker(org.apache.cassandra.db.commitlog.CommitLogDescriptor,int,org.apache.cassandra.io.util.RandomAccessReader)|",
      "|java+method:///java/io/File/getAbsolutePath()|",
      "|java+method:///java/util/List/clear()|",
      "|java+method:///org/apache/cassandra/db/Mutation/getColumnFamilies()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/cassandra/utils/JVMStabilityInspector/inspectThrowable(java.lang.Throwable)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/getPosition()|",
      "|java+constructor:///java/util/concurrent/atomic/AtomicInteger/AtomicInteger(int)|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/cassandra/utils/PureJavaCrc32/reset()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+method:///org/apache/cassandra/concurrent/StageManager/getStage(org.apache.cassandra.concurrent.Stage)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/seek(long)|",
      "|java+method:///java/io/File/createTempFile(java.lang.String,java.lang.String)|",
      "|java+method:///java/util/Collection/iterator()|",
      "|java+method:///org/apache/cassandra/io/util/RandomAccessReader/readFully(byte%5B%5D,int,int)|",
      "|java+method:///org/slf4j/Logger/isDebugEnabled()|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogDescriptor/getMessagingVersion()|",
      "|java+constructor:///org/apache/cassandra/db/commitlog/CommitLogReplayer$1/CommitLogReplayer$1(org.apache.cassandra.db.commitlog.CommitLogReplayer,org.apache.cassandra.db.Mutation,long,long)|",
      "|java+method:///org/apache/cassandra/db/commitlog/CommitLogReplayer/getStartOffset(long,int)|",
      "|java+constructor:///java/lang/AssertionError/AssertionError()|",
      "|java+method:///java/io/File/getPath()|",
      "|java+constructor:///java/io/FileOutputStream/FileOutputStream(java.io.File)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/cassandra/io/util/FastByteArrayInputStream/FastByteArrayInputStream(byte%5B%5D,int,int)|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/maybeBuildSecondaryIndexes(java.util.Collection,java.util.Set)|",
    "called": "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitIndexBuild(org.apache.cassandra.db.index.SecondaryIndexBuilder)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/db/index/SecondaryIndexBuilder/SecondaryIndexBuilder(org.apache.cassandra.db.ColumnFamilyStore,java.util.Set,org.apache.cassandra.io.sstable.ReducingKeyIterator)|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/flushIndexesBlocking()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/waitOnFuture(java.util.concurrent.Future)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/ReducingKeyIterator/ReducingKeyIterator(java.util.Collection)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/db/compaction/CompactionManager/submitIndexBuild(org.apache.cassandra.db.index.SecondaryIndexBuilder)|",
      "|java+method:///java/util/Set/isEmpty()|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/filterByColumn(java.util.Set)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String,java.lang.Object)|",
      "|java+method:///org/apache/commons/lang3/StringUtils/join(java.lang.Iterable,java.lang.String)|",
      "|java+method:///org/slf4j/Logger/info(java.lang.String)|",
      "|java+method:///java/lang/String/format(java.lang.String,java.lang.Object%5B%5D)|",
      "|java+constructor:///org/apache/cassandra/db/index/SecondaryIndexBuilder/SecondaryIndexBuilder(org.apache.cassandra.db.ColumnFamilyStore,java.util.Set,org.apache.cassandra.io.sstable.ReducingKeyIterator)|",
      "|java+method:///org/apache/cassandra/db/index/SecondaryIndexManager/flushIndexesBlocking()|",
      "|java+method:///org/apache/cassandra/utils/FBUtilities/waitOnFuture(java.util.concurrent.Future)|",
      "|java+constructor:///org/apache/cassandra/io/sstable/ReducingKeyIterator/ReducingKeyIterator(java.util.Collection)|"
    ],
    "affectedLib": "org.apache.commons:commons-lang3:3.1",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/db/ColumnFamilyStore/ColumnFamilyStore$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///javax/management/openmbean/TabularType/TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getFlushWriters()|",
      "|java+constructor:///javax/management/openmbean/CompositeType/CompositeType(java.lang.String,java.lang.String,java.lang.String%5B%5D,java.lang.String%5B%5D,javax.management.openmbean.OpenType%5B%5D)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$14/ColumnFamilyStore$14()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$13/ColumnFamilyStore$13()|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///javax/management/openmbean/TabularType/TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getFlushWriters()|",
      "|java+constructor:///javax/management/openmbean/CompositeType/CompositeType(java.lang.String,java.lang.String,java.lang.String%5B%5D,java.lang.String%5B%5D,javax.management.openmbean.OpenType%5B%5D)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$11/ColumnFamilyStore$11()|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$12/ColumnFamilyStore$12()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/db/SliceFromReadCommand/SliceFromReadCommand$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/db/SliceFromReadCommandSerializer/SliceFromReadCommandSerializer()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/cassandra/db/SliceFromReadCommandSerializer/SliceFromReadCommandSerializer()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/gms/FailureDetector/FailureDetector$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/cassandra/gms/FailureDetector/FailureDetector()|",
      "|java+method:///org/apache/cassandra/gms/FailureDetector/getInitialValue()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/gms/FailureDetector/getInitialValue()|",
      "|java+method:///org/apache/cassandra/gms/FailureDetector/getMaxLocalPause()|",
      "|java+constructor:///org/apache/cassandra/gms/FailureDetector/FailureDetector()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.2",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/db/ColumnFamilyStore/ColumnFamilyStore$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///javax/management/openmbean/TabularType/TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getFlushWriters()|",
      "|java+constructor:///javax/management/openmbean/CompositeType/CompositeType(java.lang.String,java.lang.String,java.lang.String%5B%5D,java.lang.String%5B%5D,javax.management.openmbean.OpenType%5B%5D)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$14/ColumnFamilyStore$14()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$13/ColumnFamilyStore$13()|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|"
    ],
    "v2Body": [
      "|java+constructor:///java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue()|",
      "|java+constructor:///javax/management/openmbean/TabularType/TabularType(java.lang.String,java.lang.String,javax.management.openmbean.CompositeType,java.lang.String%5B%5D)|",
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///com/google/common/base/Throwables/propagate(java.lang.Throwable)|",
      "|java+constructor:///org/apache/cassandra/concurrent/NamedThreadFactory/NamedThreadFactory(java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getFlushWriters()|",
      "|java+constructor:///javax/management/openmbean/CompositeType/CompositeType(java.lang.String,java.lang.String,java.lang.String%5B%5D,java.lang.String%5B%5D,javax.management.openmbean.OpenType%5B%5D)|",
      "|java+method:///java/lang/Class/desiredAssertionStatus()|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$11/ColumnFamilyStore$11()|",
      "|java+constructor:///org/apache/cassandra/concurrent/JMXEnabledThreadPoolExecutor/JMXEnabledThreadPoolExecutor(int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,org.apache.cassandra.concurrent.NamedThreadFactory,java.lang.String)|",
      "|java+constructor:///org/apache/cassandra/db/ColumnFamilyStore$12/ColumnFamilyStore$12()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.5",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/db/SliceFromReadCommand/SliceFromReadCommand$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+constructor:///org/apache/cassandra/db/SliceFromReadCommandSerializer/SliceFromReadCommandSerializer()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+constructor:///org/apache/cassandra/db/SliceFromReadCommandSerializer/SliceFromReadCommandSerializer()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.5",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+initializer:///org/apache/cassandra/gms/FailureDetector/FailureDetector$initializer|",
    "called": "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
    "v1Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)|",
      "|java+constructor:///org/apache/cassandra/gms/FailureDetector/FailureDetector()|",
      "|java+method:///org/apache/cassandra/gms/FailureDetector/getInitialValue()|"
    ],
    "v2Body": [
      "|java+method:///org/slf4j/LoggerFactory/getLogger(java.lang.Class)|",
      "|java+method:///java/util/concurrent/TimeUnit/convert(long,java.util.concurrent.TimeUnit)|",
      "|java+method:///org/apache/cassandra/gms/FailureDetector/getInitialValue()|",
      "|java+method:///org/apache/cassandra/gms/FailureDetector/getMaxLocalPause()|",
      "|java+constructor:///org/apache/cassandra/gms/FailureDetector/FailureDetector()|"
    ],
    "affectedLib": "org.slf4j:slf4j-api:1.7.5",
    "change": "ADDED"
  },
  {
    "coordinatesV1": "org.apache.cassandra:cassandra-all:2.1.5",
    "coordinatesV2": "org.apache.cassandra:cassandra-all:2.1.6",
    "caller": "|java+method:///org/apache/cassandra/thrift/CassandraServer/cas(java.nio.ByteBuffer,java.lang.String,java.util.List,java.util.List,org.apache.cassandra.thrift.ConsistencyLevel,org.apache.cassandra.thrift.ConsistencyLevel)|",
    "called": "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
    "v1Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/fromThrift(org.apache.cassandra.thrift.ConsistencyLevel)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestValidationException)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnNames(org.apache.cassandra.config.CFMetaData,org.apache.cassandra.thrift.ColumnParent,java.lang.Iterable)|",
      "|java+method:///java/lang/Object/toString()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/getSortedColumns()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/rethrow(org.apache.cassandra.exceptions.RequestExecutionException)|",
      "|java+constructor:///org/apache/cassandra/thrift/CASResult/CASResult(boolean)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnFamily(java.lang.String,java.lang.String,boolean)|",
      "|java+constructor:///org/apache/cassandra/exceptions/InvalidRequestException/InvalidRequestException(java.lang.String)|",
      "|java+method:///com/google/common/collect/ImmutableMap/of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)|",
      "|java+constructor:///org/apache/cassandra/thrift/ColumnParent/ColumnParent(java.lang.String)|",
      "|java+method:///java/lang/System/currentTimeMillis()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/getKeyspace()|",
      "|java+method:///org/apache/cassandra/utils/ByteBufferUtil/bytesToHex(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftConversion/toThrift(org.apache.cassandra.exceptions.RequestTimeoutException)|",
      "|java+method:///org/slf4j/Logger/debug(java.lang.String)|",
      "|java+method:///org/apache/cassandra/service/StorageProxy/cas(java.lang.String,java.lang.String,java.nio.ByteBuffer,org.apache.cassandra.service.CASRequest,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.db.ConsistencyLevel,org.apache.cassandra.service.ClientState)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftClientState/hasColumnFamilyAccess(java.lang.String,java.lang.String,org.apache.cassandra.auth.Permission)|",
      "|java+method:///com/google/common/collect/Iterables/transform(java.lang.Iterable,com.google.common.base.Function)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily/addColumn(org.apache.cassandra.db.composites.CellName,java.nio.ByteBuffer,long)|",
      "|java+method:///java/util/List/isEmpty()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/thriftifyColumnsAsColumns(java.util.Collection,long)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/state()|",
      "|java+method:///org/apache/cassandra/db/composites/CellNameType/cellFromByteBuffer(java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/db/ColumnFamily$Factory/create(org.apache.cassandra.config.CFMetaData)|",
      "|java+method:///org/apache/cassandra/thrift/CASResult/setCurrent_values(java.util.List)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/schedule(long)|",
      "|java+method:///org/apache/cassandra/config/Schema/getCFMetaData(java.lang.String,java.lang.String)|",
      "|java+method:///org/apache/cassandra/config/DatabaseDescriptor/getWriteRpcTimeout()|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/begin(java.lang.String,java.util.Map)|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$1/CassandraServer$1(org.apache.cassandra.thrift.CassandraServer)|",
      "|java+method:///org/apache/cassandra/tracing/Tracing/stopSession()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateColumnData(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer,java.nio.ByteBuffer,org.apache.cassandra.thrift.Column)|",
      "|java+method:///org/apache/cassandra/thrift/ThriftValidation/validateKey(org.apache.cassandra.config.CFMetaData,java.nio.ByteBuffer)|",
      "|java+method:///org/apache/cassandra/thrift/CassandraServer/startSessionIfRequested()|",
      "|java+constructor:///org/apache/cassandra/thrift/CassandraServer$ThriftCASRequest/CassandraServer$ThriftCASRequest(org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.db.ColumnFamily,org.apache.cassandra.thrift.CassandraServer$1)|"
    ],
    "affectedLib": "org.apache.cassandra:cassandra-thrift:2.1.6",
    "change": "UPDATED"
  }
]