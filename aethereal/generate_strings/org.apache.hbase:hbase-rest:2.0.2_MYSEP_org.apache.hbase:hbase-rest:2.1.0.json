[
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/TableScanResource$1$1/next()|",
    "called": "|java+method:///org/apache/hadoop/hbase/client/Result/listCells()|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneQualifier(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneValue(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/client/ResultScanner/close()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/RowModel/RowModel(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/CellModel/CellModel(byte%5B%5D,byte%5B%5D,long,byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/getRow()|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/listCells()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/TableScanResource$1$1/next()|",
      "|java+method:///org/apache/hadoop/hbase/Cell/getTimestamp()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/RowModel/addCell(org.apache.hadoop.hbase.rest.model.CellModel)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneQualifier(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneValue(org.apache.hadoop.hbase.Cell)|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/RowModel/RowModel(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/CellModel/CellModel(byte%5B%5D,byte%5B%5D,long,byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/getRow()|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/listCells()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/TableScanResource$1$1/next()|",
      "|java+method:///org/apache/hadoop/hbase/Cell/getTimestamp()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/RowModel/addCell(org.apache.hadoop.hbase.rest.model.CellModel)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|"
    ],
    "affectedLib": "org.apache.hbase:hbase-client:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/ScannerModel$FilterModel(org.apache.hadoop.hbase.filter.Filter)|",
    "called": "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/MultiRowRangeFilter$RowRange(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getOperator()|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/dropDependentColumn()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumn()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/getStopRowKey()|",
      "|java+method:///java/util/Base64/getEncoder()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/TimestampsFilter/getTimestamps()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getOperator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/MultiRowRangeFilter$RowRange(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter$CompareOp/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumnInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toString(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStopRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PageFilter/getPageSize()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFilterIfMissing()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getOffset()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getFilters()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumn()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStopRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/getLimit()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Base64$Encoder/encode(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/getPrefix()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/ScannerModel$FilterModel$ByteArrayComparableModel(org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/filter/WhileMatchFilter/getFilter()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getLatestVersionOnly()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/ScannerModel$FilterModel(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/RandomRowFilter/getChance()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStartRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumnInclusive()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getLimit()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStartRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/getRowRanges()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SkipFilter/getFilter()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/dropDependentColumn()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumn()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/getStopRowKey()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/TimestampsFilter/getTimestamps()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getOperator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/MultiRowRangeFilter$RowRange(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter$CompareOp/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumnInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStopRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PageFilter/getPageSize()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFilterIfMissing()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/util/Base64/encodeBytes(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getOffset()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getFilters()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumn()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStopRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/getLimit()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/getPrefix()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/ScannerModel$FilterModel$ByteArrayComparableModel(org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/filter/WhileMatchFilter/getFilter()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getLatestVersionOnly()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/ScannerModel$FilterModel(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/RandomRowFilter/getChance()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStartRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumnInclusive()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getLimit()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStartRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/getRowRanges()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SkipFilter/getFilter()|"
    ],
    "affectedLib": "org.apache.hbase:hbase-client:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/build()|",
    "called": "|java+constructor:///org/apache/hadoop/hbase/filter/NullComparator/NullComparator()|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/hbase/filter/NullComparator/NullComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BitComparator/BitComparator(byte%5B%5D,org.apache.hadoop.hbase.filter.BitComparator$BitwiseOp)|",
      "|java+method:///java/util/Base64$Decoder/decode(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Base64/getDecoder()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SubstringComparator/SubstringComparator(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator$BitwiseOp/valueOf(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RegexStringComparator/RegexStringComparator(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryPrefixComparator/BinaryPrefixComparator(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryComparator/BinaryComparator(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/ordinal()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/util/Base64/decode(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/NullComparator/NullComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BitComparator/BitComparator(byte%5B%5D,org.apache.hadoop.hbase.filter.BitComparator$BitwiseOp)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SubstringComparator/SubstringComparator(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator$BitwiseOp/valueOf(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RegexStringComparator/RegexStringComparator(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryPrefixComparator/BinaryPrefixComparator(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryComparator/BinaryComparator(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/ordinal()|"
    ],
    "affectedLib": "org.apache.hbase:hbase-client:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/build()|",
    "called": "|java+constructor:///org/apache/hadoop/hbase/filter/ValueFilter/ValueFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/build()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setFilterIfMissing(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RowFilter/RowFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/QualifierFilter/QualifierFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/ColumnCountGetFilter(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setFilterIfMissing(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FirstKeyOnlyFilter/FirstKeyOnlyFilter()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/TimestampsFilter/TimestampsFilter(java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/ColumnRangeFilter(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///java/util/Base64$Decoder/decode(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setLatestVersionOnly(boolean)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PageFilter/PageFilter(long)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/InclusiveStopFilter(byte%5B%5D)|",
      "|java+method:///java/util/Base64/getDecoder()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/build()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SkipFilter/SkipFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/WhileMatchFilter/WhileMatchFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/KeyOnlyFilter/KeyOnlyFilter()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FilterList/FilterList(org.apache.hadoop.hbase.filter.FilterList$Operator,java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/MultiRowRangeFilter(java.util.List)|",
      "|java+method:///org/apache/hadoop/hbase/CompareOperator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ValueFilter/ValueFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/DependentColumnFilter/DependentColumnFilter(byte%5B%5D,byte%5B%5D,boolean,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/SingleColumnValueFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RandomRowFilter/RandomRowFilter(float)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setLatestVersionOnly(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/MultipleColumnPrefixFilter(byte%5B%5D%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PrefixFilter/PrefixFilter(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/ColumnPrefixFilter(byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FamilyFilter/FamilyFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/SingleColumnValueExcludeFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/ColumnPaginationFilter(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/util/Base64/decode(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/build()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/build()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setFilterIfMissing(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RowFilter/RowFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/QualifierFilter/QualifierFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/ColumnCountGetFilter(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setFilterIfMissing(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FirstKeyOnlyFilter/FirstKeyOnlyFilter()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/TimestampsFilter/TimestampsFilter(java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/ColumnRangeFilter(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setLatestVersionOnly(boolean)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PageFilter/PageFilter(long)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/InclusiveStopFilter(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SkipFilter/SkipFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/WhileMatchFilter/WhileMatchFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/KeyOnlyFilter/KeyOnlyFilter()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FilterList/FilterList(org.apache.hadoop.hbase.filter.FilterList$Operator,java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/MultiRowRangeFilter(java.util.List)|",
      "|java+method:///org/apache/hadoop/hbase/CompareOperator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ValueFilter/ValueFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/DependentColumnFilter/DependentColumnFilter(byte%5B%5D,byte%5B%5D,boolean,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/SingleColumnValueFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RandomRowFilter/RandomRowFilter(float)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setLatestVersionOnly(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/MultipleColumnPrefixFilter(byte%5B%5D%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PrefixFilter/PrefixFilter(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/ColumnPrefixFilter(byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FamilyFilter/FamilyFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/SingleColumnValueExcludeFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/ColumnPaginationFilter(int,int)|"
    ],
    "affectedLib": "org.apache.hbase:hbase-client:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/TableScanResource$1$1/next()|",
    "called": "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneQualifier(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneValue(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/client/ResultScanner/close()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/RowModel/RowModel(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/CellModel/CellModel(byte%5B%5D,byte%5B%5D,long,byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/getRow()|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/listCells()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/TableScanResource$1$1/next()|",
      "|java+method:///org/apache/hadoop/hbase/Cell/getTimestamp()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/RowModel/addCell(org.apache.hadoop.hbase.rest.model.CellModel)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneQualifier(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneValue(org.apache.hadoop.hbase.Cell)|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/RowModel/RowModel(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/CellModel/CellModel(byte%5B%5D,byte%5B%5D,long,byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/getRow()|",
      "|java+method:///org/apache/hadoop/hbase/client/Result/listCells()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/TableScanResource$1$1/next()|",
      "|java+method:///org/apache/hadoop/hbase/Cell/getTimestamp()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/RowModel/addCell(org.apache.hadoop.hbase.rest.model.CellModel)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|"
    ],
    "affectedLib": "org.apache.hbase:hbase-common:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/ScannerInstanceResource/getBinary(javax.ws.rs.core.UriInfo)|",
    "called": "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneRow(org.apache.hadoop.hbase.Cell)|",
    "v1Body": [
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneQualifier(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementFailedGetRequests(int)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/entity(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/header(java.lang.String,java.lang.Object)|",
      "|java+method:///org/slf4j/Logger/isTraceEnabled()|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementRequests(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/rest/RESTServlet/getMetrics()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/UriInfo/getAbsolutePath()|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/cacheControl(javax.ws.rs.core.CacheControl)|",
      "|java+method:///javax/ws/rs/core/Response/noContent()|",
      "|java+method:///java/util/Base64/getEncoder()|",
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toString(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneValue(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/type(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementFailedDeleteRequests(int)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneRow(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///java/util/Base64$Encoder/encode(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/rest/ScannerResource/delete(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementSucessfulGetRequests(int)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/makeColumn(byte%5B%5D,byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementSucessfulDeleteRequests(int)|",
      "|java+method:///org/apache/hadoop/hbase/rest/ResultGenerator/next()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/Cell/getTimestamp()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneQualifier(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///javax/ws/rs/core/Response/noContent()|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementFailedGetRequests(int)|",
      "|java+method:///javax/ws/rs/core/Response/status(javax.ws.rs.core.Response$Status)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/entity(java.lang.Object)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/header(java.lang.String,java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/build()|",
      "|java+method:///org/slf4j/Logger/trace(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementRequests(int)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///javax/ws/rs/core/Response/ok(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/rest/RESTServlet/getMetrics()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///javax/ws/rs/core/UriInfo/getAbsolutePath()|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/cacheControl(javax.ws.rs.core.CacheControl)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneValue(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///java/lang/Long/valueOf(long)|",
      "|java+method:///org/slf4j/Logger/isTraceEnabled()|",
      "|java+method:///org/apache/hadoop/hbase/util/Base64/encodeBytes(byte%5B%5D)|",
      "|java+method:///javax/ws/rs/core/Response$ResponseBuilder/type(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementFailedDeleteRequests(int)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneRow(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/cloneFamily(org.apache.hadoop.hbase.Cell)|",
      "|java+method:///org/apache/hadoop/hbase/rest/ScannerResource/delete(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementSucessfulGetRequests(int)|",
      "|java+method:///org/apache/hadoop/hbase/CellUtil/makeColumn(byte%5B%5D,byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/rest/MetricsREST/incrementSucessfulDeleteRequests(int)|",
      "|java+method:///org/apache/hadoop/hbase/rest/ResultGenerator/next()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/Cell/getTimestamp()|"
    ],
    "affectedLib": "org.apache.hbase:hbase-common:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/build()|",
    "called": "|java+method:///org/apache/hadoop/hbase/util/Base64/decode(java.lang.String)|",
    "v1Body": [
      "|java+constructor:///org/apache/hadoop/hbase/filter/NullComparator/NullComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BitComparator/BitComparator(byte%5B%5D,org.apache.hadoop.hbase.filter.BitComparator$BitwiseOp)|",
      "|java+method:///java/util/Base64$Decoder/decode(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///java/util/Base64/getDecoder()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SubstringComparator/SubstringComparator(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator$BitwiseOp/valueOf(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RegexStringComparator/RegexStringComparator(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryPrefixComparator/BinaryPrefixComparator(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryComparator/BinaryComparator(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/ordinal()|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/util/Base64/decode(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/NullComparator/NullComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BitComparator/BitComparator(byte%5B%5D,org.apache.hadoop.hbase.filter.BitComparator$BitwiseOp)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SubstringComparator/SubstringComparator(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator$BitwiseOp/valueOf(java.lang.String)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RegexStringComparator/RegexStringComparator(java.lang.String)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryPrefixComparator/BinaryPrefixComparator(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/BinaryComparator/BinaryComparator(byte%5B%5D)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/ordinal()|"
    ],
    "affectedLib": "org.apache.hbase:hbase-common:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/ScannerModel$FilterModel$ByteArrayComparableModel(org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
    "called": "|java+method:///org/apache/hadoop/hbase/util/Base64/encodeBytes(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///java/util/Base64/getEncoder()|",
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toString(byte%5B%5D)|",
      "|java+method:///java/util/Base64$Encoder/encode(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator$BitwiseOp/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator/getOperator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ByteArrayComparable/getValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/ordinal()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toString(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/util/Base64/encodeBytes(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator$BitwiseOp/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/BitComparator/getOperator()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ByteArrayComparable/getValue()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel$ComparatorType/ordinal()|"
    ],
    "affectedLib": "org.apache.hbase:hbase-common:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/ScannerModel$FilterModel(org.apache.hadoop.hbase.filter.Filter)|",
    "called": "|java+method:///org/apache/hadoop/hbase/util/Base64/encodeBytes(byte%5B%5D)|",
    "v1Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getOperator()|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/dropDependentColumn()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumn()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/getStopRowKey()|",
      "|java+method:///java/util/Base64/getEncoder()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/TimestampsFilter/getTimestamps()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getOperator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/MultiRowRangeFilter$RowRange(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter$CompareOp/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumnInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/util/Bytes/toString(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStopRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PageFilter/getPageSize()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFilterIfMissing()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getOffset()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getFilters()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumn()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStopRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/getLimit()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///java/util/Base64$Encoder/encode(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/getPrefix()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/ScannerModel$FilterModel$ByteArrayComparableModel(org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/filter/WhileMatchFilter/getFilter()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getLatestVersionOnly()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/ScannerModel$FilterModel(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/RandomRowFilter/getChance()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStartRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumnInclusive()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getLimit()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStartRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/getRowRanges()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SkipFilter/getFilter()|"
    ],
    "v2Body": [
      "|java+method:///java/lang/Class/getSimpleName()|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///java/lang/Float/valueOf(float)|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/dropDependentColumn()|",
      "|java+method:///java/lang/Integer/valueOf(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumn()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/getStopRowKey()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/TimestampsFilter/getTimestamps()|",
      "|java+constructor:///java/util/ArrayList/ArrayList()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getOperator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/MultiRowRangeFilter$RowRange(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter$CompareOp/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMaxColumnInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getFamily()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStopRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PageFilter/getPageSize()|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getFilterIfMissing()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/util/Base64/encodeBytes(byte%5B%5D)|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getOffset()|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList/getFilters()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumn()|",
      "|java+method:///java/lang/Long/toString(long)|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStopRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/PrefixFilter/getPrefix()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/getLimit()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/getPrefix()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/ScannerModel$FilterModel$ByteArrayComparableModel(org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/toString()|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///org/apache/hadoop/hbase/filter/WhileMatchFilter/getFilter()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getLatestVersionOnly()|",
      "|java+method:///java/lang/Boolean/valueOf(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/getComparator()|",
      "|java+constructor:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/ScannerModel$FilterModel(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+method:///org/apache/hadoop/hbase/filter/CompareFilter/getOperator()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/filter/RandomRowFilter/getChance()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/isStartRowInclusive()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/getMinColumnInclusive()|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getComparator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/getLimit()|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.Object)|",
      "|java+method:///java/lang/Object/getClass()|",
      "|java+method:///java/util/List/iterator()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter$RowRange/getStartRow()|",
      "|java+method:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/getRowRanges()|",
      "|java+constructor:///java/lang/Object/Object()|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+method:///org/apache/hadoop/hbase/filter/DependentColumnFilter/getQualifier()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SkipFilter/getFilter()|"
    ],
    "affectedLib": "org.apache.hbase:hbase-common:2.1.0",
    "change": "UPDATED"
  },
  {
    "coordinatesV1": "org.apache.hbase:hbase-rest:2.0.2",
    "coordinatesV2": "org.apache.hbase:hbase-rest:2.1.0",
    "caller": "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/build()|",
    "called": "|java+method:///org/apache/hadoop/hbase/util/Base64/decode(java.lang.String)|",
    "v1Body": [
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/build()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setFilterIfMissing(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RowFilter/RowFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/QualifierFilter/QualifierFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/ColumnCountGetFilter(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setFilterIfMissing(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FirstKeyOnlyFilter/FirstKeyOnlyFilter()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/TimestampsFilter/TimestampsFilter(java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/ColumnRangeFilter(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///java/util/Base64$Decoder/decode(java.lang.String)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setLatestVersionOnly(boolean)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PageFilter/PageFilter(long)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/InclusiveStopFilter(byte%5B%5D)|",
      "|java+method:///java/util/Base64/getDecoder()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/build()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SkipFilter/SkipFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/WhileMatchFilter/WhileMatchFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/KeyOnlyFilter/KeyOnlyFilter()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FilterList/FilterList(org.apache.hadoop.hbase.filter.FilterList$Operator,java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/MultiRowRangeFilter(java.util.List)|",
      "|java+method:///org/apache/hadoop/hbase/CompareOperator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ValueFilter/ValueFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/DependentColumnFilter/DependentColumnFilter(byte%5B%5D,byte%5B%5D,boolean,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/SingleColumnValueFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RandomRowFilter/RandomRowFilter(float)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setLatestVersionOnly(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/MultipleColumnPrefixFilter(byte%5B%5D%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PrefixFilter/PrefixFilter(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/ColumnPrefixFilter(byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FamilyFilter/FamilyFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/SingleColumnValueExcludeFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/ColumnPaginationFilter(int,int)|"
    ],
    "v2Body": [
      "|java+method:///org/apache/hadoop/hbase/util/Base64/decode(java.lang.String)|",
      "|java+method:///java/lang/StringBuilder/append(java.lang.String)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel/build()|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$ByteArrayComparableModel/build()|",
      "|java+method:///java/util/List/size()|",
      "|java+method:///java/util/Iterator/next()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setFilterIfMissing(boolean)|",
      "|java+constructor:///java/lang/StringBuilder/StringBuilder()|",
      "|java+method:///java/util/List/get(int)|",
      "|java+method:///java/lang/Boolean/booleanValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RowFilter/RowFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/QualifierFilter/QualifierFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/Integer/intValue()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnCountGetFilter/ColumnCountGetFilter(int)|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setFilterIfMissing(boolean)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/ordinal()|",
      "|java+constructor:///java/util/ArrayList/ArrayList(int)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FirstKeyOnlyFilter/FirstKeyOnlyFilter()|",
      "|java+method:///java/lang/Long/parseLong(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/TimestampsFilter/TimestampsFilter(java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnRangeFilter/ColumnRangeFilter(byte%5B%5D,boolean,byte%5B%5D,boolean)|",
      "|java+method:///java/util/Iterator/hasNext()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/setLatestVersionOnly(boolean)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PageFilter/PageFilter(long)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/InclusiveStopFilter/InclusiveStopFilter(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SkipFilter/SkipFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/WhileMatchFilter/WhileMatchFilter(org.apache.hadoop.hbase.filter.Filter)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/KeyOnlyFilter/KeyOnlyFilter()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FilterList/FilterList(org.apache.hadoop.hbase.filter.FilterList$Operator,java.util.List)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultiRowRangeFilter/MultiRowRangeFilter(java.util.List)|",
      "|java+method:///org/apache/hadoop/hbase/CompareOperator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ValueFilter/ValueFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/filter/FilterList$Operator/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/DependentColumnFilter/DependentColumnFilter(byte%5B%5D,byte%5B%5D,boolean,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/SingleColumnValueFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///org/apache/hadoop/hbase/rest/model/ScannerModel$FilterModel$FilterType/valueOf(java.lang.String)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/RandomRowFilter/RandomRowFilter(float)|",
      "|java+method:///java/lang/Float/floatValue()|",
      "|java+method:///org/apache/hadoop/hbase/filter/SingleColumnValueFilter/setLatestVersionOnly(boolean)|",
      "|java+method:///java/util/List/add(java.lang.Object)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter/MultipleColumnPrefixFilter(byte%5B%5D%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/PrefixFilter/PrefixFilter(byte%5B%5D)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPrefixFilter/ColumnPrefixFilter(byte%5B%5D)|",
      "|java+constructor:///java/lang/RuntimeException/RuntimeException(java.lang.String)|",
      "|java+method:///java/util/List/iterator()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/FamilyFilter/FamilyFilter(org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/SingleColumnValueExcludeFilter/SingleColumnValueExcludeFilter(byte%5B%5D,byte%5B%5D,org.apache.hadoop.hbase.CompareOperator,org.apache.hadoop.hbase.filter.ByteArrayComparable)|",
      "|java+method:///java/lang/StringBuilder/toString()|",
      "|java+constructor:///org/apache/hadoop/hbase/filter/ColumnPaginationFilter/ColumnPaginationFilter(int,int)|"
    ],
    "affectedLib": "org.apache.hbase:hbase-common:2.1.0",
    "change": "UPDATED"
  }
]